{"version":3,"sources":["agent.js","images/songs-background.jpg","images/chemistry-background.jpg","images/chem-cash-logo.png","components/Theme.js","components/Logo.js","constants/actionTypes.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ListErrors.js","components/PageHeader.js","components/Settings.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/Alert.js","components/ActionButton.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteStudentAlert.js","components/Teacher/ResetStudentPasswordAlert.js","components/Teacher/StudentDialog.js","components/Teacher/CourseStudentList.js","components/Teacher/DeleteCourseAlert.js","components/Filedrop.js","components/WorkingSpinner.js","components/Teacher/ImportStudentsDialog.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/Teacher/ProcessSongRequestsDialog.js","components/Teacher/TeacherSongs.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/Home.js","components/Loading.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","reducers/auth.js","reducers/common.js","reducers/courses.js","reducers/nav.js","reducers/notifier.js","reducers/settings.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","encode","encodeURIComponent","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Courses","add","course","delete","slug","getAll","update","Settings","settings","Songs","id","forStudent","forTeacher","request","song","Students","courseId","import","users","Teachers","setToken","_token","module","exports","ChemCashTheme","createMuiTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","Logo","props","alt","src","logo","LOGIN","useStyles","makeStyles","theme","title","color","flexGrow","height","marginTop","spacing","marginRight","marginBottom","connect","state","navTabValue","nav","dispatch","onClickLogout","type","classes","currentUser","AppBar","position","Container","Toolbar","className","Typography","variant","align","charAt","toUpperCase","slice","Button","onClick","bottom","width","path","router","location","pathname","common","onTabChange","tabValue","redirectTo","value","onLoad","onUnload","userRole","role","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","LocalGroceryStore","People","SupervisorAccount","wrapper","PageWrapper","children","NotFound","exact","component","to","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","severity","pageHeader","alignItems","display","justifyContent","PageHeader","paper","onSubmitForm","payload","all","agent","snackbar","message","enableReinitialize","initialValues","defaultStudentPassword","songRequestPurchaseAmount","firstName","lastName","validationSchema","Yup","typeError","onSubmit","form","a","userSettings","resetForm","Fab","disabled","inProgress","SaveAlt","Paper","Grid","container","item","xs","gutterBottom","TextField","name","fullWidth","StudentAccount","button","dialog","backgroundImage","background","backgroundPosition","backgroundSize","input","main","inputLabel","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","down","handleClose","handleSubmit","Add","Dialog","onClose","artist","required","InputLabelProps","paddingLeft","songs","courseSongs","userSongs","mySongsOnly","setMySongsOnly","period","grid","FormControlLabel","control","Checkbox","checked","target","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","_id","Date","createdAt","toDateString","status","student","Collapse","in","action","IconButton","aria-label","size","Close","fontSize","actionButton","text","ActionButton","Tooltip","arrow","ev","stopPropagation","onFocus","courses","onAdd","onExit","onUpdate","handleClickOpen","handleSubmitAdd","handleSubmitUpdate","Edit","DialogTitle","DialogContent","DialogActions","onDelete","Delete","DialogContentText","autoFocus","LockOpen","PersonAdd","row","borderBottomColor","rowHeader","studentUsername","minWidth","StudentListRow","Chip","CourseStudentList","students","length","filedrop","backgroundColor","grey","borderRadius","flexDirection","outline","transition","filedropActive","light","contrastText","filedropReject","Filedrop","onFiledrop","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","parsedFile","parse","result","columns","skip_empty_lines","readAsBinaryString","useDropzone","accept","multiple","onDropAccepted","getRootProps","getInputProps","isDragActive","isDragReject","fontStyle","spinner","WorkingSpinner","CircularProgress","Publish","column","index","trim","filter","element","courseDetails","courseHeader","coursePeriod","courseTitle","CourseList","expanded","setExpanded","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","Avatar","ExpansionPanelDetails","importCount","pageLoaded","ProcessSongRequestDialog","PlaylistAddCheck","songId","onSubmitSong","mappedData","purchasedBy","flat","field","editable","render","rowData","lookup","approved","pending","rejected","removed","data","setData","options","paging","grouping","onRowDelete","oldData","resolve","reject","dataDelete","tableData","splice","teachers","teacher","teacherDetails","teacherHeader","teacherUsername","teacherName","TeacherList","StudentSongs","TeacherCourses","TeacherSongs","ManageTeachers","flexFlow","overflowY","Loading","elevation","auth","submitForm","margin","page","up","progress","left","top","LinearProgress","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","React","createRef","onSnackbarDismiss","closeSnackbar","maxSnack","ref","subtype","error","defaultState","appName","viewChangeCounter","appLoaded","sortByLastName","b","localeCompare","sortByPeriod","sort","courseCopy","toString","push","count","updatedUser","songsByUser","songsByCourse","promiseMiddleware","store","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.64e66942.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n// import request from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\n// const API_ROOT = 'http://localhost:4000/api'\nconst API_ROOT = 'https://chem-cash.herokuapp.com/api'\n\nconst encode = encodeURIComponent\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  del: (url) =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  getAll: () => requests.get('/courses'),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Settings = {\n  // get: () => requests.get('/user/settings'),\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Songs = {\n  delete: (id) => requests.del(`/songs/${id}`),\n  forStudent: () => requests.get('/songs/student'),\n  forTeacher: () => requests.get('/songs/teacher'),\n  request: (song) => requests.post('/songs', { song }),\n}\n\nconst Students = {\n  add: (user, courseId) =>\n    requests.post(`/users?courseId=${encode(courseId)}`, { user }),\n  delete: (username) => requests.del(`/users/student/${username}`),\n  import: (users, courseId) =>\n    requests.post(`/users/import?courseId=${encode(courseId)}`, { users }),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (username) => requests.del(`/users/teacher/${username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nexport default {\n  Auth,\n  Courses,\n  Settings,\n  Songs,\n  Students,\n  Teachers,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chemistry-background.58b9362d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.30174016.png\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = createMuiTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n})\n\nexport default ChemCashTheme\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH' //@deprecated?\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const DELETE_SONG_REQUEST = 'DELETE_SONG_REQUEST'\nexport const STUDENT_SONGS_PAGE_LOADED = 'STUDENT_SONGS_PAGE_LOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\nexport const TEACHER_SONGS_PAGE_LOADED = 'TEACHER_SONGS_PAGE_LOADED'\n\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const COURSE_DIALOG_UNLOADED = 'COURSE_DIALOG_UNLOADED'\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const DELETE_COURSE = 'DELETE_COURSE'\nexport const DELETE_STUDENT = 'DELETE_STUDENT'\nexport const IMPORT_STUDENTS = 'IMPORT_STUDENTS'\nexport const RESET_STUDENT_PASSWORD = 'RESET_STUDENT_PASSWORD'\nexport const STUDENT_DIALOG_UNLOADED = 'STUDENT_DIALOG_UNLOADED'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT'\n\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  LocalGroceryStore,\n  People,\n  QueueMusic,\n  Settings,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  path: state.router.location.pathname,\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ?? (userRole === 'student' ? 'account' : 'courses')\n    const redirectTo = `/${userRole}/${tabValue}`\n    props.onLoad(tabValue, redirectTo)\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalGroceryStore />}\n        value='accounts'\n      />\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      <BottomNavigationAction\n        label='Songs'\n        icon={<QueueMusic />}\n        value='songs'\n      />\n      {userRole === 'admin' && (\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n      )}\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  pageHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = (props) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.pageHeader}>\n      <Typography variant='h4'>{props.title}</Typography>\n      {props.children}\n    </div>\n  )\n}\n\nexport default PageHeader\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n})\n\nconst Settings = (props) => {\n  const { currentUser, settings } = props\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        defaultStudentPassword: settings?.defaultStudentPassword || '',\n        songRequestPurchaseAmount: settings?.songRequestPurchaseAmount || 0,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        defaultStudentPassword: Yup.string(),\n        songRequestPurchaseAmount: Yup.number().typeError('Numbers only'),\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n        if (!userSettings.password && props.currentUser.role !== 'student') {\n          delete userSettings.password\n        }\n        props.onSubmitForm(userSettings)\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={props.inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {props.inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={props.errors} />\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Song Requests\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Song request purchase amount'\n                  name='songRequestPurchaseAmount'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Student Accounts\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Default student password'\n                  name='defaultStudentPassword'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Account Details\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='First name'\n                  name='firstName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Last name'\n                  name='lastName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Button\n                color='primary'\n                disabled={props.inProgress}\n                size='large'\n                type='submit'\n                variant='contained'\n              >\n                {props.inProgress ? 'Saving...' : 'Save'}\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper> */}\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\n// import SongRequestDialog from './SongRequestDialog'\n// import agent from '../../agent'\n\n// import {\n//   STUDENT_SONGS_PAGE_LOADED,\n//   SONGS_PAGE_UNLOADED,\n// } from '../../constants/actionTypes'\n\n// const useStyles = makeStyles((theme) => ({\n//   buttonCell: {\n//     alignItems: 'center',\n//     display: 'flex',\n//     justifyContent: 'center',\n//   },\n//   paper: {\n//     padding: theme.spacing(4),\n//   },\n// }))\n\n// const mapStateToProps = (state) => ({\n//   ...state.songs,\n//   currentUser: state.common.currentUser,\n// })\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onLoad: (payload) => dispatch({ type: STUDENT_SONGS_PAGE_LOADED, payload }),\n//   onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n// })\n\nconst StudentAccount = (props) => {\n  // const { currentUser, userSongs, courseSongs } = props\n\n  // const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  // const classes = useStyles()\n\n  // const handleMySongsOnlyClick = (event) => {\n  //   setMySongsOnly(event.target.checked)\n  // }\n\n  // useEffect(() => {\n  //   props.onLoad(agent.Songs.forStudent())\n\n  //   return () => {\n  //     return props.onUnload()\n  //   }\n  // }, [])\n\n  return <div>Student Account</div>\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\nexport default StudentAccount\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport agent from '../../agent'\nimport background from './../../images/songs-background.jpg'\n\nimport { SUBMIT_SONG_REQUEST } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n})\n\nconst SongRequestDialog = ({ onSubmit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit(values)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(SongRequestDialog)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  makeStyles,\n} from '@material-ui/core'\n\nimport PageHeader from '../PageHeader'\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload) => dispatch({ type: STUDENT_SONGS_PAGE_LOADED, payload }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst StudentSongs = ({\n  course,\n  courseSongs,\n  currentUser,\n  onLoad,\n  onUnload,\n  userSongs,\n}) => {\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  const classes = useStyles()\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  useEffect(() => {\n    onLoad(agent.Songs.forStudent())\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          'Songs for ' +\n          (mySongsOnly ? currentUser.firstName : 'Period ' + course.period)\n        }\n      >\n        <SongRequestDialog />\n      </PageHeader>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Request Date</TableCell>\n              <TableCell>Song Title</TableCell>\n              <TableCell>Song Artist</TableCell>\n              {!mySongsOnly && <TableCell>Purchased by</TableCell>}\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mySongsOnly\n              ? userSongs &&\n                userSongs.map((song) => (\n                  <TableRow key={song._id}>\n                    <TableCell>\n                      {new Date(song.createdAt).toDateString()}\n                    </TableCell>\n                    <TableCell>{song.title}</TableCell>\n                    <TableCell>{song.artist}</TableCell>\n                    <TableCell>{song.status}</TableCell>\n                  </TableRow>\n                ))\n              : courseSongs &&\n                courseSongs.map((song) => (\n                  <TableRow key={song._id}>\n                    <TableCell>\n                      {new Date(song.createdAt).toDateString()}\n                    </TableCell>\n                    <TableCell>{song.title}</TableCell>\n                    <TableCell>{song.artist}</TableCell>\n                    <TableCell>\n                      {song.student.firstName} {song.student.lastName}\n                    </TableCell>\n                    <TableCell>{song.status}</TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Collapse, IconButton, makeStyles } from '@material-ui/core'\nimport { Alert as MuiAlert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\n\nimport { ALERT_CLOSED } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch({ type: ALERT_CLOSED }),\n})\n\nconst Alert = ({ children, onClose, severity, variant }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div className={classes.alert}>\n      <Collapse in={open}>\n        <MuiAlert\n          action={\n            <IconButton\n              aria-label='close'\n              color='inherit'\n              size='small'\n              onClick={() => {\n                setOpen(false)\n                onClose()\n              }}\n            >\n              <Close fontSize='inherit' />\n            </IconButton>\n          }\n          severity={severity || 'info'}\n          variant={variant || 'outlined'}\n        >\n          {children}\n        </MuiAlert>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Alert)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip title={props.action} arrow>\n      <IconButton\n        aria-label={props.action}\n        className={classes.actionButton}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSE_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: COURSE_DIALOG_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst CourseDialog = ({\n  course,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {course ? (\n        <ActionButton action='Edit course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Create course\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: course?.name || '',\n            period: course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.number().typeError('Numbers only').required('Required'),\n          })}\n          onSubmit={async (values) => {\n            course ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {course ? 'Edit Course' : 'Create Course'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {course\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_STUDENT } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (username, courseId) =>\n    dispatch({\n      type: DELETE_STUDENT,\n      payload: agent.Students.delete(username),\n      username,\n      courseId,\n      snackbar: { message: 'Student deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteStudentAlert = ({ course, onDelete, student }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(student.username, course._id)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Delete student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Delete fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete student?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this student? This action cannot be\n            undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteStudentAlert)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { LockOpen } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { RESET_STUDENT_PASSWORD } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.common.settings })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (user) =>\n    dispatch({\n      type: RESET_STUDENT_PASSWORD,\n      payload: agent.Students.update(user),\n      snackbar: { message: 'Password reset', variant: 'success' },\n    }),\n})\n\nconst ResetStudentPasswordAlert = ({\n  defaultStudentPassword,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    const user = { ...student, password: defaultStudentPassword }\n    onSubmit(user)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Reset password'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <LockOpen fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset password?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to reset this student's password to{' '}\n            <strong>{defaultStudentPassword}</strong>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='primary'\n            variant='contained'\n            autoFocus\n          >\n            Reset\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetStudentPasswordAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Edit, PersonAdd } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_STUDENT,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_STUDENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user, courseId) =>\n    dispatch({\n      type: ADD_STUDENT,\n      payload: agent.Students.add(user, courseId),\n      courseId,\n      snackbar: { message: 'Student added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n  onUpdate: (user, courseId) =>\n    dispatch({\n      type: UPDATE_STUDENT,\n      payload: agent.Students.update(user),\n      courseId,\n      snackbar: { message: 'Student updated', variant: 'success' },\n    }),\n})\n\nconst StudentDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    const user = { ...values }\n    const courseId = course._id\n    user.role = 'student'\n    onAdd(user, courseId)\n  }\n\n  const handleSubmitUpdate = (values) => {\n    const user = { ...student, ...values }\n    const courseId = course._id\n    onUpdate(user, courseId)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {student ? (\n        <ActionButton\n          action='Edit student'\n          onClick={handleClickOpen}\n          size='small'\n        >\n          <Edit fontSize='inherit' />\n        </ActionButton>\n      ) : (\n        <ActionButton action='Add student' onClick={handleClickOpen}>\n          <PersonAdd />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            firstName: student?.firstName || '',\n            lastName: student?.lastName || '',\n            username: student?.username || '',\n            password: !student ? defaultStudentPassword : '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            password: Yup.string().required(!student ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            student ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {student ? 'Edit Student' : 'Add Student'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!student || inProgress}\n                    label='Student Number'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {student\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDialog)\n","import React from 'react'\nimport { Chip, Typography, makeStyles } from '@material-ui/core'\n\nimport DeleteStudentAlert from './DeleteStudentAlert'\nimport ResetStudentPasswordAlert from './ResetStudentPasswordAlert'\nimport StudentDialog from './StudentDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    'alignItems': 'center',\n    'borderBottom': 'solid 2px white',\n    'display': 'flex',\n    'height': theme.spacing(5),\n    'justifyContent': 'space-between',\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderBottomColor: theme.palette.secondary.main,\n    },\n  },\n  rowHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  studentUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n}))\n\nconst StudentListRow = ({ course, student }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.row}>\n      <div className={classes.rowHeader}>\n        <Chip\n          color='primary'\n          label={student.username}\n          className={classes.studentUsername}\n        />\n        <Typography>\n          {student.lastName}, {student.firstName}\n        </Typography>\n      </div>\n      <div>\n        <ResetStudentPasswordAlert student={student} />\n        <StudentDialog course={course} student={student} />\n        <DeleteStudentAlert course={course} student={student} />\n      </div>\n    </div>\n  )\n}\n\nconst CourseStudentList = ({ course }) => {\n  return (\n    <>\n      <Typography variant='h6'>Students</Typography>{' '}\n      {course.students && course.students.length > 0 ? (\n        course.students.map((student) => {\n          return (\n            <StudentListRow\n              key={student._id}\n              course={course}\n              student={student}\n            />\n          )\n        })\n      ) : (\n        <div>\n          <Typography>No students have been added to this course</Typography>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CourseStudentList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_COURSE } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      slug,\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteCourseAlert = ({ course, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(course.slug)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete this course? This action will\n            permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this course. This action{' '}\n            <strong>cannot be undone</strong>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteCourseAlert)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport parse from 'csv-parse/lib/sync'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  filedrop: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[300],\n    borderRadius: theme.spacing(1),\n    color: theme.palette.grey[600],\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: '20px',\n    transition: 'all 0.25s ease-in-out',\n  },\n  filedropActive: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  filedropReject: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nfunction Filedrop({ onFiledrop }) {\n  const classes = useStyles()\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Due to {multiple: false} in useDropzone(), only one file will be received\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const parsedFile = parse(reader.result, {\n          columns: true,\n          skip_empty_lines: true,\n        })\n        onFiledrop(parsedFile)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    accept: 'text/csv, text/plain',\n    multiple: false,\n    onDropAccepted: onDrop,\n  })\n\n  return (\n    <div\n      {...getRootProps({\n        className: `${classes.filedrop} ${\n          isDragActive ? classes.filedropActive : ''\n        } ${isDragReject ? classes.filedropReject : ''}`,\n      })}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive && (\n        <Typography>\n          Drop a .csv file here or click to select a .csv file\n        </Typography>\n      )}\n      {isDragActive && !isDragReject && (\n        <Typography>Drop .csv file here</Typography>\n      )}\n      {isDragReject && <Typography>File type not accepted</Typography>}\n    </div>\n  )\n}\n\nexport default Filedrop\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst WorkingSpinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Working...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default WorkingSpinner\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Publish } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Filedrop from '../Filedrop'\nimport ListErrors from '../ListErrors'\nimport WorkingSpinner from '../WorkingSpinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_STUDENTS,\n  STUDENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrop: (users, courseId) =>\n    dispatch({\n      type: IMPORT_STUDENTS,\n      payload: agent.Students.import(users, courseId),\n      snackbar: { message: 'Students imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n})\n\nconst ImportStudentsDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onDrop,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleFiledrop = (file) => {\n    const column = Object.keys(file[0])\n    const users = file\n      .map((row, index) => {\n        // Parse csv data for Infinite Campus grade book export\n        if (index < 2) return null\n        const student = row[column[0]]\n        const user = {\n          firstName: student.split(',')[1].split('#')[0].trim(),\n          lastName: student.split(',')[0],\n          username: student.split('#')[1],\n          password: defaultStudentPassword,\n          role: 'student',\n        }\n        return user\n      })\n      .filter((element) => element !== null)\n    onDrop(users, course._id)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action='Import students' onClick={handleClickOpen}>\n        <Publish />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Students</DialogTitle>\n        <DialogContent>\n          {inProgress ? (\n            <WorkingSpinner message='Importing...' />\n          ) : (\n            <>\n              <Typography gutterBottom>\n                Students can be imported from a .csv file exported from Infinite\n                Campus\n              </Typography>\n              <Filedrop onFiledrop={handleFiledrop} />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportStudentsDialog)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport CourseStudentList from './CourseStudentList'\nimport DeleteCourseAlert from './DeleteCourseAlert'\nimport ImportStudentsDialog from './ImportStudentsDialog'\nimport StudentDialog from './StudentDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = ({ courses }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <CourseDialog course={course} />\n                  <StudentDialog course={course} />\n                  <ImportStudentsDialog course={course} />\n                  <DeleteCourseAlert course={course} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <CourseStudentList course={course} />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Alert from '../Alert'\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport PageHeader from '../PageHeader'\nimport WorkingSpinner from '../WorkingSpinner'\nimport agent from '../../agent'\n\nimport {\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n})\n\nconst TeacherCourses = ({\n  courses,\n  importCount,\n  onLoad,\n  onUnload,\n  pageLoaded,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Courses'>\n        <CourseDialog />\n      </PageHeader>\n      {importCount !== null && <Alert>{importCount} students imported</Alert>}\n      {pageLoaded ? (\n        <WorkingSpinner message='Loading...' />\n      ) : (\n        <CourseList courses={courses} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { PlaylistAddCheck } from '@material-ui/icons'\n\nimport background from './../../images/songs-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst ProcessSongRequestDialog = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = async (values) => {\n    setOpen(false)\n    await props.onSubmit(values)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <PlaylistAddCheck className={classes.icon} />\n        Process requests\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            await handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ProcessSongRequestDialog\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Chip } from '@material-ui/core'\n\nimport PageHeader from '../PageHeader'\nimport ProcessSongRequestsDialog from './ProcessSongRequestsDialog'\nimport agent from '../../agent'\n\nimport {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  SUBMIT_SONG_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../../constants/actionTypes'\nimport ProcessSongRequestDialog from './ProcessSongRequestsDialog'\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_SONG_REQUEST,\n      payload: agent.Songs.delete(id),\n      songId: id,\n      snackbar: { message: 'Song request removed', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forTeacher(),\n    }),\n  onSubmitSong: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst TeacherSongs = (props) => {\n  const { courses, onDelete } = props\n\n  const mappedData = courses\n    .map((course) =>\n      course.songs.map((song) => ({\n        createdAt: new Date(song.createdAt).toDateString(),\n        title: song.title,\n        artist: song.artist,\n        purchasedBy: `${song.student.firstName} ${song.student.lastName}`,\n        period: course.period,\n        status: song.status,\n        _id: song._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    { title: 'Request Date', field: 'createdAt', editable: 'never' },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    { title: 'Purchased by', field: 'purchasedBy', editable: 'never' },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData) => <Chip label={rowData.period} color='secondary' />,\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        approved: 'approved',\n        pending: 'pending',\n        rejected: 'rejected',\n        removed: 'removed',\n      },\n    },\n  ])\n\n  const [data, setData] = useState(mappedData)\n\n  const handleSubmitSongRequest = (values) => {\n    props.onSubmitSong(values)\n  }\n\n  useEffect(() => {\n    props.onLoad()\n\n    return () => {\n      return props.onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <>\n      <PageHeader title='Manage Song Requests'>\n        <ProcessSongRequestDialog onSubmit={handleSubmitSongRequest} />\n      </PageHeader>\n\n      <MaterialTable\n        title='Song Requests'\n        columns={columns}\n        data={data}\n        options={{ paging: false, grouping: true }}\n        editable={{\n          // onRowUpdate: (newData, oldData) =>\n          //   new Promise((resolve) => {\n          //     setTimeout(() => {\n          //       resolve()\n          //       if (oldData) {\n          //         setData((prevState) => {\n          //           const data = [...prevState.data]\n          //           data[data.indexOf(oldData)] = newData\n          //           return { ...prevState, data }\n          //         })\n          //       }\n          //     }, 600)\n          //   }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const dataDelete = [...data]\n              const index = oldData.tableData.id\n              dataDelete.splice(index, 1)\n              setData([...dataDelete])\n              onDelete(oldData._id)\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSongs)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst TeacherDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'teacher' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            teacher ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {teacher\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_TEACHER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (username) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(username),\n      username,\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteTeacherAlert = ({ onDelete, teacher }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(teacher.username)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete this teacher? This action will\n            permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this teacher. This action{' '}\n            <strong>cannot be undone</strong>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteTeacherAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherList = ({ teachers }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog teacher={teacher} />\n                  <DeleteTeacherAlert teacher={teacher} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Typography variant='h6'>Courses</Typography>\n                {teacher.courses && teacher.courses.length > 0 ? (\n                  teacher.courses.map((course) => {\n                    return (\n                      <div key={course._id}>\n                        <Typography>\n                          Period {course.period} | {course.name} |{' '}\n                          {course.students.length} students\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No courses have been created</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from './../PageHeader'\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n})\n\nconst ManageTeachers = ({ onLoad, onUnload, teachers }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Teachers'}>\n        <TeacherDialog />\n      </PageHeader>\n      <TeacherList teachers={teachers} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport TeacherSongs from './Teacher/TeacherSongs'\nimport ManageTeachers from './Admin/ManageTeachers'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/teacher/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/admin/courses' component={TeacherCourses} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n            <ProtectedRoute path='/admin/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Grid, LinearProgress, Paper, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './../Logo'\nimport LoginForm from './LoginForm'\nimport background from './../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst Login = (props) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => props.onUnload()\n  }, [])\n\n  if (props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {props.inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              <LoginForm />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ALERT_CLOSED,\n  ASYNC_START,\n  COURSE_DIALOG_UNLOADED,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  DELETE_STUDENT,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  importCount: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId) {\n          courseCopy.students = [\n            ...course.students,\n            action.payload.user,\n          ].sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ALERT_CLOSED:\n      return { ...state, importCount: null }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_STUDENT ||\n        action.subtype === ADD_COURSE ||\n        action.subtype === IMPORT_STUDENTS ||\n        action.subtype === UPDATE_COURSE ||\n        action.subtype === UPDATE_STUDENT\n      ) {\n        return { ...state, inProgress: true, errors: null }\n      } else if (action.subtype === COURSES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      }\n      break\n    case COURSE_DIALOG_UNLOADED:\n    case STUDENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case COURSES_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses, pageLoaded: false }\n    case COURSES_PAGE_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter((course) => course.slug !== action.slug),\n      }\n    case DELETE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students.filter(\n            (student) => student.username !== action.username\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case IMPORT_STUDENTS:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload.course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) =>\n              course._id === action.payload.course._id\n                ? action.payload.course\n                : course\n            ),\n        errors: action.error ? action.payload.errors : null,\n        importCount: action.error ? null : action.payload.count,\n        inProgress: false,\n      }\n    case RESET_STUDENT_PASSWORD:\n      return { ...state }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      const updatedUser = action.payload.user\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students\n            .map((student) =>\n              student._id.toString() === updatedUser._id.toString()\n                ? updatedUser\n                : student\n            )\n            .sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ADD_TEACHER,\n  DELETE_COURSE,\n  DELETE_SONG_REQUEST,\n  DELETE_STUDENT,\n  DELETE_TEACHER,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  SUBMIT_SONG_REQUEST,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n    case ADD_STUDENT:\n    case ADD_TEACHER:\n    case DELETE_COURSE:\n    case DELETE_SONG_REQUEST:\n    case DELETE_STUDENT:\n    case DELETE_TEACHER:\n    case IMPORT_STUDENTS:\n    case RESET_STUDENT_PASSWORD:\n    case SETTINGS_SAVED:\n    case SUBMIT_SONG_REQUEST:\n    case UPDATE_COURSE:\n    case UPDATE_STUDENT:\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SETTINGS_PAGE_UNLOADED:\n      return {}\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_TEACHER,\n  ASYNC_START,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [...state.teachers, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  course: '',\n  courses: [],\n  courseSongs: [],\n  errors: null,\n  inProgress: false,\n  userSongs: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case DELETE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      const courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.songs = courseCopy.songs.filter(\n          (song) => song._id.toString() !== action.songId.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case SONGS_PAGE_UNLOADED:\n      return defaultState\n    case STUDENT_SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case TEACHER_SONGS_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses }\n    default:\n      return state\n  }\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport settings from './reducers/settings'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    common,\n    courses,\n    nav,\n    notifier,\n    settings,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport ChemCashTheme from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={ChemCashTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Div100vh>\n            <Suspense fallback={<p>Loading...</p>}>\n              <Switch>\n                <Route exact path='/login' component={Login} />\n                <Route path='/' component={Home} />\n              </Switch>\n            </Suspense>\n          </Div100vh>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={ChemCashTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}