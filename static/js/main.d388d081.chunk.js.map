{"version":3,"sources":["images/chemistry-background.jpg","images/chem-cash-logo.png","images/chem-cash-prime-logo.png","images/songs-background.jpg","images/prime-darkmode.png","images/prime-sameday.png","images/prime-songremoval.png","images/prime-songs.png","images/prime-purchases.png","images/doc-may-profile.jpg","components/Theme.js","constants/actionTypes.js","components/LogoutButton.js","components/Student/AccountSuspendedDialog.js","components/Logo.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ControlledSwitch.js","components/ListErrors.js","components/PageHeader.js","components/Prime/PrimeBadge.js","components/Settings.js","components/ActionButton.js","components/Points.js","components/AccountBalance.js","components/InputBox.js","components/Products/ProductSelector.js","hooks.js","converter.js","components/Purchases/PurchaseDetailsList.js","components/Purchases/AddPurchaseDialog.js","components/DroppedChip.js","components/Notifications/NotificationDialog.js","components/Teacher/ResetStudentPasswordAlert.js","components/AutocompleteSelector.js","components/Passes/PassDialog.js","components/Teacher/BonusSelector.js","components/Teacher/TransactionDialog.js","components/AccountView.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/Alert.js","components/Teacher/EconomySummaryTable.js","components/Spinner.js","components/StatCard.js","transitions.js","components/Teacher/EconomyDialog.js","components/Teacher/StudentSearch.js","components/Teacher/CourseSelector.js","components/Teacher/StudentsTable.js","components/Teacher/BulkTransactionsDialog.js","components/Filedrop.js","parsers.js","components/Teacher/ImportScoresDialog.js","components/Teacher/ManageBonusesTable.js","components/Teacher/ManageBonusesDialog.js","components/Passes/ManagePassesTable.js","components/Passes/ManagePassesDialog.js","components/Teacher/UpdateAccountsMenu.js","components/Teacher/TeacherAccounts.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteStudentAlert.js","components/Teacher/StudentDialog.js","components/Teacher/StudentTransferDialog.js","components/Teacher/CourseStudentList.js","components/Teacher/DeleteCourseAlert.js","components/Teacher/ImportStudentsDialog.js","components/Teacher/TasksTable.js","components/Teacher/TasksDialog.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/FabBadge.js","components/Teacher/ProcessSongRequestsDialog.js","components/Teacher/TeacherSongs.js","components/Purchases/ManagePurchasesTable.js","components/Purchases/ProcessPurchasesDialog.js","components/Purchases/ManagePurchases.js","components/Admin/ResetWhatsNewAlert.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/ConfirmationDialog.js","components/BigButton.js","components/Prime/PrimeBanner.js","components/Prime/PrimeConfirmation.js","components/Prime/PrimeSignup.js","components/Prime/PrimeDialog.js","components/ImagePreview.js","components/TextFieldLimit.js","components/Products/ProductDialog.js","components/Products/DeleteProductDialog.js","components/Products/ProductsGallery.js","components/DialogAppBar.js","components/Purchases/ShoppingCart.js","components/Purchases/StudentPurchasesTable.js","components/Purchases/StudentPurchasesDialog.js","components/Products/Products.js","components/Home.js","components/Loading.js","components/About.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","components/WhatsNewDialog.js","reducers/auth.js","reducers/bonuses.js","reducers/common.js","reducers/courses.js","reducers/economy.js","reducers/nav.js","reducers/notifications.js","reducers/notifier.js","reducers/passes.js","reducers/products.js","reducers/purchases.js","reducers/scores.js","reducers/settings.js","reducers/tasks.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js","agent.js"],"names":["module","exports","ChemCashTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","ChemCashDarkTheme","createMuiTheme","type","ChemCashLightTheme","ASYNC_START","LOGIN","connect","dispatch","onLogout","Button","color","onClick","AccountSuspendedDialog","user","Dialog","open","dropped","DialogTitle","DialogContent","DialogActions","Logo","prime","props","alt","src","logoPrime","logo","useStyles","makeStyles","theme","height","marginBottom","spacing","marginTop","title","flexGrow","state","currentUser","common","navTabValue","nav","settings","classes","AppBar","position","Container","Toolbar","className","enabled","hasPrime","Typography","variant","align","charAt","toUpperCase","slice","bottom","width","zIndex","path","router","location","pathname","onLoad","tabValue","redirectTo","value","onTabChange","onUnload","userRole","role","beta","enableBetaFeatures","products","productsEnabled","songs","songRequestEnabled","store","storeEnabled","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","Store","SupervisorAccount","People","wrapper","PageWrapper","children","NotFound","exact","component","to","ControlledSwitch","controlledBy","disabled","name","useFormikContext","setFieldValue","useField","field","Switch","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","severity","headerLeft","alignItems","display","headerRight","justifyContent","pageHeader","marginRight","PageHeader","Grid","container","item","xs","main","margin","primeEnabled","size","Tooltip","aria-label","arrow","faFlask","info","backgroundColor","background","default","borderLeft","fontStyle","lock","marginLeft","paper","onSubmitForm","payload","Promise","all","agent","Auth","save","Settings","update","snackbar","message","onWhatsNewClick","viewedChanges","inProgress","SwitchLabel","status","enableReinitialize","initialValues","allowPurchasesWithInsufficientFunds","allowStudentHallpassCreation","darkMode","defaultHallpassDuration","defaultStudentPassword","enableHallpasses","firstName","hallpassPurchaseAmount","lastName","password","primeDarkModeEnabled","darkModeEnabled","primeHallpassDiscount","hallpassDiscount","primePurchaseAmount","purchaseAmount","primeSameDayDeliveryEnabled","sameDayDeliveryEnabled","primeSongRemovalEnabled","songRemovalEnabled","primeSongRequestPurchaseDiscount","songRequestPurchaseDiscount","primeStorePurchaseDiscount","storePurchaseDiscount","roomNumber","schoolDistrict","score100","scoreConverter","score90","score80","score70","score60","score50","songRemovalPurchaseAmount","songRemovalRequestEnabled","songRemovalRefundAmount","songRequestPurchaseAmount","taxRate","validationSchema","Yup","typeError","onSubmit","form","a","userSettings","100","90","80","70","60","50","40","30","20","10","0","resetForm","formik","Fab","SaveAlt","Paper","style","gutterBottom","TextField","fullWidth","FormControl","InputLabel","Select","MenuItem","Lock","actionButton","text","ActionButton","action","enterTouchDelay","IconButton","ev","stopPropagation","onFocus","Points","prefix","suffix","displayType","thousandSeparator","Math","round","insufficient","error","light","sufficient","success","borderRadius","white","textAlign","scores","balance","username","Scores","getStudentScores","cost","count","grey","InputBox","useState","inputValue","setInputValue","target","Products","getAll","allowAny","options","product","quantity","sort","b","localeCompare","Autocomplete","autoHighlight","freeSolo","getOptionLabel","getOptionSelected","opt","val","_id","groupBy","noOptionsText","onInputChange","renderInput","params","placeholder","required","renderOption","option","matches","match","parts","parse","part","index","fontWeight","highlight","useGetInvoice","quantities","primeRate","items","desc","imgUrl","photoUrl","max","maxPurchaseQuantity","onHand","price","qty","unit","subtotal","reduce","sum","i","taxes","total","invoice","convertGoogleLink","link","includes","fileIdMatch","convertScore","score","conversions","task","totalPoints","multiplier","nonZeroTotal","percent","floor","emptyCart","tableCellImg","actions","isPrime","showAddRow","setShowAddRow","newItem","setNewItem","handleAddRowClick","handleQtyUpdate","hasOwnProperty","setInvoice","TableContainer","Table","TableHead","TableRow","TableCell","colSpan","TableBody","length","row","productId","delete","Delete","maxOptions","push","getOptions","add","Check","Close","rowSpan","Add","purchases","onAddItem","onDeleteItem","onExit","purchase","Purchases","onUpdateItem","cart","student","setOpen","purchaseNote","setPurchaseNote","useTheme","fullScreen","useMediaQuery","down","handleClose","AddShoppingCart","maxWidth","onClose","note","DroppedChip","Chip","notifications","Notifications","clearAll","notification","AlertTitle","content","Students","btnSize","LockOpen","fontSize","DialogContentText","autoFocus","AutocompleteSelector","defaultValue","DESTINATIONS","ActivePassAlert","activePassExists","lastPass","duration","destination","moment","createdAt","format","StudentGeneratedPassAlert","allow","PassDisplay","pass","teacher","PassItemRow","titleCase","PassForm","allowStudentPasses","showForm","createdBy","doCharge","passes","getLastPass","Passes","onAdd","passStatus","setPassStatus","setActivePassExists","getHallpassAmount","getPassStatus","curTime","passTime","isSameDay","isSame","elapsedTime","diff","as","lastPassStatus","Wc","BonusSelector","bonuses","bonus","description","transaction","Transactions","typeTitle","handleSubmitAdd","Grade","ShoppingBasket","amount","amt","up","borderTop","textTransform","edit","typography","pxToRem","AccountHeader","doEdit","onEditClick","course","period","Edit","TransactionList","onDelete","onUpdate","transactions","data","setData","mapTransaction","createdAtString","mappedData","mapped","mapScore","editable","defaultSort","render","rowData","renderType","columns","localization","body","emptyDataSourceMessage","editRow","deleteText","actionsColumnIndex","paging","toolbar","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","id","onRowDelete","splice","setDoEdit","button","dialog","backgroundImage","backgroundPosition","backgroundSize","input","inputLabel","song","Songs","request","handleSubmit","artist","InputLabelProps","paddingLeft","forStudent","courseSongs","userSongs","mySongsOnly","setMySongsOnly","setColumns","allowDelete","lookup","approved","pendingApproval","pendingRemoval","rejected","removed","statusDescription","InfoOutlined","purchasedBy","grid","FormControlLabel","control","Checkbox","checked","deleteTooltip","saveTooltip","isDeletable","isDeleteHidden","disableClose","Collapse","in","EconomySummaryTable","accounts","account","accountTotal","totals","assessmentTotal","assessments","bonusTotal","purchaseTotal","songTotal","passTotal","grouping","boxShadow","minWidth","spinner","Spinner","CircularProgress","statAvatar","statCard","flexFlow","StatCard","Card","CardContent","Avatar","SlideUpTransition","React","forwardRef","ref","Slide","direction","Dashboard","Person","Group","prev","cur","Assignment","Money","MusicNote","elevation","overflow","economy","students","TransitionComponent","edge","search","courses","Courses","setMappedData","flat","shadows","onSelect","slug","tabIndex","StudentsTable","setSort","getNextSort","filter","fullName","nRowsSelected","onSelectionChange","rows","selection","tooltip","isFreeAction","curStudent","addMany","isClosed","isOpen","setCourse","setStudents","handleCourseSelect","handleStudentSelect","filedrop","flexDirection","outline","transition","filedropActive","contrastText","filedropReject","Filedrop","onFiledrop","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","parsedFile","result","relax_column_count","skip_empty_lines","readAsBinaryString","useDropzone","accept","multiple","onDropAccepted","getRootProps","getInputProps","isDragActive","isDragReject","parser","ccsd","usernames","pop","parsed","tasks","taskName","find","endsWith","column","parseFullName","first","last","element","evergreen","studentNumber","ScoreImportStepper","onDataChange","onShowImport","setFile","setTasks","handleTaskChange","tasksSelected","some","el","FormGroup","onImport","import","ready","setReady","importData","selected","Bonuses","addRowPosition","onRowAdd","active","expired","summary","PassTable","expanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","dataDelete","showTitle","setExpanded","handleExpandedChange","panel","isExpanded","AlarmOn","AlarmOff","UpdateAccountsMenu","menuAnchorEl","setMenuAnchorEl","menuSelection","setMenuSelection","handleMenuSelect","currentTarget","dataset","handleDialogClose","Menu","anchorEl","Boolean","data-type","ListItemIcon","Publish","ListItemText","Divider","LocalActivity","importSummary","setStudent","plural","tasksCreated","scoresImported","scoresUpdated","handleClickOpen","handleSubmitUpdate","courseId","PersonAdd","courseOut","courseIn","unenroll","enroll","Loop","ds","select","hover","rowHeader","studentUsername","StudentListRow","CourseStudentList","users","Tasks","minHeight","courseDetails","courseHeader","coursePeriod","courseTitle","CourseList","importCount","importFailed","pageLoaded","badge","left","top","FabBadge","anchorOrigin","horizontal","vertical","badgeContent","overlap","removalAlert","border","dark","h6","songInfo","statusButton","studentInfo","borderTopColor","borderTopStyle","borderTopWidth","paddingTop","studentName","isLoaded","setCount","setSong","setStatus","setStatusDescription","skippedSongs","setSkippedSongs","totalCount","setTotalCount","getSongCount","songCount","startsWith","getNextSong","nextSong","handleStatusButtonClick","handleStatusDescriptionChange","handleSubmitApproval","handleSubmitRemoval","refundAmount","removedBy","DroppedStudentAlert","PrimeAlert","PlaylistAddCheck","ButtonGroup","href","encodeURIComponent","getSpotifySearchUrl","ThumbUp","ThumbDown","RadioGroup","Radio","forTeacher","totalCost","totalItems","detailPanel","onRowClick","togglePanel","setPurchase","skippedPurchases","setSkippedPurchases","getPurchaseCount","handleSaveButtonClick","prevPurchaseId","nextPurchase","getNextPurchase","updatedPurchase","findIndex","prod","handleAddPurchaseItemClick","handleDeletePurchaseItemClick","handleUpdatePurchaseItemQuantity","onPageChange","onReset","Teachers","resetFlags","teachers","register","teacherDetails","teacherHeader","teacherUsername","teacherName","TeacherStats","addItems","countStudentSetting","setting","faCircleHalfStroke","faUserLargeSlash","faPersonBooth","TeacherCourses","countSetting","StatListItem","ListItem","ListItemAvatar","List","TeacherSettings","SettingValue","valueString","JSON","stringify","TeacherList","ConfirmationDialog","onCancel","cursor","fontFamily","h5","BigButton","getGradient","angle","banner","bannerLogo","bannerText","PrimeBanner","section","PrimeConfirmation","celebrate","numberOfPieces","recycle","any","listItem","discounts","faMusic","songRemoval","faVolumeXmark","faMoneyBillTrendUp","faTag","sameDay","faTruck","hallpass","faTicket","faMoneyBillWave","color1","color2","list","padLeft","padRight","paddingRight","h2","h1","h3","h4","sectionImage","songRemovalAd","right","songsAd","storeAd","PrimeSignup","isMobile","black","primeDarkModeAd","wrap","primeSongsAd","primeSongRemovalAd","primeStoreAd","primeSameDayAd","trigger","confirm","setConfirm","testPrime","setTestPrime","handleConfirm","showBanner","showButton","overflowX","overflowY","header","img","maxHeight","window","borderColor","borderStyle","borderWidth","ImagePreview","TextFieldLimit","inputProps","maxLength","limit","helperText","addIcon","updateIcon","CHAR_LIMITS","url","actionIcon","opacity","whiteSpace","tile","tileBar","paddingBottom","ProductsGallery","onAddToCart","onInventoryChange","isSmall","isMedium","cols","handleInventoryChangeClick","GridList","maxQuantityReached","GridListTile","GridListTileBar","placement","subtitle","Remove","DeleteProductDialog","handleAddToCartClick","Badge","DialogAppBar","cartIcon","getTotalItemsInCart","hasInsufficientFunds","onUpdateInventory","isTeacher","inStockProducts","outOfStockProducts","handleInventoryChange","PrimeDialog","StudentAccount","StudentSongs","TeacherAccounts","TeacherSongs","ManagePurchases","ManageTeachers","Loading","page","profile","float","About","Link","auth","login","submitForm","aboutLink","loginLink","textDecoration","progress","AboutLink","LoginLink","startIcon","ArrowBackIos","LinearProgress","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","createRef","onSnackbarDismiss","current","closeSnackbar","maxSnack","NewDate","date","NewItem","StudentWhatsNewContent","TeacherWhatsNewContent","subtype","defaultState","sortByDescription","appName","token","viewChangeCounter","appLoaded","spotifyTokens","undefined","sortByLastName","sortByPeriod","courseCopy","toString","failed","updatedUser","sortByCost","productIndex","isAdded","updatedQuantity","allowed","min","withoutDeleted","getTotals","sumTransactions","addScores","added","curUser","curUserId","usersAdded","unionBy","addTransaction","addBulkTransaction","deleteTransaction","deleted","updateTransaction","updated","addedTransactions","addedTranasctions","purchaseTransaction","addedBulkTransactions","deletedTransactions","addedScores","results","updatedTransactions","spotifyAuthUrl","songsByUser","songsByCourse","promiseMiddleware","next","v","then","currentView","getState","skipTracking","res","currentState","promise","response","localStorageMiddleware","localStorage","setItem","setToken","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","App","document","getElementById","superagent","superagentPromise","_superagent","global","API_ROOT","encode","responseBody","tokenPlugin","req","set","requests","del","use","get","post","put","Spotify","getAuthUrl","removeAuth","_token"],"mappings":"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N,EAAW,uCACrC,OAAQA,EAAOlP,MACb,IvGQsB,auGPtB,IvGS0B,iBuGRxB,OAAO,2BACFkC,GADL,IAEEG,YAAa6M,EAAOlL,QAExB,IvGGwB,euGFtB,MAAO,GACT,QACE,OAAO9B,ICZPy9B,GAAe,CACnB14B,OAAQ,KACR6R,cAAe,IAGF,cAAmC,IAAlC5W,EAAiC,uDAAzBy9B,GAAczwB,EAAW,uCAC/C,OAAQA,EAAOlP,MACb,IxGkFsC,6BwGjFpC,OAAO,2BACFkC,GADL,IAEE+E,OAAQiI,EAAOc,MAAQd,EAAO1F,QAAQvC,OAAS,KAC/C6R,cAAe5J,EAAOc,MAClB9N,EAAM4W,cACN5J,EAAO1F,QAAQsP,gBAEvB,IxG2EwC,+BwG1EtC,OAAO6mB,GACT,QACE,OAAOz9B,ICkBE,cAAyB,IAAxBA,EAAuB,uDAAf,GAAIgN,EAAW,uCACrC,OAAQA,EAAOlP,MACb,IzG4EqB,YyG3ErB,IzGZsB,ayGatB,IzGgFoB,WyG/EpB,IzGwCuB,cyGvCvB,IzGRuB,cyGSvB,IzGDuB,cyGEvB,IzGsB2B,kByGrB3B,IzGsB4B,mByGrB5B,IzGqEwB,eyGpExB,IzGhByB,gByGiBzB,IzGyEuB,cyGxEvB,IzGiC0B,iByGhC1B,IzGiD2B,kByGhD3B,IzGjC+B,sByGkC/B,IzGjB0B,iByGkB1B,IzGGuB,cyGFvB,IzGX0B,iByGY1B,IzGa8B,qByGZ9B,IzGHyB,gByGIzB,IzGrB2B,kByGsB3B,IzGrBwB,eyGsBxB,IzGrBkC,yByGsBlC,IzGnD0B,iByGoD1B,IzG2CmC,0ByG1CnC,IzG6C2B,kByG5C3B,IzG6CiC,wByG5CjC,IzG1C+B,sByG2C/B,IzG1CuC,8ByG2CvC,IzGoDwB,eyGnDxB,IzGnCyB,gByGoCzB,IzG2DuB,cyG1DvB,IzGc0B,iByGb1B,IzG9B0B,iByG+B1B,IzGZuB,cyGavB,IzGzB0B,iByG0B1B,IzGJ8B,qByGK9B,IzGaiC,wByGZ/B,OAAO,2BACFkC,GADL,IAEE8H,SAAUkF,EAAOc,MACb,KACAd,EAAOlF,WAEf,IzGjE2B,kByGkEzB,OAAO,2BAAK9H,GAAZ,IA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","file":"static/js/main.d388d081.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chemistry-background.11d1d297.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.2b9148cb.png\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-prime-logo.7fb758e0.png\";","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prime-darkmode.0ce7dead.png\";","module.exports = __webpack_public_path__ + \"static/media/prime-sameday.94aba20d.png\";","module.exports = __webpack_public_path__ + \"static/media/prime-songremoval.fa731870.png\";","module.exports = __webpack_public_path__ + \"static/media/prime-songs.ba7cf87f.png\";","module.exports = __webpack_public_path__ + \"static/media/prime-purchases.6c3bc375.png\";","module.exports = __webpack_public_path__ + \"static/media/doc-may-profile.f927335d.jpg\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = {\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n}\n\nexport const ChemCashDarkTheme = createMuiTheme({\n  ...ChemCashTheme,\n  palette: { ...ChemCashTheme.palette, type: 'dark' },\n})\n\nexport const ChemCashLightTheme = createMuiTheme({\n  ...ChemCashTheme,\n  palette: { ...ChemCashTheme.palette, type: 'light' },\n})\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const DELETE_SONG_REQUEST = 'DELETE_SONG_REQUEST'\nexport const SONG_REQUESTS_DIALOG_UNLOADED = 'SONG_REQUESTS_DIALOG_UNLOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const STUDENT_SONGS_PAGE_LOADED = 'STUDENT_SONGS_PAGE_LOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\nexport const SUBMIT_SONG_REMOVAL_REQUEST = 'SUBMIT_SONG_REMOVAL_REQUEST'\nexport const TEACHER_SONGS_PAGE_LOADED = 'TEACHER_SONGS_PAGE_LOADED'\nexport const UPDATE_SONG_REQUEST = 'UPDATE_SONG_REQUEST'\n\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const COURSE_DIALOG_UNLOADED = 'COURSE_DIALOG_UNLOADED'\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const DELETE_COURSE = 'DELETE_COURSE'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\n\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const DELETE_STUDENT = 'DELETE_STUDENT'\nexport const IMPORT_STUDENTS = 'IMPORT_STUDENTS'\nexport const MOVE_STUDENT = 'MOVE_STUDENT'\nexport const RESET_STUDENT_PASSWORD = 'RESET_STUDENT_PASSWORD'\nexport const STUDENT_DIALOG_UNLOADED = 'STUDENT_DIALOG_UNLOADED'\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT'\n\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\n\nexport const SPOTIFY_REMOVE_AUTH = 'SPOTIFY_REMOVE_AUTH'\nexport const SPOTIFY_LINKER_LOADED = 'SPOTIFY_LINKER_LOADED'\nexport const SPOTIFY_LINKER_UNLOADED = 'SPOTIFY_LINKER_UNLOADED'\n\nexport const IMPORT_SCORES = 'IMPORT_SCORES'\nexport const IMPORT_SCORES_DIALOG_UNLOADED = 'IMPORT_SCORES_DIALOG_UNLOADED'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const TASKS_DIALOG_LOADED = 'TASKS_DIALOG_LOADED'\nexport const TASKS_DIALOG_UNLOADED = 'TASKS_DIALOG_UNLOADED'\nexport const UPDATE_TASK = 'UPDATE_TASK'\n\nexport const ACCOUNT_BALANCE_LOADED = 'ACCOUNT_BALANCE_LOADED'\nexport const ACCOUNT_BALANCE_UNLOADED = 'ACCOUNT_BALANCE_UNLOADED'\nexport const ACCOUNT_VIEW_LOADED = 'ACCOUNT_VIEW_LOADED'\nexport const ACCOUNT_VIEW_UNLOADED = 'ACCOUNT_VIEW_UNLOADED'\nexport const ACCOUNTS_PAGE_UNLOADED = 'ACCOUNTS_PAGE_UNLOADED'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const ADD_TRANSACTIONS = 'ADD_TRANSACTIONS'\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION'\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION'\nexport const TRANSACTION_DIALOG_UNLOADED = 'TRANSACTION_DIALOG_UNLOADED'\nexport const TRANSACTIONS_DIALOG_UNLOADED = 'TRANSACTIONS_DIALOG_UNLOADED'\n\nexport const STUDENT_SEARCH_LOADED = 'STUDENT_SEARCH_LOADED'\nexport const STUDENT_SEARCH_UNLOADED = 'STUDENT_SEARCH_UNLOADED'\n\nexport const PRODUCTS_PAGE_LOADED = 'PRODUCTS_PAGE_LOADED'\nexport const PRODUCTS_PAGE_UNLOADED = 'PRODUCTS_PAGE_UNLOADED'\nexport const PRODUCT_DIALOG_UNLOADED = 'PRODUCT_DIALOG_UNLOADED'\nexport const PRODUCT_SELECTOR_LOADED = 'PRODUCT_SELECTOR_LOADED'\nexport const PRODUCT_SELECTOR_UNLOADED = 'PRODUCT_SELECTOR_UNLOADED'\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT'\n\nexport const WHATS_NEW_DIALOG_LOADED = 'WHATS_NEW_DIALOG_LOADED'\nexport const WHATS_NEW_DIALOG_UNLOADED = 'WHATS_NEW_DIALOG_UNLOADED'\nexport const WHATS_NEW_FLAGS_RESET = 'WHATS_NEW_FLAGS_RESET'\n\nexport const NOTIFICATION_DIALOG_LOADED = 'NOTIFICATION_DIALOG_LOADED'\nexport const NOTIFICATION_DIALOG_UNLOADED = 'NOTIFICATION_DIALOG_UNLOADED'\n\nexport const ECONOMY_DIALOG_LOADED = 'ECONOMY_DIALOG_LOADED'\nexport const ECONOMY_DIALOG_UNLOADED = 'ECONOMY_DIALOG_UNLOADED'\n\nexport const ADD_PURCHASE = 'ADD_PURCHASE'\nexport const ADD_PURCHASE_DIALOG_UNLOADED = 'ADD_PURCHASE_DIALOG_UNLOADED'\nexport const ADD_TO_CART = 'ADD_TO_CART'\nexport const DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT'\nexport const DELETE_PURCHASE = 'DELETE_PURCHASE'\nexport const PRIME_PURCHASE_DIALOG_UNLOADED = 'PRIME_PURCHASE_DIALOG_UNLOADED'\nexport const PURCHASES_DIALOG_UNLOADED = 'PURCHASES_DIALOG_UNLOADED'\nexport const STUDENT_CART_LOADED = 'STUDENT_CART_LOADED'\nexport const STUDENT_CART_UNLOADED = 'STUDENT_CART_UNLOADED'\nexport const STUDENT_DELETE_PURCHASE = 'STUDENT_DELETE_PURCHASE'\nexport const STUDENT_PURCHASES_LOADED = 'STUDENT_PURCHASES_LOADED'\nexport const STUDENT_PURCHASES_UNLOADED = 'STUDENT_PURCHASES_UNLOADED'\nexport const SUBMIT_PURCHASE = 'SUBMIT_PURCHASE'\nexport const SUBMIT_PRIME_PURCHASE = 'SUBMIT_PRIME_PURCHASE'\nexport const TEACHER_PURCHASES_LOADED = 'TEACHER_PURCHASES_LOADED'\nexport const TEACHER_PURCHASES_UNLOADED = 'TEACHER_PURCHASES_UNLOADED'\nexport const UPDATE_CART_PRODUCT_QUANTITY = 'UPDATE_CART_PRODUCT_QUANTITY'\nexport const UPDATE_PURCHASE = 'UPDATE_PURCHASE'\n\nexport const ADD_BONUS = 'ADD_BONUS'\nexport const DELETE_BONUS = 'DELETE_BONUS'\nexport const LOAD_BONUSES = 'LOAD_BONUSES'\nexport const UNLOAD_BONUSES = 'UNLOAD_BONUSES'\nexport const UPDATE_BONUS = 'UPDATE_BONUS'\n\nexport const ADD_PASS = 'ADD_PASS'\nexport const DELETE_PASS = 'DELETE_PASS'\nexport const GET_LAST_PASS = 'GET_LAST_PASS'\nexport const LOAD_STUDENT_PASSES = 'LOAD_STUDENT_PASSES'\nexport const LOAD_TEACHER_PASSES = 'LOAD_TEACHER_PASSES'\nexport const UNLOAD_MANAGE_PASSES = 'UNLOAD_MANAGE_PASSES'\nexport const UNLOAD_PASSES = 'UNLOAD_PASSES'\nexport const UPDATE_PASS = 'UPDATE_PASS'\n// export const X = 'X'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst LogoutButton = ({ onLogout }) => (\n  <Button color='inherit' onClick={onLogout}>\n    Logout\n  </Button>\n)\n\nexport default connect(() => ({}), mapDispatchToProps)(LogoutButton)\n","import React from 'react'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\n\nimport LogoutButton from '../LogoutButton'\n\nconst AccountSuspendedDialog = ({ user }) => {\n  return (\n    <Dialog open={user.dropped}>\n      <DialogTitle>Account Suspended</DialogTitle>\n      <DialogContent>\n        Your account has been suspended. Please speak with your teacher if you\n        have any questions regarding your account suspension.\n      </DialogContent>\n      <DialogActions>\n        <LogoutButton />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default AccountSuspendedDialog\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\nimport logoPrime from '../images/chem-cash-prime-logo.png'\n\nconst Logo = ({ prime, ...props }) => {\n  return (\n    <img\n      alt={`Chem Cash ${prime && 'Prime '}Logo`}\n      src={prime ? logoPrime : logo}\n      {...props}\n    />\n  )\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\nimport LogoutButton from './LogoutButton'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '65px',\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n  prime: state.common.settings.prime,\n})\n\nconst Header = ({ currentUser, navTabValue, prime }) => {\n  const classes = useStyles()\n  const title = navTabValue\n\n  if (currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo\n              className={classes.logo}\n              prime={prime.enabled && currentUser.hasPrime}\n            />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <LogoutButton />\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, () => ({}))(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  People,\n  QueueMusic,\n  Settings,\n  Store,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n  path: state.router.location.pathname,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n  const enabled = {\n    beta: props.settings.enableBetaFeatures,\n    products: props.settings.productsEnabled,\n    songs: props.settings.songRequestEnabled,\n    store: props.settings.storeEnabled,\n  }\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ??\n      (userRole === 'student'\n        ? 'account'\n        : userRole === 'admin'\n        ? 'teachers'\n        : 'accounts')\n    const redirectTo = `/${userRole}/${tabValue}`\n    if (enabled.store && tabValue === 'products') {\n      props.onLoad('store', redirectTo)\n    } else {\n      props.onLoad(tabValue, redirectTo)\n    }\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => handleTabChange(newValue)}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        {enabled.songs && (\n          <BottomNavigationAction\n            label='Songs'\n            icon={<QueueMusic />}\n            value='songs'\n          />\n        )}\n        {(enabled.products || enabled.store) && (\n          <BottomNavigationAction\n            label={enabled.store ? 'Store' : 'Products'}\n            icon={<Store />}\n            value='store'\n          />\n        )}\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  if (userRole === 'admin') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => handleTabChange(newValue)}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => handleTabChange(newValue)}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalAtm />}\n        value='accounts'\n      />\n      {enabled.songs && (\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n      )}\n      {(enabled.products || enabled.store) && (\n        <BottomNavigationAction\n          label={enabled.store ? 'Store' : 'Products'}\n          icon={<Store />}\n          value={enabled.store ? 'store' : 'products'}\n        />\n      )}\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React, { useEffect } from 'react'\nimport { Field, useField, useFormikContext } from 'formik'\nimport { Switch } from 'formik-material-ui'\n\n// @todo: this component throws an unresolved warning: 'Warning: property type=checkbox is missing from field productsEnabled, this can caused unexpected behaviour'\nconst ControlledSwitch = ({ controlledBy, disabled, label, name }) => {\n  const { values, setFieldValue } = useFormikContext()\n  const [field] = useField({ name, type: 'checkbox' })\n\n  useEffect(() => {\n    if (values[controlledBy] === true) {\n      setFieldValue(name, true)\n    }\n  }, [values[controlledBy], setFieldValue, name])\n\n  return (\n    <Field\n      component={Switch}\n      disabled={values[controlledBy]}\n      label={label}\n      {...field}\n    />\n  )\n}\n\nexport default ControlledSwitch\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  headerLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  headerRight: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  pageHeader: {\n    'marginBottom': theme.spacing(4),\n    '& button:not(:last-of-type)': { marginRight: theme.spacing(2) },\n  },\n}))\n\nconst PageHeader = ({ children, title }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={2} className={classes.pageHeader}>\n      <Grid item xs={12} md={6} className={classes.headerLeft}>\n        <Typography variant='h4'>{title}</Typography>\n      </Grid>\n      <Grid item xs={12} md={6} className={classes.headerRight}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Tooltip, makeStyles } from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFlask } from '@fortawesome/free-solid-svg-icons'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.primary.main,\n    margin: `0 ${theme.spacing(1)}px`,\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  primeEnabled: state.common.settings.prime.enabled,\n})\n\nconst PrimeBadge = ({ primeEnabled, size, title }) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      {primeEnabled && (\n        <Tooltip\n          title={title || 'Chem Cash Prime'}\n          aria-label={title || 'Chem Cash Prime'}\n          arrow\n        >\n          <span>\n            <FontAwesomeIcon\n              className={classes.root}\n              icon={faFlask}\n              size={size || 'lg'}\n            />\n          </span>\n        </Tooltip>\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(PrimeBadge)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { Select, Switch, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Fab,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { Lock, SaveAlt } from '@material-ui/icons'\n\nimport ControlledSwitch from './ControlledSwitch'\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\nimport PrimeBadge from './Prime/PrimeBadge'\n// import SpotifyLinker from './Teacher/SpotifyLinker'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  WHATS_NEW_DIALOG_LOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  info: {\n    backgroundColor: theme.palette.background.default,\n    borderLeft: `4px solid ${theme.palette.info.main}`,\n    fontStyle: 'italic',\n    padding: theme.spacing(1),\n  },\n  lock: {\n    alignItems: 'center',\n    color: theme.palette.secondary.main,\n    display: 'inline-flex',\n    fontStyle: 'italic',\n    marginLeft: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n  onWhatsNewClick: () =>\n    dispatch({\n      type: WHATS_NEW_DIALOG_LOADED,\n      payload: agent.Auth.save({ viewedChanges: false }),\n    }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  onWhatsNewClick,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  const primeMessage =\n    'Chem Cash Prime allows students to pay a one-time fee for access to special ' +\n    'features and discounts...just another way for students to spend their points!'\n\n  const SwitchLabel = ({ status, value }) =>\n    `${value} ${status ? 'enabled' : 'disabled'}`\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        allowPurchasesWithInsufficientFunds:\n          settings?.allowPurchasesWithInsufficientFunds || false,\n        allowStudentHallpassCreation:\n          settings?.allowStudentHallpassCreation || false,\n        darkMode: currentUser.darkMode || false,\n        defaultHallpassDuration: settings?.defaultHallpassDuration || 5,\n        defaultStudentPassword: settings?.defaultStudentPassword || '',\n        enableBetaFeatures: settings?.enableBetaFeatures || false,\n        enableHallpasses: settings?.enableHallpasses || false,\n        firstName: currentUser.firstName,\n        hallpassPurchaseAmount: settings?.hallpassPurchaseAmount || 0,\n        lastName: currentUser.lastName,\n        password: '',\n        primeDarkModeEnabled: settings?.prime?.darkModeEnabled || false,\n        primeEnabled: settings?.prime?.enabled || false,\n        primeHallpassDiscount: settings?.prime?.hallpassDiscount || 0,\n        primePurchaseAmount: settings?.prime?.purchaseAmount || 0,\n        primeSameDayDeliveryEnabled:\n          settings?.prime?.sameDayDeliveryEnabled || false,\n        primeSongRemovalEnabled: settings?.prime?.songRemovalEnabled || false,\n        primeSongRequestPurchaseDiscount:\n          settings?.prime?.songRequestPurchaseDiscount || 0,\n        primeStorePurchaseDiscount: settings?.prime?.storePurchaseDiscount || 0,\n        productsEnabled: settings?.productsEnabled || false,\n        roomNumber: settings?.roomNumber || 0,\n        schoolDistrict: settings.schoolDistrict || 'ccsd',\n        score100: settings?.scoreConverter?.[100] || 1200,\n        score90: settings?.scoreConverter?.[90] || 1000,\n        score80: settings?.scoreConverter?.[80] || 800,\n        score70: settings?.scoreConverter?.[70] || 600,\n        score60: settings?.scoreConverter?.[60] || 0,\n        score50: settings?.scoreConverter?.[50] || 0,\n        songRemovalPurchaseAmount: settings?.songRemovalPurchaseAmount || 0,\n        songRemovalRequestEnabled: settings?.songRemovalRequestEnabled || false,\n        songRemovalRefundAmount: settings?.songRemovalRefundAmount || 0,\n        songRequestEnabled: settings?.songRequestEnabled || false,\n        songRequestPurchaseAmount: settings?.songRequestPurchaseAmount || 0,\n        storeEnabled: settings?.storeEnabled || false,\n        taxRate: settings?.taxRate || 0,\n        title: currentUser?.title || '',\n      }}\n      validationSchema={Yup.object({\n        allowPurchasesWithInsufficientFunds: Yup.boolean(),\n        allowStudentHallpassCreation: Yup.boolean(),\n        darkMode: Yup.boolean(),\n        defaultHallpassDuration: Yup.number().typeError('Numbers only'),\n        defaultStudentPassword: Yup.string(),\n        enableBetaFeatures: Yup.boolean(),\n        enableHallpasses: Yup.boolean(),\n        firstName: Yup.string(),\n        hallpassPurchaseAmount: Yup.number().typeError('Numbers only'),\n        lastName: Yup.string(),\n        password: Yup.string(),\n        primeDarkModeEnabled: Yup.boolean(),\n        primeEnabled: Yup.boolean(),\n        primeHallpassDiscount: Yup.number().typeError('Numbers only'),\n        primePurchaseAmount: Yup.number().typeError('Numbers only'),\n        primeSameDayDeliveryEnabled: Yup.boolean(),\n        primeSongRemovalEnabled: Yup.boolean(),\n        primeSongRequestPurchaseDiscount:\n          Yup.number().typeError('Numbers only'),\n        primeStorePurchaseDiscount: Yup.number().typeError('Numbers only'),\n        productsEnabled: Yup.boolean(),\n        roomNumber: Yup.number(),\n        schoolDistrict: Yup.string(),\n        score100: Yup.number().typeError('Numbers only'),\n        score90: Yup.number().typeError('Numbers only'),\n        score80: Yup.number().typeError('Numbers only'),\n        score70: Yup.number().typeError('Numbers only'),\n        score60: Yup.number().typeError('Numbers only'),\n        score50: Yup.number().typeError('Numbers only'),\n        songRemovalPurchaseAmount: Yup.number().typeError('Numbers only'),\n        songRemovalRequestEnabled: Yup.boolean(),\n        songRemovalRefundAmount: Yup.number().typeError('Numbers only'),\n        songRequestEnabled: Yup.boolean(),\n        songRequestPurchaseAmount: Yup.number().typeError('Numbers only'),\n        storeEnabled: Yup.boolean(),\n        taxRate: Yup.number().typeError('Numbers only'),\n        title: Yup.string(),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password) delete userSettings.password\n\n        if (currentUser.role !== 'student') {\n          userSettings.prime = {\n            darkModeEnabled: values.primeDarkModeEnabled,\n            enabled: values.primeEnabled,\n            hallpassDiscount: values.primeHallpassDiscount,\n            purchaseAmount: values.primePurchaseAmount,\n            sameDayDeliveryEnabled: values.primeSameDayDeliveryEnabled,\n            songRemovalEnabled: values.primeSongRemovalEnabled,\n            songRequestPurchaseDiscount:\n              values.primeSongRequestPurchaseDiscount,\n            storePurchaseDiscount: values.primeStorePurchaseDiscount,\n          }\n\n          userSettings.scoreConverter = {\n            100: values.score100,\n            90: values.score90,\n            80: values.score80,\n            70: values.score70,\n            60: values.score60,\n            50: values.score50,\n            40: 0,\n            30: 0,\n            20: 0,\n            10: 0,\n            0: 0,\n          }\n        }\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      {(formik) => (\n        <Form>\n          <PageHeader title='Manage Account'>\n            <Button onClick={onWhatsNewClick} size='small'>\n              See What's New\n            </Button>\n            <Fab\n              color='primary'\n              disabled={inProgress}\n              type='sumbit'\n              variant='extended'\n            >\n              <SaveAlt className={classes.icon} />\n              {inProgress ? 'Saving...' : 'Save settings'}\n            </Fab>\n          </PageHeader>\n          <ListErrors errors={errors} />\n          {currentUser.role !== 'student' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Account Details\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    component={TextField}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    component={TextField}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                {currentUser.role === 'teacher' && (\n                  <>\n                    <Grid item xs={12} md={4}>\n                      <FormControl fullWidth>\n                        <InputLabel>Title</InputLabel>\n                        <Field component={Select} label='Title' name='title'>\n                          <MenuItem value='Dr.'>Dr.</MenuItem>\n                          <MenuItem value='Miss.'>Miss.</MenuItem>\n                          <MenuItem value='Mr.'>Mr.</MenuItem>\n                          <MenuItem value='Mrs.'>Mrs.</MenuItem>\n                          <MenuItem value='Ms.'>Ms.</MenuItem>\n                        </Field>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <FormControl fullWidth>\n                        <InputLabel>School District</InputLabel>\n                        <Field\n                          component={Select}\n                          label='School District'\n                          name='schoolDistrict'\n                        >\n                          <MenuItem value='ccsd'>CCSD</MenuItem>\n                          <MenuItem value='evergreen'>Evergreen</MenuItem>\n                        </Field>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='enableBetaFeatures'\n                          type='checkbox'\n                        />\n                        <SwitchLabel\n                          status={formik.values.enableBetaFeatures}\n                          value='Beta features'\n                        />\n                      </label>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Paper>\n          )}\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Account Security\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='New Password'\n                  name='password'\n                  type='password'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          {currentUser.role === 'student' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Appearance\n                  </Typography>\n                  <Grid item xs={12}>\n                    <label style={{ alignItems: 'center', display: 'flex' }}>\n                      <Field\n                        component={Switch}\n                        disabled={\n                          settings.prime.enabled &&\n                          settings.prime.darkModeEnabled &&\n                          !currentUser.hasPrime\n                        }\n                        name='darkMode'\n                        type='checkbox'\n                      />\n                      <SwitchLabel\n                        status={formik.values.darkMode}\n                        value='Dark mode'\n                      />\n                      {settings.prime.enabled &&\n                        settings.prime.darkModeEnabled &&\n                        !currentUser.hasPrime && (\n                          <span className={classes.lock}>\n                            <Lock /> (available with Chem Cash Prime)\n                          </span>\n                        )}\n                    </label>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role !== 'student' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Appearance\n                  </Typography>\n                  <Grid item xs={12}>\n                    <label>\n                      <Field\n                        component={Switch}\n                        name='darkMode'\n                        type='checkbox'\n                      />\n                      <SwitchLabel\n                        status={formik.values.darkMode}\n                        value='Dark mode'\n                      />\n                    </label>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role === 'teacher' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Hallpasses\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <label>\n                    <Field\n                      component={Switch}\n                      name='enableHallpasses'\n                      type='checkbox'\n                    />\n                    <SwitchLabel\n                      status={formik.values.enableHallpasses}\n                      value='Hallpasses'\n                    />\n                  </label>\n                </Grid>\n                {formik.values.enableHallpasses && (\n                  <>\n                    <Grid item xs={12} md={3}>\n                      <Field\n                        component={TextField}\n                        label='Hallpass Purchase Amount'\n                        name='hallpassPurchaseAmount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                      <Field\n                        component={TextField}\n                        label='Default Hallpass Duration (min)'\n                        name='defaultHallpassDuration'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={2}>\n                      <Field\n                        component={TextField}\n                        label='Classroom Number'\n                        name='roomNumber'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='allowStudentHallpassCreation'\n                          type='checkbox'\n                        />\n                        <SwitchLabel\n                          status={formik.values.allowStudentHallpassCreation}\n                          value='Student-generated hallpasses'\n                        />\n                      </label>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role === 'teacher' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Prime <PrimeBadge title={primeMessage} />\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <label>\n                    <Field\n                      component={Switch}\n                      name='primeEnabled'\n                      type='checkbox'\n                    />\n                    <SwitchLabel\n                      status={formik.values.primeEnabled}\n                      value='Prime'\n                    />\n                  </label>\n                </Grid>\n                {formik.values.primeEnabled && (\n                  <>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        component={TextField}\n                        label='Prime Purchase Amount'\n                        name='primePurchaseAmount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='primeDarkModeEnabled'\n                          type='checkbox'\n                        />\n                        <SwitchLabel\n                          status={formik.values.primeDarkModeEnabled}\n                          value='Dark Mode for Prime only'\n                        />\n                      </label>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='primeSameDayDeliveryEnabled'\n                          type='checkbox'\n                        />\n                        <SwitchLabel\n                          status={formik.values.primeSameDayDeliveryEnabled}\n                          value='Same-day delivery'\n                        />\n                      </label>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='primeSongRemovalEnabled'\n                          type='checkbox'\n                        />\n                        <SwitchLabel\n                          status={formik.values.primeSongRemovalEnabled}\n                          value='Song removal for Prime only'\n                        />\n                      </label>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        className={classes.info}\n                        display='block'\n                        variant='body2'\n                        gutterBottom\n                      >\n                        Values entered below will be treated as percentages. To\n                        disable any of these just set the value to zero.\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        label='Hallpass Discount'\n                        name='primeHallpassDiscount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        label='Song Request Discount'\n                        name='primeSongRequestPurchaseDiscount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        label='Store Discount'\n                        name='primeStorePurchaseDiscount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role === 'teacher' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Products and Online Purchases\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={formik.values.storeEnabled ? 6 : 12}>\n                  <label>\n                    <Field\n                      component={Switch}\n                      name='storeEnabled'\n                      type='checkbox'\n                    />\n                    <SwitchLabel\n                      status={formik.values.storeEnabled}\n                      value='Online purchases'\n                    />\n                  </label>\n                </Grid>\n                {formik.values.storeEnabled && (\n                  <Grid item xs={12} md={3}>\n                    <Field\n                      component={TextField}\n                      label='Tax Rate'\n                      name='taxRate'\n                      type='number'\n                      variant='outlined'\n                      fullWidth\n                    />\n                  </Grid>\n                )}\n                <Grid item xs={12} md={6}>\n                  <label>\n                    <ControlledSwitch\n                      controlledBy={'storeEnabled'}\n                      name='productsEnabled'\n                    />\n                    <SwitchLabel\n                      status={formik.values.productsEnabled}\n                      value='Products page'\n                    />\n                    {formik.values.storeEnabled && (\n                      <em> (required for online purchases)</em>\n                    )}\n                  </label>\n                </Grid>\n                {formik.values.storeEnabled && (\n                  <Grid item xs={12} md={6}>\n                    <label>\n                      <Field\n                        component={Switch}\n                        name='allowPurchasesWithInsufficientFunds'\n                        type='checkbox'\n                      />\n                      <SwitchLabel\n                        status={\n                          formik.values.allowPurchasesWithInsufficientFunds\n                        }\n                        value='Purchases with insufficient funds'\n                      />\n                    </label>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role === 'teacher' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Score Conversions\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Field\n                    component={TextField}\n                    label='100% and up'\n                    name='score100'\n                    type='number'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Field\n                    component={TextField}\n                    label='90% and up'\n                    name='score90'\n                    type='number'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Field\n                    component={TextField}\n                    label='80% and up'\n                    name='score80'\n                    type='number'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Field\n                    component={TextField}\n                    label='70% and up'\n                    name='score70'\n                    type='number'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Field\n                    component={TextField}\n                    label='60% and up'\n                    name='score60'\n                    type='number'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Field\n                    component={TextField}\n                    label='50% and up'\n                    name='score50'\n                    type='number'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role === 'teacher' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Song Requests\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <label>\n                    <Field\n                      component={Switch}\n                      name='songRequestEnabled'\n                      type='checkbox'\n                    />\n                    <SwitchLabel\n                      status={formik.values.songRequestEnabled}\n                      value='Song requests'\n                    />\n                  </label>\n                </Grid>\n                {formik.values.songRequestEnabled && (\n                  <Grid item xs={12} md={4}>\n                    <Field\n                      component={TextField}\n                      label='Song Request Purchase Amount'\n                      name='songRequestPurchaseAmount'\n                      type='number'\n                      variant='outlined'\n                      fullWidth\n                    />\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <Typography variant='h6' gutterBottom>\n                    Song Removal Requests\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <label>\n                    <ControlledSwitch\n                      controlledBy={'primeSongRemovalEnabled'}\n                      name='songRemovalRequestEnabled'\n                    />\n                    <SwitchLabel\n                      status={formik.values.songRemovalRequestEnabled}\n                      value='Song removal requests'\n                    />\n                    {formik.values.primeSongRemovalEnabled && (\n                      <em> (required for Prime)</em>\n                    )}\n                  </label>\n                </Grid>\n                {formik.values.songRemovalRequestEnabled && (\n                  <>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        label='Song Removal Purchase Amount'\n                        name='songRemovalPurchaseAmount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <Field\n                        component={TextField}\n                        label='Song Removal Refund Amount'\n                        name='songRemovalRefundAmount'\n                        type='number'\n                        variant='outlined'\n                        fullWidth\n                      />\n                    </Grid>\n                  </>\n                )}\n                {/* <Grid item xs={12} md={6}>\n                <SpotifyLinker />\n              </Grid> */}\n              </Grid>\n            </Paper>\n          )}\n          {currentUser.role === 'teacher' && (\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant='h5' gutterBottom>\n                    Student Accounts\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    component={TextField}\n                    label='Default Student Password'\n                    name='defaultStudentPassword'\n                    type='text'\n                    variant='outlined'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          )}\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = ({\n  action,\n  children,\n  className,\n  disabled,\n  onClick,\n  size,\n}) => {\n  const classes = useStyles()\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    onClick()\n  }\n\n  return (\n    <Tooltip arrow enterTouchDelay={0} title={action}>\n      <span>\n        <IconButton\n          aria-label={action}\n          className={`${classes.actionButton} ${className || ''}`}\n          disabled={disabled}\n          onClick={handleClick}\n          onFocus={(ev) => ev.stopPropagation()}\n          size={size}\n        >\n          {children}\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nconst Points = ({ prefix, suffix, value }) => (\n  <NumberFormat\n    displayType='text'\n    prefix={prefix || ''}\n    suffix={suffix || ' pts'}\n    thousandSeparator={true}\n    value={Math.round(value)}\n  />\n)\n\nexport default Points\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nimport Points from './Points'\nimport agent from '../agent'\n\nimport {\n  ACCOUNT_BALANCE_LOADED,\n  ACCOUNT_BALANCE_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  insufficient: {\n    backgroundColor: theme.palette.error.light,\n  },\n  sufficient: {\n    backgroundColor: theme.palette.success.light,\n  },\n  root: {\n    borderRadius: theme.spacing(1),\n    color: theme.palette.common.white,\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n    textAlign: 'center',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores.balance,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (username) =>\n    dispatch({\n      type: ACCOUNT_BALANCE_LOADED,\n      payload: agent.Scores.getStudentScores(username),\n    }),\n  onUnload: () => dispatch({ type: ACCOUNT_BALANCE_UNLOADED }),\n})\n\nconst AccountBalance = ({\n  balance,\n  cost,\n  count,\n  onLoad,\n  onUnload,\n  username,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad(username)\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    onLoad(username)\n  }, [count, username])\n\n  return (\n    <div\n      className={`${classes.root} ${\n        balance >= cost ? classes.sufficient : classes.insufficient\n      }`}\n    >\n      <Typography variant='h5'>\n        <Points value={balance} />\n      </Typography>\n      <Typography variant='subtitle2'>\n        <em>Account Balance</em>\n      </Typography>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountBalance)\n","import React, { useEffect, useState } from 'react'\nimport { TextField, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.background.default\n        : theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n}))\n\nconst InputBox = ({ label, name, onChange, value }) => {\n  const [inputValue, setInputValue] = useState(value)\n  const classes = useStyles()\n\n  const handleInputChange = (ev) => {\n    const value = ev.target.value\n    onChange(value)\n    setInputValue(value)\n  }\n\n  useEffect(() => {\n    setInputValue(value)\n  }, [value])\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        fullWidth\n        label={label}\n        name={name}\n        onChange={handleInputChange}\n        value={inputValue}\n      />\n    </div>\n  )\n}\n\nexport default InputBox\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport agent from '../../agent'\n\nimport {\n  PRODUCT_SELECTOR_LOADED,\n  PRODUCT_SELECTOR_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.products,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: PRODUCT_SELECTOR_LOADED,\n      payload: agent.Products.getAll(),\n    }),\n  onUnload: () => dispatch({ type: PRODUCT_SELECTOR_UNLOADED }),\n})\n\nconst ProductSelector = ({\n  allowAny,\n  onChange,\n  onLoad,\n  onUnload,\n  products,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  // Add stock status and sort products by stock status\n  const options = products\n    .map((product) => ({\n      ...product,\n      status: product.quantity > 0 ? 'In Stock' : 'Out of Stock',\n    }))\n    .sort((a, b) => -b.status.localeCompare(a.status))\n\n  return (\n    <Autocomplete\n      autoHighlight\n      freeSolo={allowAny ?? true}\n      getOptionLabel={(product) => product.name}\n      getOptionSelected={(opt, val) => opt._id === val._id}\n      groupBy={(product) => product.status}\n      noOptionsText='No products have been added'\n      onInputChange={(ev, value) => {\n        onChange(value)\n      }}\n      onChange={(ev, value) => {\n        onChange(value)\n      }}\n      options={options}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label='Description'\n          placeholder='Type or select a product'\n          required\n        />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option.name, inputValue)\n        const parts = parse(option.name, matches)\n\n        return (\n          <div>\n            {parts.map((part, index) => (\n              <span\n                key={index}\n                style={{\n                  fontWeight: part.highlight ? 700 : 400,\n                }}\n              >\n                {part.text}\n              </span>\n            ))}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSelector)\n","export const useGetInvoice = (products, quantities, taxRate, primeRate = 0) => {\n  if (products && quantities) {\n    const items = products.map((product) => ({\n      desc: product.name,\n      imgUrl: product.photoUrl,\n      max: product.maxPurchaseQuantity,\n      onHand: product.quantity,\n      price: quantities[product._id] * product.cost,\n      qty: quantities[product._id],\n      unit: product.cost,\n      _id: product._id,\n    }))\n\n    const subtotal = items\n      .map(({ price }) => price)\n      .reduce((sum, i) => sum + i, 0)\n\n    const prime = (primeRate / 100) * subtotal\n\n    const taxes =\n      primeRate > 0\n        ? (taxRate / 100) * (subtotal - prime)\n        : (taxRate / 100) * subtotal\n\n    const total = primeRate > 0 ? subtotal - prime + taxes : subtotal + taxes\n\n    const invoice = { subtotal, prime, taxes, total }\n\n    return { items, invoice }\n  } else {\n    return {}\n  }\n}\n","// Convert the given Google Drive photo link into a hosted version\nexport const convertGoogleLink = (link) => {\n  if (link.includes('drive.google.com')) {\n    const regex = /file\\/d\\/(.*)\\/view*/\n    const fileIdMatch = link.match(regex)\n    if (fileIdMatch !== null)\n      return `https://drive.google.com/uc?export=view&id=${fileIdMatch[1]}`\n  }\n  return link\n}\n\n// Convert the given score to points using the given conversions\nexport const convertScore = (score, conversions) => {\n  const total = score.task.totalPoints\n  const multiplier = score.task.multiplier\n  const nonZeroTotal = total === 0 ? 1 : total\n  const percent = Math.round((score.value / nonZeroTotal) * 100)\n  const conversionKey = Math.floor((percent > 100 ? 100 : percent) / 10) * 10\n  return conversions[conversionKey] * multiplier\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  makeStyles,\n} from '@material-ui/core'\nimport { Add, Check, Close, Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Points from '../Points'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport ProductSelector from '../Products/ProductSelector'\nimport { useGetInvoice } from '../../hooks'\nimport { convertGoogleLink } from '../../converter'\n\nconst useStyles = makeStyles((theme) => ({\n  emptyCart: {\n    textAlign: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  tableCellImg: {\n    'alignItems': 'center',\n    'display': 'flex',\n    '& img': {\n      height: '50px',\n      marginRight: theme.spacing(2),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  prime: state.common.settings.prime,\n  taxRate: state.common.settings.taxRate,\n})\n\nconst getOptions = (max) => {\n  const maxOptions = max === 0 ? 100 : max\n  let options = []\n  for (let i = 1; i <= maxOptions; i++) {\n    options.push(\n      <MenuItem value={i} key={i}>\n        {i}\n      </MenuItem>\n    )\n  }\n  return options\n}\n\nconst PurchaseDetailsList = ({\n  actions,\n  currentUser,\n  hasPrime,\n  prime,\n  products,\n  quantities,\n  taxRate,\n}) => {\n  const classes = useStyles()\n\n  const isPrime =\n    prime.enabled &&\n    prime.storePurchaseDiscount > 0 &&\n    (hasPrime || currentUser.hasPrime)\n\n  const { items, invoice } = useGetInvoice(\n    products,\n    quantities,\n    taxRate,\n    isPrime ? prime.storePurchaseDiscount : 0\n  )\n  const [showAddRow, setShowAddRow] = useState(false)\n  const [newItem, setNewItem] = useState({})\n\n  const handleAddItemClick = () => {\n    actions.add(newItem)\n    handleAddRowClick()\n  }\n\n  const handleAddRowClick = () => {\n    setShowAddRow(!showAddRow)\n    setNewItem({})\n  }\n\n  const handleDeleteProduct = (productId) => actions.delete(productId)\n\n  const handleQtyUpdate = (event) =>\n    actions.update(event.target.name, event.target.value)\n\n  useEffect(() => {\n    if (actions && actions.hasOwnProperty('setInvoice'))\n      actions.setInvoice(invoice)\n  }, [products, quantities, taxRate])\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align='center' colSpan={3}>\n              Purchase Details\n            </TableCell>\n            <TableCell align='right'>Cost</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Items</TableCell>\n            <TableCell align='right'>Quantity</TableCell>\n            <TableCell align='right'>Item Cost</TableCell>\n            <TableCell align='right'>Total Cost</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {items.length > 0 ? (\n            items.map((row) => (\n              <TableRow key={row.desc}>\n                <TableCell className={classes.tableCellImg}>\n                  <img height='50px' src={convertGoogleLink(row.imgUrl)} />\n                  {row.desc}\n                </TableCell>\n                <TableCell align='right'>\n                  {actions ? (\n                    <>\n                      <ActionButton\n                        action='Remove from cart'\n                        onClick={() => handleDeleteProduct(row._id)}\n                      >\n                        <Delete />\n                      </ActionButton>\n                      <Select\n                        name={row._id}\n                        onChange={handleQtyUpdate}\n                        value={row.qty}\n                      >\n                        {getOptions(\n                          (row.onHand < row.max && row.onHand > 0) ||\n                            row.max === 0\n                            ? row.onHand\n                            : row.max\n                        )}\n                      </Select>\n                    </>\n                  ) : (\n                    row.qty\n                  )}\n                </TableCell>\n                <TableCell align='right'>\n                  <Points value={row.unit} />\n                </TableCell>\n                <TableCell align='right'>\n                  <Points value={row.price} />\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={4} className={classes.emptyCart}>\n                Your cart is empty\n              </TableCell>\n            </TableRow>\n          )}\n\n          {showAddRow && (\n            <TableRow>\n              <TableCell colSpan={3}>\n                <ProductSelector\n                  allowAny={false}\n                  onChange={(product) =>\n                    product ? setNewItem(product) : setNewItem({})\n                  }\n                />\n              </TableCell>\n              <TableCell align='right'>\n                <ActionButton\n                  action='Add to cart'\n                  disabled={!newItem.hasOwnProperty('name')}\n                  onClick={handleAddItemClick}\n                >\n                  <Check />\n                </ActionButton>\n                <ActionButton action='Cancel' onClick={handleAddRowClick}>\n                  <Close />\n                </ActionButton>\n              </TableCell>\n            </TableRow>\n          )}\n\n          <TableRow>\n            <TableCell rowSpan={isPrime ? 4 : 3}>\n              {actions && actions.hasOwnProperty('add') && (\n                <Button\n                  color='primary'\n                  disabled={showAddRow}\n                  onClick={handleAddRowClick}\n                  size='small'\n                  variant='outlined'\n                >\n                  <Add className={classes.icon} />\n                  Add item\n                </Button>\n              )}\n            </TableCell>\n            <TableCell colSpan={2}>Subtotal</TableCell>\n            <TableCell align='right'>\n              <Points value={invoice.subtotal} />\n            </TableCell>\n          </TableRow>\n          {isPrime && (\n            <TableRow>\n              <TableCell>\n                Prime Discount\n                <PrimeBadge />\n              </TableCell>\n              <TableCell align='right'>{`${prime.storePurchaseDiscount}%`}</TableCell>\n              <TableCell align='right'>\n                <Points prefix='-' value={invoice.prime} />\n              </TableCell>\n            </TableRow>\n          )}\n          <TableRow>\n            <TableCell>Taxes & Fees</TableCell>\n            <TableCell align='right'>{`${taxRate}%`}</TableCell>\n            <TableCell align='right'>\n              <Points prefix='+' value={invoice.taxes} />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Total</TableCell>\n            <TableCell align='right'>\n              <Points value={invoice.total} />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default connect(mapStateToProps, {})(PurchaseDetailsList)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { AddShoppingCart } from '@material-ui/icons'\n\nimport AccountBalance from '../AccountBalance'\nimport ActionButton from '../ActionButton'\nimport InputBox from '../InputBox'\nimport ListErrors from '../ListErrors'\nimport PurchaseDetailsList from './PurchaseDetailsList'\nimport agent from '../../agent'\n\nimport {\n  ADD_PURCHASE,\n  ADD_PURCHASE_DIALOG_UNLOADED,\n  ADD_TO_CART,\n  DELETE_CART_PRODUCT,\n  UPDATE_CART_PRODUCT_QUANTITY,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.purchases,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddItem: (product) => dispatch({ type: ADD_TO_CART, product }),\n  onDeleteItem: (productId) =>\n    dispatch({ type: DELETE_CART_PRODUCT, productId }),\n  onExit: () => dispatch({ type: ADD_PURCHASE_DIALOG_UNLOADED }),\n  onSubmit: (purchase) =>\n    dispatch({\n      type: ADD_PURCHASE,\n      payload: agent.Purchases.add(purchase),\n      snackbar: { message: 'Purchase added', variant: 'success' },\n    }),\n  onUpdateItem: (productId, qty) =>\n    dispatch({ type: UPDATE_CART_PRODUCT_QUANTITY, productId, qty }),\n})\n\nconst AddPurchaseDialog = ({\n  cart,\n  errors,\n  inProgress,\n  onAddItem,\n  onDeleteItem,\n  onExit,\n  onSubmit,\n  onUpdateItem,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [invoice, setInvoice] = useState({})\n  const [purchaseNote, setPurchaseNote] = useState('')\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => setOpen(true)\n\n  const handleClose = () => {\n    setOpen(false)\n    setInvoice({})\n    setPurchaseNote('')\n  }\n\n  const handleSubmit = () => {\n    onSubmit({\n      note: purchaseNote,\n      products: cart.products,\n      quantities: cart.quantities,\n      status: 'approved',\n      student,\n    })\n    handleClose()\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action={'Add purchase'} onClick={handleClickOpen}>\n        <AddShoppingCart />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        fullWidth={true}\n        maxWidth={'md'}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Add Purchase</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <PurchaseDetailsList\n                actions={{\n                  add: onAddItem,\n                  delete: onDeleteItem,\n                  setInvoice: (invoice) => setInvoice(invoice),\n                  update: onUpdateItem,\n                }}\n                hasPrime={student.hasPrime}\n                products={cart.products}\n                quantities={cart.quantities}\n              />\n              <InputBox\n                label='Notes (optional)'\n                name='purchaseNote'\n                onChange={setPurchaseNote}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <div style={{ marginRight: 'auto' }}>\n            <AccountBalance cost={invoice.total} username={student.username} />\n          </div>\n          <Button\n            disabled={inProgress || cart.products.length === 0}\n            color='primary'\n            onClick={handleSubmit}\n            type='submit'\n            variant='contained'\n          >\n            {inProgress ? 'Adding...' : 'Add'}\n          </Button>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPurchaseDialog)\n","import React from 'react'\nimport { Chip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontStyle: 'italic',\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nconst DroppedChip = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Chip\n      className={classes.root}\n      color='secondary'\n      label='dropped'\n      size='small'\n      variant='outlined'\n      {...props}\n    />\n  )\n}\n\nexport default DroppedChip\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\n\nimport ListErrors from '../ListErrors'\n\nimport agent from '../../agent'\n\nimport {\n  NOTIFICATION_DIALOG_LOADED,\n  NOTIFICATION_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.notifications,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: NOTIFICATION_DIALOG_LOADED,\n      payload: agent.Notifications.getAll(),\n    }),\n  onUnload: () =>\n    dispatch({\n      type: NOTIFICATION_DIALOG_UNLOADED,\n      payload: agent.Notifications.clearAll(),\n    }),\n})\n\nconst NotificationDialog = ({ errors, notifications, onLoad, onUnload }) => {\n  const [open, setOpen] = useState(false)\n\n  const classes = useStyles()\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClose = () => {\n    setOpen(false)\n    onUnload()\n  }\n\n  useEffect(() => {\n    onLoad()\n  }, [])\n\n  // Automatically show the notification center if there are notifications\n  useEffect(() => {\n    if (notifications.length > 0) setOpen(true)\n  }, [notifications])\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      fullWidth={true}\n      maxWidth={'md'}\n      open={open}\n      onClose={handleClose}\n      onClick={(ev) => ev.stopPropagation()}\n      onFocus={(ev) => ev.stopPropagation()}\n    >\n      <DialogTitle>Notification Center</DialogTitle>\n      <DialogContent>\n        <ListErrors errors={errors} />\n        {notifications.length > 0 ? (\n          notifications.map((notification, index) => (\n            <Alert\n              className={classes.alert}\n              key={index}\n              severity={notification.type}\n            >\n              <AlertTitle>{notification.title}</AlertTitle>\n              {notification.content}\n            </Alert>\n          ))\n        ) : (\n          <Alert severity='info'>\n            <AlertTitle>All caught up!</AlertTitle>\n            You have no notifications at this time\n          </Alert>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant='contained'>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { LockOpen } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { RESET_STUDENT_PASSWORD } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  defaultStudentPassword: state.common.settings.defaultStudentPassword,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (user) =>\n    dispatch({\n      type: RESET_STUDENT_PASSWORD,\n      payload: agent.Students.update(user),\n      snackbar: { message: 'Password reset', variant: 'success' },\n    }),\n})\n\nconst ResetStudentPasswordAlert = ({\n  btnSize,\n  defaultStudentPassword,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    const user = { ...student, password: defaultStudentPassword }\n    onSubmit(user)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Reset password'\n        onClick={handleClickOpen}\n        size={btnSize ?? 'small'}\n      >\n        <LockOpen fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset Password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you want to reset{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            's password to <strong>{defaultStudentPassword}</strong>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='primary'\n            variant='contained'\n            autoFocus\n          >\n            Reset\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetStudentPasswordAlert)\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\nconst AutocompleteSelector = ({\n  allowAny,\n  defaultValue,\n  disabled,\n  label,\n  onChange,\n  options,\n}) => (\n  <Autocomplete\n    autoHighlight\n    defaultValue={defaultValue || null}\n    disabled={disabled || false}\n    freeSolo={allowAny ?? false}\n    onInputChange={(ev, value) => {\n      onChange(value)\n    }}\n    onChange={(ev, value) => {\n      onChange(value)\n    }}\n    options={options}\n    renderInput={(params) => <TextField {...params} label={label} />}\n  />\n)\n\nexport default AutocompleteSelector\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { Switch, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport moment from 'moment'\nimport { titleCase } from 'title-case'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Wc } from '@material-ui/icons'\nimport { Alert, AlertTitle } from '@material-ui/lab'\n\nimport ActionButton from '../ActionButton'\nimport AutocompleteSelector from '../AutocompleteSelector'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_PASS,\n  GET_LAST_PASS,\n  LOAD_STUDENT_PASSES,\n  UNLOAD_PASSES,\n} from '../../constants/actionTypes'\n\nconst DESTINATIONS = [\n  'classroom',\n  'counselor',\n  'gym',\n  'health office',\n  'library',\n  'office',\n  'restroom',\n  'social worker',\n]\n\nconst mapStateToProps = (state) => ({\n  ...state.passes,\n  ...state.common.settings,\n  role: state.common.currentUser.role,\n  teacher: state.common.settings.user,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getLastPass: () =>\n    dispatch({ type: GET_LAST_PASS, payload: agent.Passes.getLastPass() }),\n  onAdd: (pass) =>\n    dispatch({\n      type: ADD_PASS,\n      payload: agent.Passes.add(pass),\n      snackbar: {\n        message: 'Pass created',\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: UNLOAD_PASSES }),\n  onLoad: () =>\n    dispatch({ type: LOAD_STUDENT_PASSES, payload: agent.Passes.getAll() }),\n})\n\nconst ActivePassAlert = ({ activePassExists, lastPass, role }) => (\n  <>\n    {activePassExists && (\n      <Grid item xs={12}>\n        <Alert severity='error'>\n          <AlertTitle>Active Hallpass</AlertTitle>\n          {role === 'student'\n            ? `An active hallpass already exists for another student. Please try again in ${lastPass?.duration} minutes. If this is an emergency, please see your teacher.`\n            : `An active hallpass already exists for ${\n                lastPass?.student.firstName\n              } ${lastPass?.student.lastName} to go to the ${\n                lastPass?.destination\n              } and was created at ${moment(lastPass?.createdAt).format(\n                'LT'\n              )} with a duration of ${lastPass?.duration} minutes`}\n        </Alert>\n      </Grid>\n    )}\n  </>\n)\n\nconst StudentGeneratedPassAlert = ({ allow, role }) => (\n  <>\n    {!allow && role === 'student' && (\n      <Grid item xs={12}>\n        <Alert severity='info'>Please see your teacher for a hallpass</Alert>\n      </Grid>\n    )}\n  </>\n)\n\nconst PassDisplay = ({ onClose, pass, roomNumber, status, teacher }) => {\n  const PassItemRow = ({ title, value }) => (\n    <>\n      <Grid item xs={3}>\n        <Typography>\n          <b>{title}:</b>\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography>{value}</Typography>\n      </Grid>\n    </>\n  )\n\n  return (\n    <>\n      <DialogTitle>Hallpass</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          {status === 'expired' ? (\n            <Grid item xs={12}>\n              <Alert severity='error'>\n                <AlertTitle>Hallpass Expired</AlertTitle>\n                Your hallpass for today is expired. If you need a new hallpass,\n                please see your teacher.\n              </Alert>\n            </Grid>\n          ) : (\n            <>\n              <Grid item xs={12}>\n                <Alert severity='info'>\n                  This hallpass is good for {pass.duration} minutes and expires\n                  at{' '}\n                  {moment(pass.createdAt)\n                    .add(pass.duration, 'minutes')\n                    .format('LT')}\n                </Alert>\n              </Grid>\n              <Grid container spacing={1} item xs={12}>\n                <PassItemRow\n                  title={'Student'}\n                  value={`${pass.student.firstName} ${pass.student.lastName}`}\n                />\n                <PassItemRow title={'From'} value={roomNumber} />\n                <PassItemRow title={'To'} value={titleCase(pass.destination)} />\n                <PassItemRow\n                  title={'Date'}\n                  value={moment(pass.createdAt).format('ll')}\n                />\n                <PassItemRow\n                  title={'Time'}\n                  value={moment(pass.createdAt).format('LT')}\n                />\n                <PassItemRow\n                  title={'Teacher'}\n                  value={`${teacher.title} ${teacher.lastName}`}\n                />\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} variant='contained'>\n          Close\n        </Button>\n      </DialogActions>\n    </>\n  )\n}\n\nconst PassForm = ({\n  activePassExists,\n  allowStudentPasses,\n  cost,\n  duration,\n  errors,\n  inProgress,\n  lastPass,\n  onClose,\n  onSubmit,\n  role,\n}) => {\n  const showForm =\n    (role === 'student' && !activePassExists && allowStudentPasses) ||\n    role === 'teacher'\n  return (\n    <Formik\n      initialValues={{\n        createdBy: role,\n        destination: 'restroom',\n        doCharge: true,\n        duration: duration,\n      }}\n      validationSchema={Yup.object({\n        createdBy: Yup.string().required('Required'),\n        destination: Yup.string().required('Required'),\n        doCharge: Yup.boolean(),\n        duration: Yup.number().typeError('Numbers only').required('Required'),\n      })}\n      onSubmit={async (values) => {\n        onSubmit(values)\n      }}\n    >\n      {(formik) => (\n        <Form>\n          <DialogTitle>\n            {role === 'student' ? 'Purchase Hallpass' : 'Create Hallpass'}\n          </DialogTitle>\n          <DialogContent>\n            <ListErrors errors={errors} />\n\n            <Grid container spacing={2}>\n              <ActivePassAlert\n                activePassExists={activePassExists}\n                lastPass={lastPass}\n                role={role}\n              />\n              <StudentGeneratedPassAlert\n                allow={allowStudentPasses}\n                role={role}\n              />\n              {showForm && role === 'student' && (\n                <Grid item xs={12}>\n                  <Typography variant='body1' gutterBottom>\n                    This will charge your account <b>{cost} pts</b>\n                  </Typography>\n                  <Typography variant='body2' gutterBottom>\n                    <em>\n                      If you need a pass to a different destination or for a\n                      longer duration, please see your teacher\n                    </em>\n                  </Typography>\n                </Grid>\n              )}\n              {showForm && (\n                <Grid item xs={12} md={6}>\n                  <AutocompleteSelector\n                    allowAny\n                    defaultValue='restroom'\n                    disabled={inProgress || role === 'student'}\n                    label='Destination'\n                    onChange={(value) => {\n                      formik.setFieldValue('destination', value)\n                    }}\n                    options={DESTINATIONS}\n                  />\n                </Grid>\n              )}\n              {showForm && (\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress || role === 'student'}\n                    label='Duration (minutes)'\n                    name='duration'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              )}\n              {role === 'teacher' && (\n                <Grid item xs={12} md={6}>\n                  <label>\n                    <Field component={Switch} name='doCharge' type='checkbox' />\n                    <b>Cost: </b>\n                    {formik.values.doCharge ? `${cost} pts` : 'Free'}\n                  </label>\n                </Grid>\n              )}\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            {showForm && (\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {inProgress ? 'Creating...' : 'Create'}\n              </Button>\n            )}\n            <Button disabled={inProgress} onClick={onClose} variant='contained'>\n              {showForm ? 'Cancel' : 'Close'}\n            </Button>\n          </DialogActions>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nconst PassDialog = ({\n  allowStudentHallpassCreation,\n  defaultHallpassDuration,\n  enableHallpasses,\n  errors,\n  getLastPass,\n  hallpassPurchaseAmount,\n  inProgress,\n  lastPass,\n  onAdd,\n  onExit,\n  onLoad,\n  passes,\n  prime,\n  role,\n  roomNumber,\n  student,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [passStatus, setPassStatus] = useState(null)\n  const [activePassExists, setActivePassExists] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const getHallpassAmount = () =>\n    prime.enabled && student.hasPrime\n      ? (1 - prime.hallpassDiscount / 100) * hallpassPurchaseAmount\n      : hallpassPurchaseAmount\n\n  const handleSubmitAdd = (values) => {\n    onAdd({\n      cost: values.doCharge || role === 'student' ? getHallpassAmount() : 0,\n      createdBy: values.createdBy,\n      destination: values.destination,\n      duration: values.duration,\n      student,\n    })\n  }\n\n  const getPassStatus = (passes) => {\n    if (passes.length > 0) {\n      const pass = passes[0]\n      const curTime = moment()\n      const passTime = moment(pass.createdAt)\n      const isSameDay = passTime.isSame(curTime, 'day')\n      const elapsedTime = moment.duration(curTime.diff(passTime)).as('minutes')\n      if (!isSameDay) return null\n      if (elapsedTime > pass.duration) return 'expired'\n      return 'active'\n    }\n    return null\n  }\n\n  useEffect(() => {\n    // Close the dialog for teachers only if there are no errors\n    if (role === 'teacher' && !inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  useEffect(() => {\n    // Load pass data only when dialog is opened by a student user\n    if (open && role === 'student') onLoad()\n\n    // Load last pass data for all users\n    if (open) getLastPass()\n  }, [open])\n\n  useEffect(() => {\n    if (role === 'student') setPassStatus(getPassStatus(passes))\n  }, [passes])\n\n  useEffect(() => {\n    const lastPassStatus = lastPass ? getPassStatus([lastPass]) : null\n    setActivePassExists(lastPassStatus === 'active' ? true : false)\n  }, [lastPass])\n\n  return (\n    <>\n      {enableHallpasses && (\n        <ActionButton\n          action={role === 'teacher' ? 'Create hallpass' : 'Purchase hallpass'}\n          onClick={handleClickOpen}\n        >\n          <Wc />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        fullWidth={true}\n        maxWidth={'md'}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        {passStatus && passes.length > 0 ? (\n          <PassDisplay\n            onClose={handleClose}\n            pass={passes[0]}\n            roomNumber={roomNumber}\n            status={passStatus}\n            teacher={teacher}\n          />\n        ) : (\n          <PassForm\n            activePassExists={activePassExists}\n            allowStudentPasses={allowStudentHallpassCreation}\n            cost={getHallpassAmount()}\n            duration={defaultHallpassDuration}\n            errors={errors}\n            inProgress={inProgress}\n            lastPass={lastPass}\n            onClose={handleClose}\n            onSubmit={handleSubmitAdd}\n            role={role}\n          />\n        )}\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PassDialog)\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nconst BonusSelector = ({ allowAny, bonuses, onChange }) => (\n  <Autocomplete\n    autoHighlight\n    freeSolo={allowAny ?? true}\n    getOptionLabel={(bonus) => bonus.description}\n    getOptionSelected={(opt, val) => opt._id === val._id}\n    noOptionsText='No bonuses have been added'\n    onInputChange={(ev, value) => {\n      onChange(value)\n    }}\n    onChange={(ev, value) => {\n      onChange(value)\n    }}\n    options={bonuses}\n    renderInput={(params) => (\n      <TextField\n        {...params}\n        label='Description'\n        placeholder='Type or select a bonus'\n        required\n      />\n    )}\n    renderOption={(option, { inputValue }) => {\n      const matches = match(option.description, inputValue)\n      const parts = parse(option.description, matches)\n\n      return (\n        <div>\n          {parts.map((part, index) => (\n            <span\n              key={index}\n              style={{\n                fontWeight: part.highlight ? 700 : 400,\n              }}\n            >\n              {part.text}\n            </span>\n          ))}\n        </div>\n      )\n    }}\n  />\n)\n\nexport default BonusSelector\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Grade, ShoppingBasket } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport BonusSelector from './BonusSelector'\nimport ListErrors from '../ListErrors'\nimport ProductSelector from '../Products/ProductSelector'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTION,\n  TRANSACTION_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n  bonuses: state.bonuses.bonuses,\n  products: state.products.products,\n  taxRate: state.common.settings.taxRate,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transaction) =>\n    dispatch({\n      type: ADD_TRANSACTION,\n      payload: agent.Transactions.add(transaction),\n      snackbar: {\n        message: `${transaction.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTION_DIALOG_UNLOADED }),\n})\n\nconst TransactionDialog = ({\n  bonuses,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  student,\n  taxRate,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const getCost = (amt) => Math.round(amt * (taxRate / 100 + 1))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, student, type: type.toLowerCase(), typeTitle: type })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton\n        action={`Add ${\n          type === 'Purchase' ? 'quick' : ''\n        } ${type.toLowerCase()}`}\n        onClick={handleClickOpen}\n      >\n        {type === 'Bonus' && <Grade />}\n        {type === 'Purchase' && <ShoppingBasket />}\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        fullWidth={true}\n        maxWidth={'md'}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            amount: '',\n            description: '',\n            productId: '',\n          }}\n          validationSchema={Yup.object({\n            amount: Yup.number().typeError('Numbers only').required('Required'),\n            description: Yup.string().required('Required'),\n            productId: Yup.string(),\n          })}\n          onSubmit={async (values) => {\n            handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>\n                Add {type === 'Purchase' && 'Quick'} {type}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    {type === 'Bonus' ? (\n                      <BonusSelector\n                        bonuses={bonuses}\n                        onChange={(bonus) => {\n                          if (typeof bonus === 'string') {\n                            formik.setFieldValue('description', bonus)\n                          } else if (bonus && typeof bonus === 'object') {\n                            formik.setFieldValue('amount', bonus.amount)\n                            formik.setFieldValue(\n                              'description',\n                              bonus.description\n                            )\n                          } else {\n                            formik.setFieldValue('amount', '')\n                            formik.setFieldValue('description', '')\n                          }\n                        }}\n                      />\n                    ) : (\n                      <ProductSelector\n                        onChange={(product) => {\n                          if (typeof product === 'string') {\n                            formik.setFieldValue('description', product)\n                          } else if (product && typeof product === 'object') {\n                            formik.setFieldValue(\n                              'amount',\n                              getCost(product.cost)\n                            )\n                            formik.setFieldValue('description', product.name)\n                            formik.setFieldValue('productId', product._id)\n                          } else {\n                            formik.setFieldValue('amount', '')\n                            formik.setFieldValue('description', '')\n                          }\n                        }}\n                      />\n                    )}\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Amount'\n                      name='amount'\n                      type='text'\n                      fullWidth\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  disabled={inProgress}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  {inProgress ? 'Adding...' : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { Close, Edit } from '@material-ui/icons'\n\nimport ActionButton from './ActionButton'\nimport AddPurchaseDialog from './Purchases/AddPurchaseDialog'\nimport DroppedChip from './DroppedChip'\nimport NotificationDialog from './Notifications/NotificationDialog'\nimport ResetStudentPasswordAlert from './Teacher/ResetStudentPasswordAlert'\nimport PassDialog from './Passes/PassDialog'\nimport Points from './Points'\nimport PrimeBadge from './Prime/PrimeBadge'\nimport TransactionDialog from './Teacher/TransactionDialog'\nimport agent from '../agent'\nimport { convertScore } from '../converter'\n\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'flex-end',\n    },\n  },\n  balance: {\n    'textAlign': 'center',\n    '& > h6': {\n      borderTop: '1px solid #ccc',\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  edit: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  subtotal: {\n    'position': 'relative',\n    'textAlign': 'center',\n    '& > p': {\n      position: 'relative',\n      bottom: -theme.spacing(1),\n    },\n    '& > h6': {\n      fontSize: theme.typography.pxToRem(12),\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  unit: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  conversions: state.scores.conversions,\n  storeEnabled: state.common.settings.storeEnabled,\n  total: state.scores.total,\n  transactions: state.scores.transactions,\n  userRole: state.common.currentUser.role,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (transaction) =>\n    dispatch({\n      type: DELETE_TRANSACTION,\n      payload: agent.Transactions.delete(transaction),\n      snackbar: { message: 'Transaction deleted', variant: 'success' },\n    }),\n  onLoad: (username) =>\n    dispatch({\n      type: ACCOUNT_VIEW_LOADED,\n      payload: agent.Scores.getStudentScores(username),\n    }),\n  onUnload: () => dispatch({ type: ACCOUNT_VIEW_UNLOADED }),\n  onUpdate: (transaction) =>\n    dispatch({\n      type: UPDATE_TRANSACTION,\n      payload: agent.Transactions.update(transaction),\n      snackbar: { message: 'Transaction updated', variant: 'success' },\n    }),\n})\n\nconst AccountHeader = ({\n  doEdit,\n  onEditClick,\n  storeEnabled,\n  student,\n  total,\n  userRole,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <Typography gutterBottom variant='h5'>\n            {student.firstName} {student.lastName}{' '}\n            {student.hasPrime && <PrimeBadge />}\n            {student.dropped && <DroppedChip />}\n          </Typography>\n          {student.course && (\n            <Typography gutterBottom color='textSecondary' variant='subtitle1'>\n              {student.course} &middot; Period {student.period}\n            </Typography>\n          )}\n          <Typography color='textSecondary' variant='subtitle2'>\n            {student.username}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={4} container>\n          <Grid item xs={12} className={classes.balance}>\n            <Typography\n              color={total?.balance >= 0 ? 'primary' : 'secondary'}\n              variant='h4'\n            >\n              <Points suffix=' ' value={total?.balance} />\n              <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='textSecondary' variant='subtitle2'>\n              Balance\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              <Points suffix=' ' value={total?.bonuses} />\n              <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Bonuses\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='secondary' variant='body1'>\n              <Points suffix=' ' value={total?.purchases} />\n              <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='secondary' variant='subtitle2'>\n              Purchases\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              <Points suffix=' ' value={total?.scores} />\n              <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Assessments\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={4} className={classes.actions}>\n          <PassDialog student={student} />\n          {userRole === 'teacher' ? (\n            <>\n              <TransactionDialog student={student} type='Bonus' />\n              <TransactionDialog student={student} type='Purchase' />\n              {storeEnabled && <AddPurchaseDialog student={student} />}\n              <ActionButton\n                action={doEdit ? 'Finish editing' : 'Edit transactions'}\n                className={doEdit && classes.edit}\n                onClick={onEditClick}\n              >\n                {doEdit ? <Close /> : <Edit />}\n              </ActionButton>\n              <ResetStudentPasswordAlert btnSize='medium' student={student} />\n            </>\n          ) : (\n            <NotificationDialog />\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nconst TransactionList = ({\n  conversions,\n  doEdit,\n  onDelete,\n  onUpdate,\n  transactions,\n}) => {\n  const [data, setData] = useState([])\n\n  const mapTransaction = (transaction) => ({\n    amount: transaction.amount,\n    createdAt: moment(transaction.createdAt),\n    createdAtString: transaction.createdAt,\n    description: transaction.description,\n    type: transaction.type,\n    _id: transaction._id,\n  })\n\n  const mapScore = (score) => ({\n    amount: convertScore(score, conversions),\n    createdAt: moment(score.createdAt),\n    createdAtString: score.createdAt,\n    description: score.task.title,\n    type: 'assessment',\n  })\n\n  const mappedData = (transactions) => {\n    const { bonuses, purchases, scores } = transactions\n    const mapped = [\n      ...bonuses.map((bonus) => mapTransaction(bonus)),\n      ...purchases.map((purchase) => mapTransaction(purchase)),\n    ]\n    if (doEdit) {\n      return mapped\n    } else {\n      return [...mapped, ...scores.map((score) => mapScore(score))]\n    }\n  }\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      defaultSort: 'desc',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    { title: 'Description', field: 'description' },\n    {\n      title: 'Amount',\n      field: 'amount',\n      render: (rowData) => <Points value={rowData.amount} />,\n    },\n    { title: 'Type', field: 'type', editable: 'never' },\n  ])\n\n  useEffect(() => {\n    transactions && setData(mappedData(transactions))\n  }, [doEdit, transactions])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: doEdit\n            ? 'No editable transactions available'\n            : 'No transactions have posted',\n          editRow: {\n            deleteText: 'Delete this transaction?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={\n        doEdit\n          ? {\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  const dataUpdate = [...data]\n                  const index = oldData.tableData.id\n                  dataUpdate[index] = {\n                    ...newData,\n                    createdAt: moment(newData.createdAtString),\n                  }\n                  setData([...dataUpdate])\n                  onUpdate(newData)\n                  resolve()\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  const newData = [...data]\n                  const index = oldData.tableData.id\n                  newData.splice(index, 1)\n                  setData([...newData])\n                  onDelete(oldData)\n                  resolve()\n                }),\n            }\n          : {}\n      }\n    />\n  )\n}\n\nconst AccountView = ({\n  conversions,\n  onDelete,\n  onLoad,\n  onUnload,\n  onUpdate,\n  storeEnabled,\n  student,\n  total,\n  transactions,\n  userRole,\n}) => {\n  const [doEdit, setDoEdit] = useState(false)\n\n  const handleEditClick = () => {\n    setDoEdit(!doEdit)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    onLoad(student.username)\n  }, [student])\n\n  return (\n    <>\n      {transactions && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountHeader\n              doEdit={doEdit}\n              onEditClick={handleEditClick}\n              storeEnabled={storeEnabled}\n              student={student}\n              total={total}\n              userRole={userRole}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TransactionList\n              conversions={conversions}\n              doEdit={doEdit}\n              onDelete={onDelete}\n              onUpdate={onUpdate}\n              transactions={transactions}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountView)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AccountView from '../AccountView'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst StudentAccount = ({ currentUser }) => {\n  return <AccountView student={currentUser} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(StudentAccount)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport agent from '../../agent'\nimport background from './../../images/songs-background.jpg'\n\nimport { SUBMIT_SONG_REQUEST } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n})\n\nconst SongRequestDialog = ({ currentUser, onSubmit, settings }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit(values)\n    setOpen(false)\n  }\n\n  const getSongRequestPurchaseAmount = () =>\n    settings.prime.enabled && currentUser.hasPrime\n      ? (1 - settings.prime.songRequestPurchaseDiscount / 100) *\n        settings.songRequestPurchaseAmount\n      : settings.songRequestPurchaseAmount\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, {getSongRequestPurchaseAmount()} points will be charged to\n          your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  autoFocus\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongRequestDialog)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport MaterialTable from 'material-table'\n\nimport {\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REMOVAL_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  paper: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n  status: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REMOVAL_REQUEST,\n      payload: agent.Songs.update(song),\n      snackbar: {\n        message: 'Song removal request submitted',\n        variant: 'success',\n      },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: STUDENT_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forStudent(),\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst StudentSongs = ({\n  course,\n  courseSongs,\n  currentUser,\n  onDelete,\n  onLoad,\n  onUnload,\n  settings,\n  userSongs,\n}) => {\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n  const [data, setData] = useState([])\n  const [columns, setColumns] = useState([])\n\n  const classes = useStyles()\n\n  const allowDelete =\n    (settings.songRemovalRequestEnabled &&\n      (!settings.prime.enabled || !settings.prime.songRemovalEnabled)) ||\n    (settings.prime.enabled &&\n      settings.prime.songRemovalEnabled &&\n      currentUser.hasPrime)\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  const getColumns = () => [\n    {\n      title: 'Request Date',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    ...(!mySongsOnly\n      ? [\n          {\n            title: 'Purchased by',\n            field: 'purchasedBy',\n            editable: 'never',\n          },\n        ]\n      : []),\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        approved: 'approved',\n        pendingApproval: 'pending approval',\n        pendingRemoval: 'pending removal',\n        rejected: 'rejected',\n        removed: 'removed',\n      },\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <span style={{ alignItems: 'center', display: 'flex' }}>\n            {rowData.statusDescription ? (\n              <>\n                {rowData.status}\n                <Tooltip\n                  arrow\n                  color='primary'\n                  enterTouchDelay={0}\n                  title={rowData.statusDescription}\n                >\n                  <InfoOutlined style={{ marginLeft: '8px' }} />\n                </Tooltip>\n              </>\n            ) : (\n              rowData.status\n            )}\n          </span>\n        ) : (\n          <span>{rowData}</span>\n        ),\n    },\n  ]\n\n  const getMappedData = (source) =>\n    source.map((song) => ({\n      createdAt: moment(song.createdAt),\n      title: song.title,\n      artist: song.artist,\n      purchasedBy: `${song.student.firstName} ${song.student.lastName}`,\n      status: song.status,\n      statusDescription: song.statusDescription,\n      _id: song._id,\n    }))\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setColumns(getColumns())\n    setData(getMappedData(mySongsOnly ? userSongs : courseSongs))\n  }, [courseSongs, mySongsOnly, userSongs])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          'Songs for ' +\n          (mySongsOnly ? currentUser.firstName : 'Period ' + course.period)\n        }\n      >\n        <SongRequestDialog />\n      </PageHeader>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <MaterialTable\n        title='Class Playlist'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            deleteTooltip: allowDelete\n              ? 'Delete song'\n              : 'Delete song (Requires Prime Membership)',\n            emptyDataSourceMessage:\n              'No songs have been added to this class playlist',\n            editRow: {\n              deleteText: `Delete this song for ${settings.songRemovalPurchaseAmount} points?`,\n              saveTooltip: 'Delete song',\n            },\n          },\n        }}\n        options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n        editable={{\n          isDeletable: (rowData) =>\n            rowData.status === 'approved' && allowDelete,\n          isDeleteHidden: () => !settings.songRemovalRequestEnabled,\n          onRowDelete: (song) =>\n            new Promise((resolve) => {\n              onDelete({\n                id: song._id,\n                status: 'pending removal',\n                statusDescription: '',\n              })\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Collapse, IconButton, makeStyles } from '@material-ui/core'\nimport { Alert as MuiAlert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\n\nimport { ALERT_CLOSED } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch({ type: ALERT_CLOSED }),\n})\n\nconst Alert = ({ children, disableClose, onClose, severity, variant }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div className={classes.alert}>\n      <Collapse in={open}>\n        <MuiAlert\n          action={\n            !disableClose && (\n              <IconButton\n                aria-label='close'\n                color='inherit'\n                size='small'\n                onClick={() => {\n                  setOpen(false)\n                  onClose()\n                }}\n              >\n                <Close fontSize='inherit' />\n              </IconButton>\n            )\n          }\n          severity={severity || 'info'}\n          variant={variant || 'outlined'}\n        >\n          {children}\n        </MuiAlert>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Alert)\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table'\nimport { Chip } from '@material-ui/core'\n\nimport Points from '../Points'\nimport PrimeBadge from '../Prime/PrimeBadge'\n\nconst EconomySummaryTable = ({ accounts }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = accounts.map((account) => ({\n    accountTotal: account.totals.account,\n    assessmentTotal: account.totals.assessments,\n    bonusTotal: account.totals.bonuses,\n    course: account.course,\n    firstName: account.firstName,\n    hasPrime: account.hasPrime,\n    id: account.id,\n    lastName: account.lastName,\n    period: account.period,\n    purchaseTotal: account.totals.purchases,\n    songTotal: account.totals.songs,\n    passTotal: account.totals.passes,\n  }))\n\n  const [columns] = useState([\n    { title: 'First Name', field: 'firstName' },\n    { title: 'Last Name', field: 'lastName' },\n    {\n      title: 'Prime',\n      field: 'hasPrime',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          rowData.hasPrime ? (\n            <PrimeBadge />\n          ) : (\n            ''\n          )\n        ) : rowData ? (\n          <PrimeBadge />\n        ) : (\n          'No Prime'\n        ),\n    },\n    {\n      title: 'Period',\n      field: 'period',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    {\n      title: 'Account Total',\n      field: 'accountTotal',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Points suffix=' ' value={rowData.accountTotal} />\n        ) : (\n          <Points value={rowData} />\n        ),\n    },\n    { title: 'Hallpass Total', field: 'passTotal' },\n    { title: 'Song Total', field: 'songTotal' },\n    {\n      title: 'Assessment Total',\n      field: 'assessmentTotal',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Points suffix=' ' value={rowData.assessmentTotal} />\n        ) : (\n          <Points value={rowData} />\n        ),\n    },\n    {\n      title: 'Bonus Total',\n      field: 'bonusTotal',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Points suffix=' ' value={rowData.bonusTotal} />\n        ) : (\n          <Points value={rowData} />\n        ),\n    },\n    {\n      title: 'Purchase Total',\n      field: 'purchaseTotal',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Points suffix=' ' value={rowData.purchaseTotal} />\n        ) : (\n          <Points value={rowData} />\n        ),\n    },\n  ])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [accounts])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      options={{ grouping: true, paging: false, toolbar: false }}\n      style={{ boxShadow: 'none' }}\n      title='Account Summary'\n    />\n  )\n}\n\nexport default EconomySummaryTable\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Working...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\nimport NumberFormat from 'react-number-format'\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  statAvatar: {\n    backgroundColor: theme.palette.primary.main,\n    height: theme.spacing(6),\n    marginBottom: theme.spacing(2),\n    width: theme.spacing(6),\n  },\n  statCard: {\n    alignItems: 'center',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    justifyContent: 'center',\n  },\n}))\n\nconst StatCard = ({ children, icon, title, value }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Card variant='outlined'>\n        <CardContent className={classes.statCard}>\n          <Avatar className={classes.statAvatar}>{icon}</Avatar>\n          <Typography variant='h5'>{title}</Typography>\n          <Typography variant='h6'>\n            <NumberFormat\n              displayType='text'\n              thousandSeparator={true}\n              value={Math.round(value)}\n            />\n          </Typography>\n          <Typography variant='h6'>{children}</Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n\nexport default StatCard\n","import React from 'react'\nimport { Slide } from '@material-ui/core'\n\nexport const SlideUpTransition = React.forwardRef((props, ref) => {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Dialog,\n  Grid,\n  IconButton,\n  Paper,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport {\n  AccountBalance,\n  Assignment,\n  Close,\n  Group,\n  Money,\n  MusicNote,\n  Person,\n  ShoppingCart,\n  Wc,\n} from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFlask } from '@fortawesome/free-solid-svg-icons'\n\nimport EconomySummaryTable from './EconomySummaryTable'\nimport ListErrors from '../ListErrors'\nimport PageHeader from '../PageHeader'\nimport PageWrapper from '../PageWrapper'\nimport Spinner from '../Spinner'\nimport StatCard from '../StatCard'\nimport { SlideUpTransition } from '../../transitions'\n\nimport agent from '../../agent'\n\nimport {\n  ECONOMY_DIALOG_LOADED,\n  ECONOMY_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: theme.palette.common.white,\n    margin: '0 auto',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.economy,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: ECONOMY_DIALOG_LOADED,\n      payload: agent.Scores.getAll(),\n    }),\n  onUnload: () =>\n    dispatch({\n      type: ECONOMY_DIALOG_UNLOADED,\n    }),\n})\n\nconst Dashboard = ({ data }) => (\n  <Grid container spacing={3}>\n    <StatCard icon={<Person fontSize='large' />} title='Top Student'>\n      {data[0]?.firstName} {data[0]?.lastName}\n    </StatCard>\n    <StatCard\n      icon={<Group fontSize='large' />}\n      title='Total Students'\n      value={data.length}\n    />\n    <StatCard\n      icon={<AccountBalance fontSize='large' />}\n      title='Total Points'\n      value={data.reduce((prev, cur) => prev + (cur.totals.account || 0), 0)}\n    />\n    <StatCard\n      icon={<Assignment fontSize='large' />}\n      title='Total Assessment Points'\n      value={data.reduce(\n        (prev, cur) => prev + (cur.totals.assessments || 0),\n        0\n      )}\n    />\n    <StatCard\n      icon={<Money fontSize='large' />}\n      title='Total Bonus Points'\n      value={data.reduce((prev, cur) => prev + (cur.totals.bonuses || 0), 0)}\n    />\n    <StatCard\n      icon={<ShoppingCart fontSize='large' />}\n      title='Total Purchase Points'\n      value={data.reduce((prev, cur) => prev + (cur.totals.purchases || 0), 0)}\n    />\n    <StatCard\n      icon={<Wc fontSize='large' />}\n      title='Total Hallpasses'\n      value={data.reduce((prev, cur) => prev + cur.totals.passes, 0)}\n    />\n    <StatCard\n      icon={<FontAwesomeIcon icon={faFlask} size='lg' />}\n      title='Total Prime Memberships'\n      value={data.reduce((prev, cur) => prev + cur.hasPrime, 0)}\n    />\n    <StatCard\n      icon={<MusicNote fontSize='large' />}\n      title='Total Song Requests'\n      value={data.reduce((prev, cur) => prev + cur.totals.songs, 0)}\n    />\n    <Grid item xs={12}>\n      <Paper elevation={3} style={{ padding: '16px', overflow: 'scroll' }}>\n        <Typography gutterBottom variant='h6'>\n          Account Summary\n        </Typography>\n        <EconomySummaryTable accounts={data} />\n      </Paper>\n    </Grid>\n  </Grid>\n)\n\nconst EconomyDialog = ({ errors, inProgress, onLoad, onUnload, students }) => {\n  const [data, setData] = useState([])\n  const [open, setOpen] = useState(false)\n\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n    onLoad()\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    onUnload()\n  }\n\n  useEffect(() => {\n    setData(students.sort((a, b) => b.totals.account - a.totals.account))\n  }, [students])\n\n  return (\n    <>\n      <Button onClick={handleClickOpen} size='small'>\n        View Economy\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        TransitionComponent={SlideUpTransition}\n      >\n        <AppBar position='relative'>\n          <Toolbar>\n            <IconButton edge='start' onClick={handleClose}>\n              <Close />\n            </IconButton>\n            <Typography variant='h5' className={classes.title}>\n              Accounts\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <PageWrapper>\n          <Container>\n            <PageHeader title='Economy View' />\n            <ListErrors errors={errors} />\n            {inProgress ? (\n              <Spinner message='Computing...' />\n            ) : data.length > 0 ? (\n              <Dashboard data={data} />\n            ) : (\n              <Alert severity='info'>\n                <AlertTitle>No data available</AlertTitle>\n                You must create at least one course, add students to that\n                course, and add bonuses, purchases, or scores before any data\n                will be visible here\n              </Alert>\n            )}\n          </Container>\n        </PageWrapper>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EconomyDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Paper, TextField, makeStyles } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: STUDENT_SEARCH_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: STUDENT_SEARCH_UNLOADED }),\n})\n\nconst StudentSearch = ({ courses, onChange, onLoad, onUnload }) => {\n  const [mappedData, setMappedData] = useState([])\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const mapped = courses\n      .map((course) =>\n        course.students.map((student) => ({\n          ...student,\n          course: course.name,\n          period: course.period,\n          name: `${student.firstName} ${student.lastName}`,\n        }))\n      )\n      .flat()\n    setMappedData(mapped)\n  }, [courses])\n\n  return (\n    <Paper className={classes.search}>\n      <Autocomplete\n        autoHighlight\n        getOptionLabel={(option) => option.name}\n        groupBy={(option) => `Period ${option.period} | ${option.course}`}\n        noOptionsText='No students have been added'\n        onChange={(ev, value) => onChange(value)}\n        options={mappedData}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Student'\n            placeholder='Type or select a name'\n          />\n        )}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n    </Paper>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSearch)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nconst useStyles = makeStyles((theme) => ({\n  courses: {\n    '& div': {\n      'backgroundColor': theme.palette.background.default,\n      'boxShadow': theme.shadows[4],\n      'cursor': 'pointer',\n      'marginBottom': theme.spacing(1),\n      'padding': `${theme.spacing(3)}px ${theme.spacing(4)}px`,\n      'transition': 'all 0.15s ease-in-out',\n      '&:focus, &:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[1],\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst CourseSelector = ({ courses, onSelect }) => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Typography gutterBottom variant='h6'>\n        Select a course\n      </Typography>\n      {courses.length > 0 ? (\n        <div className={classes.courses}>\n          {courses.map((course) => (\n            <div\n              key={course.slug}\n              onClick={() => {\n                onSelect(course)\n              }}\n              tabIndex='0'\n            >\n              <Typography variant='body1'>\n                <b>{course.name}</b> &middot; Period {course.period}\n              </Typography>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <Alert severity='info'>\n          You must create a course before continuing\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(CourseSelector)\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table'\n\nimport PrimeBadge from '../Prime/PrimeBadge'\n\nconst StudentsTable = ({ course, onSelect, primeEnabled }) => {\n  const [data, setData] = useState([])\n  const [sort, setSort] = useState('last')\n\n  const getNextSort = () => (sort === 'last' ? 'first' : 'last')\n\n  const handleSortButtonClick = () => setSort(getNextSort())\n\n  const mappedData = course.students\n    .filter((student) => !student.dropped)\n    .map((student) => ({\n      username: student.username,\n      firstName: student.firstName,\n      lastName: student.lastName,\n      hasPrime: student.hasPrime,\n      fullName:\n        sort === 'last'\n          ? `${student.lastName}, ${student.firstName}`\n          : `${student.firstName} ${student.lastName}`,\n      role: student.role,\n      _id: student._id,\n    }))\n    .sort((a, b) => a[`${sort}Name`].localeCompare(b[`${sort}Name`]))\n\n  const [columns, setColumns] = useState([\n    { title: 'Students', field: 'fullName' },\n  ])\n\n  useEffect(() => {\n    if (primeEnabled) {\n      setColumns([\n        ...columns,\n        {\n          title: 'Prime',\n          field: 'hasPrime',\n          render: (rowData) => (rowData.hasPrime ? <PrimeBadge /> : ''),\n        },\n      ])\n    }\n  }, [primeEnabled])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [course, sort])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No students found for this course',\n        },\n        toolbar: {\n          nRowsSelected: '{0} student(s) selected',\n        },\n      }}\n      onSelectionChange={(rows) => onSelect(rows)}\n      options={{ paging: false, selection: true, toolbar: true }}\n      title={`${course.name} | Period ${course.period}`}\n      actions={[\n        {\n          icon: 'sort',\n          tooltip: `Sort by ${getNextSort()} name`,\n          isFreeAction: true,\n          onClick: () => handleSortButtonClick(),\n        },\n      ]}\n    />\n  )\n}\n\nexport default StudentsTable\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport BonusSelector from './BonusSelector'\nimport CourseSelector from './CourseSelector'\nimport ListErrors from '../ListErrors'\nimport ProductSelector from '../Products/ProductSelector'\nimport StudentsTable from './StudentsTable'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTIONS,\n  TRANSACTIONS_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(80),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n  bonuses: state.bonuses.bonuses,\n  primeEnabled: state.common.settings.prime.enabled,\n  taxRate: state.common.settings.taxRate,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transactions, curStudent) =>\n    dispatch({\n      type: ADD_TRANSACTIONS,\n      payload: agent.Transactions.addMany(transactions),\n      curStudent,\n      snackbar: {\n        message: `${transactions.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTIONS_DIALOG_UNLOADED }),\n})\n\nconst BulkTransactionsDialog = ({\n  bonuses,\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onAdd,\n  onExit,\n  primeEnabled,\n  taxRate,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [course, setCourse] = useState(null)\n  const [students, setStudents] = useState([])\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getCost = (amt) => Math.round(amt * (taxRate / 100 + 1))\n\n  const handleClose = () => {\n    setOpen(false)\n    setCourse(null)\n    isClosed()\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd(\n      {\n        ...values,\n        students: students.map((student) => student._id),\n        type: type === 'Bonuses' ? 'bonus' : 'purchase',\n        typeTitle: type,\n      },\n      curStudent\n    )\n  }\n\n  const handleCourseSelect = (slug) => {\n    setCourse(slug)\n  }\n\n  const handleStudentSelect = (rows) => {\n    setStudents(rows)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <Formik\n        initialValues={{\n          amount: '',\n          description: '',\n          productId: '',\n        }}\n        validationSchema={Yup.object({\n          amount: Yup.number().typeError('Numbers only').required('Required'),\n          description: Yup.string().required('Required'),\n          productId: Yup.string(),\n        })}\n        onSubmit={async (values) => {\n          handleSubmitAdd(values)\n        }}\n      >\n        {(formik) => (\n          <Form>\n            <DialogTitle>Add {type}</DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              {!course && <CourseSelector onSelect={handleCourseSelect} />}\n              {course && (\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    {type === 'Bonuses' ? (\n                      <BonusSelector\n                        bonuses={bonuses}\n                        onChange={(bonus) => {\n                          if (typeof bonus === 'string') {\n                            formik.setFieldValue('description', bonus)\n                          } else if (bonus && typeof bonus === 'object') {\n                            formik.setFieldValue('amount', bonus.amount)\n                            formik.setFieldValue(\n                              'description',\n                              bonus.description\n                            )\n                          } else {\n                            formik.setFieldValue('amount', '')\n                            formik.setFieldValue('description', '')\n                          }\n                        }}\n                      />\n                    ) : (\n                      <ProductSelector\n                        onChange={(product) => {\n                          if (typeof product === 'string') {\n                            formik.setFieldValue('description', product)\n                          } else if (product && typeof product === 'object') {\n                            formik.setFieldValue(\n                              'amount',\n                              getCost(product.cost)\n                            )\n                            formik.setFieldValue('description', product.name)\n                            formik.setFieldValue('productId', product._id)\n                          } else {\n                            formik.setFieldValue('amount', '')\n                            formik.setFieldValue('description', '')\n                          }\n                        }}\n                      />\n                    )}\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Amount'\n                      name='amount'\n                      type='text'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <StudentsTable\n                      course={course}\n                      onSelect={handleStudentSelect}\n                      primeEnabled={primeEnabled}\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress || students.length === 0}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {inProgress ? 'Adding...' : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BulkTransactionsDialog)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport parse from 'csv-parse/lib/sync'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  filedrop: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[300],\n    borderRadius: theme.spacing(1),\n    color: theme.palette.grey[600],\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: '20px',\n    transition: 'all 0.25s ease-in-out',\n  },\n  filedropActive: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  filedropReject: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nfunction Filedrop({ onFiledrop }) {\n  const classes = useStyles()\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Due to {multiple: false} in useDropzone(), only one file will be received\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const parsedFile = parse(reader.result, {\n          columns: true,\n          relax_column_count: true,\n          skip_empty_lines: true,\n        })\n        onFiledrop(parsedFile)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\n    useDropzone({\n      accept: 'text/csv, text/plain',\n      multiple: false,\n      onDropAccepted: onDrop,\n    })\n\n  return (\n    <div\n      {...getRootProps({\n        className: `${classes.filedrop} ${\n          isDragActive ? classes.filedropActive : ''\n        } ${isDragReject ? classes.filedropReject : ''}`,\n      })}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive && (\n        <Typography>\n          Drop a .csv file here or click to select a .csv file\n        </Typography>\n      )}\n      {isDragActive && !isDragReject && (\n        <Typography>Drop .csv file here</Typography>\n      )}\n      {isDragReject && <Typography>File type not accepted</Typography>}\n    </div>\n  )\n}\n\nexport default Filedrop\n","import { parseFullName } from 'parse-full-name'\n\nconst parser = {\n  // Clark County School District (CCSD) - Las Vegas, NV\n  ccsd: {\n    // Parser for importing student scores from a CCSD Infinite Campus gradebook export csv file\n    scores: (data) => {\n      // Get student usernames (student numbers)\n      const usernames = data.file\n        .map(\n          (student, index) =>\n            index > 1 && student['Assignment Name'].split('#').pop()\n        )\n        .filter((username) => username !== false)\n\n      // Prepare data to send to server\n      const parsed = { course: data.course, tasks: [] }\n      for (const taskName in data.tasks) {\n        const selected = data.tasks[taskName]\n        if (selected) {\n          const task = {\n            title: taskName,\n            totalPoints: data.file[1][taskName],\n            scores: {},\n          }\n\n          for (const username of usernames) {\n            const student = data.file.find((row) =>\n              row['Assignment Name'].endsWith(username)\n            )\n            if (student) task.scores[username] = student[taskName]\n          }\n\n          parsed.tasks.push(task)\n        }\n      }\n\n      return parsed\n    },\n\n    // Parser for creating student accounts from a CCSD Infinite Campus gradebook export csv file\n    students: (file, password) => {\n      const column = Object.keys(file[0])\n      return file\n        .map((row, index) => {\n          if (index < 2) return null\n          const student = row[column[0]]\n          const user = {\n            firstName: parseFullName(student).first,\n            lastName: parseFullName(student).last,\n            username: student.split('#')[1],\n            password,\n            role: 'student',\n          }\n          return user\n        })\n        .filter((element) => element !== null)\n    },\n  },\n\n  // Evergreen School District - Vancouver, WA\n  evergreen: {\n    // Parser for importing student scores from an Evergreen Skyward gradebook export csv file\n    // @todo: implement this parser once gradebook file is received\n    scores: (data) => {\n      alert(\n        '[Parser Unavailable] Please email a copy of your gradebook export file to Dr. May so he can setup a parser in the app'\n      )\n    },\n\n    // Parser for creating student accounts from an Evergreen Skyward gradebook export csv file\n    students: (file, password) => {\n      const column = Object.keys(file[0])\n      return file\n        .map((row, index) => {\n          if (index < 4) return null\n          const student = parseFullName(row[column[0]])\n          const studentNumber = row[column[1]]\n          const user = {\n            firstName: student.first,\n            lastName: student.last,\n            username: `u${studentNumber.replace(/^0+/, '')}`,\n            password,\n            role: 'student',\n          }\n          return user\n        })\n        .filter((element) => element !== null)\n    },\n  },\n}\n\nexport default parser\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport Filedrop from '../Filedrop'\nimport ListErrors from '../ListErrors'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\nimport parser from '../../parsers'\n\nimport {\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onImport: (data, curStudent) =>\n    dispatch({\n      type: IMPORT_SCORES,\n      payload: agent.Scores.import(data),\n      curStudent,\n      snackbar: { message: 'Scores imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: IMPORT_SCORES_DIALOG_UNLOADED }),\n})\n\nconst ScoreImportStepper = ({ onDataChange, onShowImport }) => {\n  const [file, setFile] = useState(null)\n  const [course, setCourse] = useState(null)\n  const [tasks, setTasks] = useState(null)\n\n  const handleCourseSelect = (course) => {\n    setCourse(course)\n  }\n\n  const handleFiledrop = (file) => {\n    const tasks = {}\n    Object.keys(file[0])\n      .slice(1)\n      .forEach((task) => {\n        tasks[task] = false\n      })\n    setFile(file)\n    setTasks(tasks)\n  }\n\n  const handleTaskChange = (ev) => {\n    setTasks({ ...tasks, [ev.target.name]: ev.target.checked })\n  }\n\n  // Determine if any tasks have been checked/selected\n  useEffect(() => {\n    const tasksSelected = tasks\n      ? Object.values(tasks).some((el) => el === true)\n      : false\n    onShowImport(tasksSelected)\n  }, [tasks])\n\n  // Keep the imported data object current\n  useEffect(() => {\n    onDataChange({ file, course, tasks })\n  }, [file, course, tasks])\n\n  return (\n    <>\n      {!file && !course && !tasks && (\n        <CourseSelector onSelect={handleCourseSelect} />\n      )}\n\n      {!file && course && !tasks && (\n        <div>\n          <Typography gutterBottom>\n            Scores must be imported from a .csv file exported from Infinite\n            Campus\n          </Typography>\n          <Filedrop onFiledrop={handleFiledrop} />\n        </div>\n      )}\n\n      {file &&\n        course &&\n        tasks && ( // @todo: use material-table here?\n          <FormControl component='fieldset'>\n            <Typography gutterBottom variant='body1'>\n              Select the assignments to import\n            </Typography>\n            <FormGroup>\n              {Object.keys(tasks).map((task) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={tasks[task]}\n                      onChange={handleTaskChange}\n                      name={task}\n                    />\n                  }\n                  key={task}\n                  label={task}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        )}\n    </>\n  )\n}\n\nconst ImportScoresDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onExit,\n  onImport,\n  schoolDistrict,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [ready, setReady] = useState(false)\n  const [data, setData] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    isClosed()\n  }\n\n  const handleDataChange = (importData) => {\n    setData(importData)\n  }\n\n  const handleShowImport = (selected) => {\n    setReady(selected)\n  }\n\n  const handleClickImport = () => {\n    const parsed = parser[schoolDistrict].scores(data)\n    onImport(parsed, curStudent)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <DialogTitle>Import Scores</DialogTitle>\n      {schoolDistrict === 'ccsd' ? (\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <ScoreImportStepper\n              onDataChange={handleDataChange}\n              onShowImport={handleShowImport}\n            />\n          )}\n        </DialogContent>\n      ) : (\n        <DialogContent>\n          <Typography>\n            Please email a copy of your gradebook export file to Dr. May so he\n            can setup a parser in the app\n          </Typography>\n        </DialogContent>\n      )}\n      <DialogActions>\n        <Button\n          color='primary'\n          disabled={!ready || inProgress}\n          onClick={handleClickImport}\n          variant='contained'\n        >\n          {inProgress ? 'Importing...' : 'Import'}\n        </Button>\n        <Button disabled={inProgress} onClick={handleClose} variant='contained'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportScoresDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport MaterialTable from 'material-table'\nimport agent from '../../agent'\n\nimport {\n  ADD_BONUS,\n  DELETE_BONUS,\n  UPDATE_BONUS,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.bonuses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (bonus) =>\n    dispatch({\n      payload: agent.Bonuses.add(bonus),\n      snackbar: { message: 'Bonus added', variant: 'success' },\n      type: ADD_BONUS,\n    }),\n  onDelete: (bonus) =>\n    dispatch({\n      payload: agent.Bonuses.delete(bonus),\n      snackbar: { message: 'Bonus deleted', variant: 'success' },\n      type: DELETE_BONUS,\n    }),\n  onUpdate: (bonus) =>\n    dispatch({\n      payload: agent.Bonuses.update(bonus),\n      snackbar: { message: 'Bonus updated', variant: 'success' },\n      type: UPDATE_BONUS,\n    }),\n})\n\nconst ManageBonusesTable = ({ bonuses, onAdd, onDelete, onUpdate }) => {\n  const [data, setData] = useState([])\n\n  const [columns] = useState([\n    { title: 'Description', field: 'description' },\n    { title: 'Amount', field: 'amount' },\n  ])\n\n  useEffect(() => {\n    setData(bonuses)\n  }, [bonuses])\n\n  return (\n    <MaterialTable\n      title='Bonuses'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No bonuses have been added',\n          editRow: {\n            deleteText: 'Delete this bonus?',\n          },\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n        addRowPosition: 'first',\n        paging: false,\n      }}\n      editable={{\n        onRowAdd: (bonus) =>\n          new Promise((resolve) => {\n            onAdd(bonus)\n            resolve()\n          }),\n        onRowUpdate: (bonus) =>\n          new Promise((resolve) => {\n            onUpdate(bonus)\n            resolve()\n          }),\n        onRowDelete: (bonus) =>\n          new Promise((resolve) => {\n            onDelete(bonus)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBonusesTable)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport ListErrors from '../ListErrors'\nimport ManageBonusesTable from './ManageBonusesTable'\nimport agent from '../../agent'\n\nimport { LOAD_BONUSES, UNLOAD_BONUSES } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.bonuses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: LOAD_BONUSES,\n      payload: agent.Bonuses.getAll(),\n    }),\n  onUnload: () => dispatch({ type: UNLOAD_BONUSES }),\n})\n\nconst ManageBonusesDialog = ({ errors, isOpen, onClose, onLoad, onUnload }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    onClose()\n  }\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <DialogTitle>Manage Bonuses</DialogTitle>\n      <DialogContent>\n        <ListErrors errors={errors} />\n        <ManageBonusesTable />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant='contained'>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBonusesDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\nimport { titleCase } from 'title-case'\nimport {\n  Avatar,\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { AlarmOn, AlarmOff, ExpandMore } from '@material-ui/icons'\n\nimport PrimeBadge from '../Prime/PrimeBadge'\n\nimport { DELETE_PASS, UPDATE_PASS } from '../../constants/actionTypes'\nimport agent from '../../agent'\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    backgroundColor: theme.palette.primary.main,\n    marginRight: theme.spacing(2),\n  },\n  expired: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  summary: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  // ...state,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_PASS,\n      payload: agent.Passes.delete(id),\n      snackbar: { message: 'Hallpass deleted', variant: 'success' },\n    }),\n  onUpdate: (pass) =>\n    dispatch({\n      type: UPDATE_PASS,\n      payload: agent.Passes.update(pass),\n      snackbar: { message: 'Hallpass updated', variant: 'success' },\n    }),\n})\n\nconst PassTable = ({\n  courses,\n  expanded,\n  icon,\n  onChange,\n  onDelete,\n  onUpdate,\n  status,\n}) => {\n  const classes = useStyles()\n\n  const [data, setData] = useState([])\n\n  const mappedData = courses\n    .map((course) =>\n      course.passes.map((pass) => ({\n        createdAt: moment(pass.createdAt),\n        createdAtString: pass.createdAt,\n        createdBy: pass.createdBy,\n        destination: pass.destination,\n        duration: pass.duration,\n        hasPrime: pass.student.hasPrime,\n        period: course.period,\n        status:\n          moment.duration(moment().diff(moment(pass.createdAt))).as('minutes') >\n          pass.duration\n            ? 'expired'\n            : 'active',\n        student: `${pass.student.firstName} ${pass.student.lastName} ${\n          pass.student.dropped ? '(dropped)' : ''\n        }`,\n        _id: pass._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    {\n      title: 'Time',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('h:mm A')\n          : rowData.format('h:mm A'),\n    },\n    { title: 'Student', field: 'student', editable: 'never' },\n    {\n      title: 'Prime',\n      field: 'hasPrime',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          rowData.hasPrime ? (\n            <PrimeBadge />\n          ) : (\n            ''\n          )\n        ) : rowData ? (\n          <PrimeBadge />\n        ) : (\n          'No Prime'\n        ),\n    },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    { title: 'Destination', field: 'destination' },\n    { title: 'Duration (min)', field: 'duration' },\n    { title: 'Created by', field: 'createdBy' },\n  ])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <ExpansionPanel expanded={expanded === status} onChange={onChange(status)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n        <div className={classes.summary}>\n          <Avatar className={classes[status]}>{icon}</Avatar>\n          <Typography variant='h5'>{titleCase(status)} Hallpasses</Typography>\n        </div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <MaterialTable\n          columns={columns}\n          data={data.filter((pass) => pass.status === status)}\n          editable={{\n            onRowDelete: (oldData) =>\n              new Promise((resolve, reject) => {\n                const dataDelete = [...data]\n                const index = oldData.tableData.id\n                dataDelete.splice(index, 1)\n                setData([...dataDelete])\n                onDelete(oldData._id)\n                resolve()\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                const dataUpdate = [...data]\n                const index = oldData.tableData.id\n                dataUpdate[index] = {\n                  ...newData,\n                  createdAt: moment(newData.createdAtString),\n                }\n                setData([...dataUpdate])\n                onUpdate(newData)\n                resolve()\n              }),\n          }}\n          localization={{\n            body: {\n              emptyDataSourceMessage:\n                status === 'active'\n                  ? 'No active passes at this time'\n                  : 'No hallpasses have been created',\n              editRow: {\n                deleteText: `Delete ${status} hallpass?`,\n              },\n            },\n          }}\n          options={{\n            actionsColumnIndex: -1,\n            grouping: status !== 'active',\n            paging: false,\n            showTitle: false,\n            toolbar: status !== 'active',\n          }}\n          style={{\n            boxShadow: 'none',\n            width: '100%',\n          }}\n        />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nconst ManagePassesTable = ({ courses, onDelete, onUpdate }) => {\n  const [expanded, setExpanded] = useState('active')\n\n  const handleExpandedChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      <PassTable\n        courses={courses}\n        expanded={expanded}\n        icon={<AlarmOn />}\n        onChange={handleExpandedChange}\n        onDelete={onDelete}\n        onUpdate={onUpdate}\n        status='active'\n      />\n      <PassTable\n        courses={courses}\n        expanded={expanded}\n        icon={<AlarmOff />}\n        onChange={handleExpandedChange}\n        onDelete={onDelete}\n        onUpdate={onUpdate}\n        status='expired'\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePassesTable)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Container,\n  Dialog,\n  IconButton,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nimport ListErrors from '../ListErrors'\nimport ManagePassesTable from './ManagePassesTable'\nimport PageHeader from '../PageHeader'\nimport PageWrapper from '../PageWrapper'\nimport Spinner from '../Spinner'\nimport { SlideUpTransition } from '../../transitions'\n\nimport agent from '../../agent'\n\nimport {\n  LOAD_TEACHER_PASSES,\n  UNLOAD_MANAGE_PASSES,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: theme.palette.common.white,\n    margin: '0 auto',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.passes,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: LOAD_TEACHER_PASSES, payload: agent.Passes.getAll() }),\n  onUnload: () => dispatch({ type: UNLOAD_MANAGE_PASSES }),\n})\n\nconst ManagePassesDialog = ({\n  courses,\n  errors,\n  inProgress,\n  isOpen,\n  onClose,\n  onLoad,\n  onUnload,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const classes = useStyles()\n\n  const handleOpen = () => {\n    setOpen(true)\n    onLoad()\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    onUnload()\n    onClose()\n  }\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    if (isOpen) handleOpen()\n  }, [isOpen])\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onFocus={(ev) => ev.stopPropagation()}\n      TransitionComponent={SlideUpTransition}\n    >\n      <AppBar position='relative'>\n        <Toolbar>\n          <IconButton edge='start' onClick={handleClose}>\n            <Close />\n          </IconButton>\n          <Typography variant='h5' className={classes.title}>\n            Accounts\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <PageWrapper>\n        <Container>\n          <PageHeader title='Manage Hallpasses' />\n          <ListErrors errors={errors} />\n          {inProgress ? (\n            <Spinner message='Loading...' />\n          ) : (\n            <ManagePassesTable courses={courses} />\n          )}\n        </Container>\n      </PageWrapper>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePassesDialog)\n","import React, { useState } from 'react'\nimport {\n  Divider,\n  Fab,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  Grade,\n  LocalActivity,\n  Money,\n  Publish,\n  ShoppingCart,\n  Wc,\n} from '@material-ui/icons'\n\nimport BulkTransactionsDialog from './BulkTransactionsDialog'\nimport ImportScoresDialog from './ImportScoresDialog'\nimport ManageBonusesDialog from './ManageBonusesDialog'\nimport ManagePassesDialog from '../Passes/ManagePassesDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst UpdateAccountsMenu = ({ curStudent, settings }) => {\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null)\n  const [menuSelection, setMenuSelection] = useState(null)\n\n  const classes = useStyles()\n\n  const handleMenuOpen = (ev) => {\n    setMenuAnchorEl(ev.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null)\n  }\n\n  const handleMenuSelect = (ev) => {\n    setMenuSelection(ev.currentTarget.dataset.type)\n    setMenuAnchorEl(null)\n  }\n\n  const handleDialogClose = () => {\n    setMenuSelection(null)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleMenuOpen} variant='extended'>\n        <Money className={classes.icon} />\n        Update Accounts\n      </Fab>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem data-type='scores' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Publish />\n          </ListItemIcon>\n          <ListItemText>Import scores</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='bonuses' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Grade />\n          </ListItemIcon>\n          <ListItemText>Add Bonuses</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='purchases' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <ShoppingCart />\n          </ListItemIcon>\n          <ListItemText>Add Purchases</ListItemText>\n        </MenuItem>\n        <Divider />\n        <MenuItem data-type='manageBonuses' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <LocalActivity />\n          </ListItemIcon>\n          <ListItemText>Manage Bonuses</ListItemText>\n        </MenuItem>\n        {settings.enableHallpasses && (\n          <MenuItem data-type='managePasses' onClick={handleMenuSelect}>\n            <ListItemIcon>\n              <Wc />\n            </ListItemIcon>\n            <ListItemText>Manage Hallpasses</ListItemText>\n          </MenuItem>\n        )}\n      </Menu>\n      <ImportScoresDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'scores'}\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'bonuses'}\n        type='Bonuses'\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'purchases'}\n        type='Purchases'\n      />\n      <ManageBonusesDialog\n        isOpen={menuSelection === 'manageBonuses'}\n        onClose={handleDialogClose}\n      />\n      <ManagePassesDialog\n        isOpen={menuSelection === 'managePasses'}\n        onClose={handleDialogClose}\n      />\n    </>\n  )\n}\n\nexport default UpdateAccountsMenu\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport AccountView from '../AccountView'\nimport Alert from '../Alert'\nimport EconomyDialog from './EconomyDialog'\nimport PageHeader from '../PageHeader'\nimport StudentSearch from './StudentSearch'\nimport UpdateAccountsMenu from './UpdateAccountsMenu'\n\nimport { ACCOUNTS_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  importSummary: state.scores.importSummary,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: ACCOUNTS_PAGE_UNLOADED }),\n})\n\nconst TeacherAccounts = ({ importSummary, onUnload, settings }) => {\n  const [student, setStudent] = useState(null)\n\n  const plural = (qty, unit) => `${qty} ${unit}${qty !== 1 ? 's' : ''}`\n\n  const handleStudentSelect = (student) => {\n    setStudent(student)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Accounts'>\n        <EconomyDialog />\n        <UpdateAccountsMenu curStudent={student} settings={settings} />\n      </PageHeader>\n\n      {importSummary && (\n        <Alert>\n          Created {plural(importSummary.tasksCreated, 'assignment')}, imported{' '}\n          {plural(importSummary.scoresImported, 'score')}, and updated{' '}\n          {plural(importSummary.scoresUpdated, 'score')}\n        </Alert>\n      )}\n\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <StudentSearch onChange={handleStudentSelect} />\n        </Grid>\n        <Grid item xs={12}>\n          {student && <AccountView student={student} />}\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherAccounts)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSE_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: COURSE_DIALOG_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst CourseDialog = ({\n  course,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {course ? (\n        <ActionButton action='Edit course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Create course\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: course?.name || '',\n            period: course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.number().typeError('Numbers only').required('Required'),\n          })}\n          onSubmit={async (values) => {\n            course ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {course ? 'Edit Course' : 'Create Course'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={course ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {course\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_STUDENT } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_STUDENT,\n      payload: agent.Students.delete(user),\n      snackbar: { message: 'Student deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteStudentAlert = ({ course, onDelete, student }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(student)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Delete student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Delete fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Student</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>the student's account, and</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all hallpasses</li>\n              <li>all purchases</li>\n              <li>all scores</li>\n            </ul>\n            associated with this student. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteStudentAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { Switch, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Edit, PersonAdd } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_STUDENT,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_STUDENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user, courseId) =>\n    dispatch({\n      type: ADD_STUDENT,\n      payload: agent.Students.add(user, courseId),\n      courseId,\n      snackbar: { message: 'Student added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n  onUpdate: (user, courseId) =>\n    dispatch({\n      type: UPDATE_STUDENT,\n      payload: agent.Students.update(user),\n      courseId,\n      snackbar: { message: 'Student updated', variant: 'success' },\n    }),\n})\n\nconst StudentDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  prime,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    const user = { ...values }\n    const courseId = course._id\n    user.role = 'student'\n    onAdd(user, courseId)\n  }\n\n  const handleSubmitUpdate = (values) => {\n    const user = { ...student, ...values }\n    const courseId = course._id\n    onUpdate(user, courseId)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {student ? (\n        <ActionButton\n          action='Edit student'\n          onClick={handleClickOpen}\n          size='small'\n        >\n          <Edit fontSize='inherit' />\n        </ActionButton>\n      ) : (\n        <ActionButton action='Add student' onClick={handleClickOpen}>\n          <PersonAdd />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth='md'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            firstName: student?.firstName || '',\n            lastName: student?.lastName || '',\n            username: student?.username || '',\n            password: !student ? defaultStudentPassword : '',\n            dropped: student?.dropped || false,\n            hasPrime: student?.hasPrime || false,\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            password: Yup.string().required(!student ? 'Required' : ''),\n            dropped: Yup.boolean(),\n            hasPrime: Yup.boolean(),\n          })}\n          onSubmit={async (values) => {\n            student ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>\n                {student ? 'Edit Student' : 'Add Student'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      autoFocus={student ? false : true}\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='First Name'\n                      name='firstName'\n                      type='text'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Last Name'\n                      name='lastName'\n                      type='text'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={!!student || inProgress}\n                      label='Student Number'\n                      name='username'\n                      type='text'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Password'\n                      name='password'\n                      type='text'\n                      fullWidth\n                    />\n                  </Grid>\n                  {student && (\n                    <Grid item xs={12} md={6}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='dropped'\n                          type='checkbox'\n                        />\n                        Student is{' '}\n                        {formik.values.dropped ? 'dropped' : 'active'}\n                      </label>\n                    </Grid>\n                  )}\n                  {student && prime.enabled && (\n                    <Grid item xs={12} md={6}>\n                      <label>\n                        <Field\n                          component={Switch}\n                          name='hasPrime'\n                          type='checkbox'\n                        />\n                        Prime is{' '}\n                        {formik.values.hasPrime ? 'enabled' : 'disabled'}\n                      </label>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={inProgress}\n                  type='submit'\n                  variant='contained'\n                >\n                  {student\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  MenuItem,\n} from '@material-ui/core'\nimport { Loop } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { MOVE_STUDENT } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (courseOut, courseIn) =>\n    dispatch({\n      type: MOVE_STUDENT,\n      payload: Promise.all([\n        agent.Courses.unenroll(courseOut),\n        agent.Courses.enroll(courseIn),\n      ]),\n      snackbar: { message: 'Student moved', variant: 'success' },\n    }),\n})\n\nconst StudentTransferDialog = ({\n  course,\n  courses,\n  errors,\n  inProgress,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    if (course.slug !== values.course) {\n      const courseOut = { usernames: [student.username], slug: course.slug }\n      const courseIn = { usernames: [student.username], slug: values.course }\n      onSubmit(courseOut, courseIn)\n    }\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton\n        action='Move student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Loop fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            course: course.slug || '',\n          }}\n          validationSchema={Yup.object({\n            course: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>Move Student</DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item ds={12}>\n                    Move{' '}\n                    <b>\n                      {student.firstName} {student.lastName}\n                    </b>{' '}\n                    to...\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      id='course'\n                      label='Course'\n                      name='course'\n                      type='select'\n                      select\n                      fullWidth\n                    >\n                      {courses.map((course) => (\n                        <MenuItem key={course.slug} value={course.slug}>\n                          {`Period ${course.period} | ${course.name}`}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color='primary'\n                  disabled={inProgress || formik.values.course === course.slug}\n                  type='submit'\n                  variant='contained'\n                >\n                  {inProgress ? 'Moving...' : 'Move'}\n                </Button>\n                <Button onClick={handleClose} variant='contained'>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudentTransferDialog)\n","import React from 'react'\nimport { Chip, Typography, makeStyles } from '@material-ui/core'\n\nimport DeleteStudentAlert from './DeleteStudentAlert'\nimport DroppedChip from '../DroppedChip'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport ResetStudentPasswordAlert from './ResetStudentPasswordAlert'\nimport StudentDialog from './StudentDialog'\nimport StudentTransferDialog from './StudentTransferDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    'alignItems': 'center',\n    'display': 'flex',\n    'height': theme.spacing(6),\n    'justifyContent': 'space-between',\n    'padding': theme.spacing(1),\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  rowHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  studentUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n}))\n\nconst StudentListRow = ({ course, student }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.row}>\n      <div className={classes.rowHeader}>\n        <Chip\n          color='primary'\n          label={student.username}\n          className={classes.studentUsername}\n        />\n        <Typography>\n          {student.lastName}, {student.firstName}\n        </Typography>\n        {student.hasPrime && <PrimeBadge />}\n        {student.dropped && <DroppedChip />}\n      </div>\n      <div>\n        <ResetStudentPasswordAlert student={student} />\n        <StudentTransferDialog course={course} student={student} />\n        <StudentDialog course={course} student={student} />\n        <DeleteStudentAlert course={course} student={student} />\n      </div>\n    </div>\n  )\n}\n\nconst CourseStudentList = ({ course }) => {\n  return (\n    <>\n      <Typography variant='h6'>Students</Typography>{' '}\n      {course.students && course.students.length > 0 ? (\n        course.students.map((student) => {\n          return (\n            <StudentListRow\n              key={student._id}\n              course={course}\n              student={student}\n            />\n          )\n        })\n      ) : (\n        <div>\n          <Typography>No students have been added to this course</Typography>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CourseStudentList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_COURSE } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteCourseAlert = ({ course, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(course.slug)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {course.name} Period {course.period}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all notifications</li>\n              <li>all transactions</li>\n              <li>all hallpasses</li>\n              <li>all purchases</li>\n              <li>all scores</li>\n            </ul>\n            associated with this course. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteCourseAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Publish } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Filedrop from '../Filedrop'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\nimport parser from '../../parsers'\n\nimport {\n  IMPORT_STUDENTS,\n  STUDENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrop: (users, courseId) =>\n    dispatch({\n      type: IMPORT_STUDENTS,\n      payload: agent.Students.import(users, courseId),\n      snackbar: { message: 'Students imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n})\n\nconst ImportStudentsDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onDrop,\n  onExit,\n  schoolDistrict,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleFiledrop = (file) => {\n    try {\n      const users = parser[schoolDistrict].students(\n        file,\n        defaultStudentPassword\n      )\n      onDrop(users, course._id)\n    } catch {\n      alert('[ERROR] Invalid file type or improperly formatted file')\n    }\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action='Import students' onClick={handleClickOpen}>\n        <Publish />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Students</DialogTitle>\n        <DialogContent>\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <>\n              <Typography gutterBottom>\n                Students can be imported from a .csv file exported from Infinite\n                Campus\n              </Typography>\n              <Filedrop onFiledrop={handleFiledrop} />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportStudentsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  UPDATE_TASK,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (task) =>\n    dispatch({\n      type: DELETE_TASK,\n      payload: agent.Tasks.delete(task),\n      snackbar: { message: 'Assignment deleted', variant: 'success' },\n    }),\n  onLoad: (courseId) =>\n    dispatch({\n      type: TASKS_DIALOG_LOADED,\n      payload: agent.Tasks.getAll(courseId),\n    }),\n  onUpdate: (task) =>\n    dispatch({\n      type: UPDATE_TASK,\n      payload: agent.Tasks.update(task),\n      snackbar: { message: 'Assignment updated', variant: 'success' },\n    }),\n})\n\nconst TasksTable = ({ course, onDelete, onLoad, onUpdate, tasks }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = tasks.map((task) => ({\n    createdAt: moment(task.createdAt),\n    createdAtString: task.createdAt,\n    multiplier: task.multiplier,\n    title: task.title,\n    totalPoints: task.totalPoints,\n    slug: task.slug,\n  }))\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    { title: 'Title', field: 'title', editable: 'never' },\n    { title: 'Total Points', field: 'totalPoints' },\n    { title: 'Multiplier', field: 'multiplier' },\n  ])\n\n  useEffect(() => {\n    onLoad(course._id)\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [tasks])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No assignments found for this course',\n          editRow: {\n            deleteText:\n              'Delete assignment? This will delete all scores for this assignment.',\n            saveTooltip: 'Delete assignment',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = {\n              ...newData,\n              createdAt: moment(newData.createdAtString),\n            }\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksTable)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Assignment } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport TasksTable from './TasksTable'\n\nimport { TASKS_DIALOG_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: TASKS_DIALOG_UNLOADED }),\n})\n\nconst TasksDialog = ({ course, errors, inProgress, onExit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton action='Manage assignments' onClick={handleClickOpen}>\n        <Assignment />\n      </ActionButton>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Manage Assignments</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          <TasksTable course={course} />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDialog)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport CourseStudentList from './CourseStudentList'\nimport DeleteCourseAlert from './DeleteCourseAlert'\nimport ImportStudentsDialog from './ImportStudentsDialog'\nimport StudentDialog from './StudentDialog'\nimport TasksDialog from './TasksDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = ({ courses }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <TasksDialog course={course} />\n                  <StudentDialog course={course} />\n                  <ImportStudentsDialog course={course} />\n                  <CourseDialog course={course} />\n                  <DeleteCourseAlert course={course} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <CourseStudentList course={course} />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Alert from '../Alert'\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n})\n\nconst TeacherCourses = ({\n  courses,\n  importCount,\n  importFailed,\n  onLoad,\n  onUnload,\n  pageLoaded,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Courses'>\n        <CourseDialog />\n      </PageHeader>\n      {importCount !== null && (\n        <Alert>\n          {importCount} students imported\n          <br />\n          {importFailed > 0 &&\n            `${importFailed} students not imported (already have accounts)`}\n        </Alert>\n      )}\n      {pageLoaded ? (\n        <Spinner message='Loading...' />\n      ) : (\n        <CourseList courses={courses} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React from 'react'\nimport { Badge as MuiBadge, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  badge: {\n    left: '-6%',\n    top: '-30%',\n  },\n}))\n\nconst FabBadge = ({ children, value }) => {\n  const classes = useStyles()\n\n  return (\n    <MuiBadge\n      anchorOrigin={{ horizontal: 'left', vertical: 'top' }}\n      badgeContent={value}\n      classes={{ badge: classes.badge }}\n      color='secondary'\n      overlap='circle'\n    >\n      {children}\n    </MuiBadge>\n  )\n}\n\nexport default FabBadge\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  ButtonGroup,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { PlaylistAddCheck, ThumbDown, ThumbUp } from '@material-ui/icons'\n\nimport AccountBalance from '../AccountBalance'\nimport FabBadge from '../FabBadge'\nimport ListErrors from '../ListErrors'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport agent from '../../agent'\n\nimport {\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  UPDATE_SONG_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  panel: {\n    minWidth: theme.spacing(40),\n    maxWidth: theme.spacing(60),\n  },\n  removalAlert: {\n    backgroundColor: theme.palette.error.light,\n    border: `2px solid ${theme.palette.error.dark}`,\n    borderRadius: theme.spacing(2),\n    color: theme.palette.common.white,\n    fontSize: theme.typography.h6.fontSize,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    textTransform: 'uppercase',\n  },\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  songInfo: {\n    marginBottom: theme.spacing(4),\n  },\n  statusButton: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  statusDescription: {\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.background.default\n        : theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  studentInfo: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.up('md')]: {\n      borderTopColor: theme.palette.primary.main,\n      borderTopStyle: 'dotted',\n      borderTopWidth: '4px',\n      paddingTop: theme.spacing(2),\n    },\n  },\n  studentName: {\n    'alignItems': 'center',\n    'display': 'flex',\n    '& > div': {\n      marginRight: theme.spacing(1),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  prime: state.common.settings.prime,\n  songRemovalPurchaseAmount: state.common.settings.songRemovalPurchaseAmount,\n  songRemovalRefundAmount: state.common.settings.songRemovalRefundAmount,\n  songRemovalRequestEnabled: state.common.settings.songRemovalRequestEnabled,\n  songRequestPurchaseAmount: state.common.settings.songRequestPurchaseAmount,\n  // spotifyTokens: state.common.settings.spotifyTokens,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: SONG_REQUESTS_DIALOG_UNLOADED }),\n  onSubmit: (song) =>\n    dispatch({\n      type: UPDATE_SONG_REQUEST,\n      payload: agent.Songs.update(song),\n    }),\n})\n\nconst ProcessSongRequestsDialog = ({\n  courses,\n  errors,\n  inProgress,\n  isLoaded,\n  onExit,\n  onSubmit,\n  prime,\n  songRemovalPurchaseAmount,\n  songRemovalRefundAmount,\n  songRemovalRequestEnabled,\n  songRequestPurchaseAmount,\n  // spotifyTokens,\n}) => {\n  const [count, setCount] = useState(0)\n  const [open, setOpen] = useState(false)\n  const [song, setSong] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [statusDescription, setStatusDescription] = useState(null)\n  const [skippedSongs, setSkippedSongs] = useState([])\n  const [totalCount, setTotalCount] = useState(0)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getLyricSearchUrl = (artist, title) =>\n    `http://www.google.com/search?q=${encodeURIComponent(\n      `lyrics: ${title} by ${artist}`\n    )}`\n\n  const getSpotifySearchUrl = (artist, title) =>\n    `https://open.spotify.com/search/${encodeURIComponent(\n      `${title} ${artist}`\n    )}`\n\n  const getSongCount = () => {\n    let songCount = 0\n    if (courses.length > 0)\n      for (const course of courses)\n        songCount += course.songs.filter((song) =>\n          song.status.startsWith('pending')\n        ).length\n    return songCount\n  }\n\n  const getNextSong = () => {\n    setSong(null)\n    if (courses.length > 0) {\n      for (const course of courses) {\n        if (course.songs.length > 0) {\n          const nextSong = course.songs.find(\n            (song) =>\n              song.status.startsWith('pending') &&\n              !skippedSongs.includes(song._id)\n          )\n          if (nextSong) {\n            nextSong.period = course.period\n            setSong(nextSong)\n            setCount(count + 1)\n            break\n          }\n        }\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n    setTotalCount(getSongCount())\n  }\n\n  const handleClose = () => {\n    setCount(0)\n    setOpen(false)\n    setStatus(null)\n    setStatusDescription(null)\n    setSkippedSongs([])\n    setTotalCount(getSongCount())\n  }\n\n  const handleStatusButtonClick = (status) => {\n    setStatus(status)\n  }\n\n  const handleStatusDescriptionChange = (ev) => {\n    setStatusDescription(ev.target.value)\n  }\n\n  const handleSkip = () => {\n    setSkippedSongs([...skippedSongs, song._id])\n  }\n\n  const handleSubmitApproval = async () => {\n    onSubmit({\n      amount:\n        prime.enabled && song.student.hasPrime\n          ? (1 - prime.songRequestPurchaseDiscount / 100) *\n            songRequestPurchaseAmount\n          : songRequestPurchaseAmount,\n      id: song._id,\n      status,\n      statusDescription,\n    })\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  const refundAllowed = (hasPrime) =>\n    (songRemovalRequestEnabled &&\n      (!prime.enabled || !prime.songRemovalEnabled)) ||\n    (prime.enabled && prime.songRemovalEnabled && hasPrime)\n\n  const handleSubmitRemoval = async () => {\n    onSubmit({\n      id: song._id,\n      purchaseAmount: songRemovalPurchaseAmount,\n      refundAmount: refundAllowed(song.student.hasPrime)\n        ? songRemovalRefundAmount\n        : 0,\n      status: 'removed',\n      statusDescription: `${song.removedBy.firstName} ${song.removedBy.lastName} paid to remove this song`,\n    })\n  }\n\n  useEffect(() => {\n    setTotalCount(getSongCount())\n  }, [isLoaded])\n\n  useEffect(() => {\n    getNextSong()\n  }, [courses])\n\n  useEffect(() => {\n    getNextSong()\n  }, [skippedSongs])\n\n  const DroppedStudentAlert = () => (\n    <Alert severity='error'>\n      This student's account is currently suspended\n    </Alert>\n  )\n\n  const PrimeAlert = () => (\n    <>{prime.enabled && <Alert severity='success'>Prime member</Alert>}</>\n  )\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <FabBadge value={totalCount}>\n          <PlaylistAddCheck className={classes.icon} />\n          Process requests\n        </FabBadge>\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Process Song Requests</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {song ? (\n            song.status !== 'pending removal' ? (\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  {song.student.dropped && <DroppedStudentAlert />}\n                </Grid>\n                <Grid item xs={12}>\n                  {song.student.hasPrime && <PrimeAlert />}\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <div className={classes.panel}>\n                    <div className={classes.songInfo}>\n                      <Typography variant='h6'>{song.title}</Typography>\n                      <Typography\n                        color='textSecondary'\n                        variant='body1'\n                        gutterBottom\n                      >\n                        Song\n                      </Typography>\n                      <Typography variant='h6'>{song.artist}</Typography>\n                      <Typography color='textSecondary' variant='body1'>\n                        Artist\n                      </Typography>\n                    </div>\n\n                    <ButtonGroup>\n                      <Button\n                        href={getLyricSearchUrl(song.artist, song.title)}\n                        target='_blank'\n                      >\n                        Search Lyrics\n                      </Button>\n                      <Button\n                        href={getSpotifySearchUrl(song.artist, song.title)}\n                        target='_blank'\n                      >\n                        Search Spotify\n                      </Button>\n                    </ButtonGroup>\n\n                    <div className={classes.studentInfo}>\n                      <div className={classes.studentName}>\n                        <Chip color='secondary' label={song.period} />\n                        <Typography>\n                          {song.student.firstName} {song.student.lastName}\n                        </Typography>\n                        {song.student.hasPrime && <PrimeBadge size='2xl' />}\n                      </div>\n                      <AccountBalance\n                        cost={songRequestPurchaseAmount}\n                        count={count}\n                        username={song.student.username}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <div className={classes.panel}>\n                    <Typography variant='h6'>Status</Typography>\n\n                    <ButtonGroup fullWidth size='large'>\n                      <Tooltip arrow enterTouchDelay={0} title='Approve'>\n                        <Button\n                          className={`${classes.statusButton} ${\n                            status === 'approved' && classes.selected\n                          }`}\n                          onClick={() => handleStatusButtonClick('approved')}\n                        >\n                          <ThumbUp />\n                        </Button>\n                      </Tooltip>\n                      <Tooltip arrow enterTouchDelay={0} title='Reject'>\n                        <Button\n                          className={`${classes.statusButton} ${\n                            status === 'rejected' && classes.selected\n                          }`}\n                          onClick={() => handleStatusButtonClick('rejected')}\n                        >\n                          <ThumbDown />\n                        </Button>\n                      </Tooltip>\n                    </ButtonGroup>\n                    {status === 'approved' && (\n                      <div className={classes.statusDescription}>\n                        <Typography gutterBottom>\n                          <strong>Condition for Approval</strong> (optional)\n                        </Typography>\n                        <FormControl component='fieldset'>\n                          <RadioGroup\n                            name='statusDescription'\n                            value={statusDescription}\n                            onChange={handleStatusDescriptionChange}\n                          >\n                            <FormControlLabel\n                              value='Clean version'\n                              control={<Radio />}\n                              label='Clean version'\n                            />\n                            <FormControlLabel\n                              value='Instrumental version'\n                              control={<Radio />}\n                              label='Instrumental version'\n                            />\n                            <FormControlLabel\n                              value='Picked my best guess'\n                              control={<Radio />}\n                              label='Picked my best guess'\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </div>\n                    )}\n                    {status === 'rejected' && (\n                      <div className={classes.statusDescription}>\n                        <Typography gutterBottom>\n                          <strong>Reason for Rejection</strong> (optional)\n                        </Typography>\n                        <FormControl component='fieldset'>\n                          <RadioGroup\n                            name='statusDescription'\n                            value={statusDescription}\n                            onChange={handleStatusDescriptionChange}\n                          >\n                            <FormControlLabel\n                              value='Inappropriate content (language, drugs, sex, and/or violence)'\n                              control={<Radio />}\n                              label='Inappropriate content (language, drugs, sex, and/or violence)'\n                            />\n                            <FormControlLabel\n                              value='Not available on Spotify'\n                              control={<Radio />}\n                              label='Not available on Spotify'\n                            />\n                            <FormControlLabel\n                              value='other'\n                              control={<Radio />}\n                              label='Other'\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </div>\n                    )}\n                  </div>\n                </Grid>\n              </Grid>\n            ) : (\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  {song.removedBy.dropped && <DroppedStudentAlert />}\n                </Grid>\n                <Grid item xs={12}>\n                  {song.removedBy.hasPrime && <PrimeAlert />}\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={classes.panel}>\n                    <div className={classes.songInfo}>\n                      <Typography variant='h6'>{song.title}</Typography>\n                      <Typography\n                        color='textSecondary'\n                        variant='body1'\n                        gutterBottom\n                      >\n                        Song\n                      </Typography>\n                      <Typography variant='h6'>{song.artist}</Typography>\n                      <Typography color='textSecondary' variant='body1'>\n                        Artist\n                      </Typography>\n                    </div>\n\n                    <div className={classes.removalAlert}>\n                      Removal Requested by{' '}\n                      {`${song.removedBy.firstName} ${song.removedBy.lastName}`}\n                      {song.removedBy.hasPrime && <PrimeBadge />}\n                    </div>\n\n                    <div className={classes.studentInfo}>\n                      <div className={classes.studentName}>\n                        <Chip color='secondary' label={song.period} />\n                        <Typography>\n                          {song.student.firstName} {song.student.lastName}\n                        </Typography>\n                        {song.student.hasPrime && <PrimeBadge size='2xl' />}\n                      </div>\n                      <AccountBalance\n                        cost={songRemovalPurchaseAmount}\n                        count={count}\n                        username={song.removedBy.username}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            )\n          ) : (\n            <Alert severity='info'>\n              <AlertTitle>All caught up!</AlertTitle>\n              There are no songs to process at this time\n            </Alert>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          {song && (\n            <Typography\n              style={{ marginRight: 'auto' }}\n              variant='subtitle2'\n            >{`Song ${count} of ${totalCount}`}</Typography>\n          )}\n          {song &&\n            (song.status !== 'pending removal' ? (\n              <Button\n                color='primary'\n                disabled={inProgress || !status}\n                onClick={handleSubmitApproval}\n                variant='contained'\n              >\n                {inProgress ? 'Saving...' : 'Save & Continue'}\n              </Button>\n            ) : (\n              <Button\n                color='secondary'\n                disabled={inProgress}\n                onClick={handleSubmitRemoval}\n                variant='contained'\n              >\n                {inProgress ? 'Removing...' : 'Remove & Continue'}\n              </Button>\n            ))}\n          {song && (\n            <Button\n              disabled={inProgress}\n              onClick={handleSkip}\n              variant='contained'\n            >\n              Skip\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {song ? 'Cancel' : 'Close'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProcessSongRequestsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\nimport { Chip, Tooltip } from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport ProcessSongRequestsDialog from './ProcessSongRequestsDialog'\nimport agent from '../../agent'\n\nimport {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.songs })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_SONG_REQUEST,\n      payload: agent.Songs.delete(id),\n      snackbar: { message: 'Song request deleted', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forTeacher(),\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst TeacherSongs = ({ courses, onDelete, onLoad, onUnload }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = courses\n    .map((course) =>\n      course.songs.map((song) => ({\n        artist: song.artist,\n        createdAt: moment(song.createdAt),\n        dropped: song.student.dropped,\n        hasPrime: song.student.hasPrime,\n        period: course.period,\n        purchasedBy: `${song.student.firstName} ${song.student.lastName} ${\n          song.student.dropped ? '(dropped)' : ''\n        }`,\n        status: song.status,\n        statusDescription: song.statusDescription,\n        title: song.title,\n        _id: song._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    {\n      title: 'Request Date',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    { title: 'Purchased by', field: 'purchasedBy', editable: 'never' },\n    {\n      title: 'Prime',\n      field: 'hasPrime',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          rowData.hasPrime ? (\n            <PrimeBadge />\n          ) : (\n            ''\n          )\n        ) : rowData ? (\n          <PrimeBadge />\n        ) : (\n          'No Prime'\n        ),\n    },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        'approved': 'approved',\n        'pending': 'pending', // @todo: remove [for backwards compatibility]\n        'pending approval': 'pending approval',\n        'pending removal': 'pending removal',\n        'rejected': 'rejected',\n        'removed': 'removed',\n      },\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <span style={{ alignItems: 'center', display: 'flex' }}>\n            {rowData.statusDescription ? (\n              <>\n                {rowData.status}\n                <Tooltip\n                  arrow\n                  color='primary'\n                  enterTouchDelay={0}\n                  title={rowData.statusDescription}\n                >\n                  <InfoOutlined style={{ marginLeft: '8px' }} />\n                </Tooltip>\n              </>\n            ) : (\n              rowData.status\n            )}\n          </span>\n        ) : (\n          <span>{rowData}</span>\n        ),\n    },\n  ])\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <>\n      <PageHeader title='Manage Song Requests'>\n        <ProcessSongRequestsDialog />\n      </PageHeader>\n\n      <MaterialTable\n        title='Song Requests'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No song requests have been submitted',\n            editRow: {\n              deleteText: 'Delete song request?',\n              saveTooltip: 'Delete song',\n            },\n          },\n        }}\n        options={{ actionsColumnIndex: -1, paging: false, grouping: true }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const dataDelete = [...data]\n              const index = oldData.tableData.id\n              dataDelete.splice(index, 1)\n              setData([...dataDelete])\n              onDelete(oldData._id)\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSongs)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { Chip } from '@material-ui/core'\nimport MaterialTable from 'material-table'\n\nimport Points from '../Points'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport PurchaseDetailsList from './PurchaseDetailsList'\nimport agent from '../../agent'\n\nimport { DELETE_PURCHASE } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  courses: state.purchases.courses,\n  prime: state.common.settings.prime,\n  taxRate: state.common.settings.taxRate,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_PURCHASE,\n      payload: agent.Purchases.delete(id),\n      snackbar: { message: 'Purchase deleted', variant: 'success' },\n    }),\n})\n\nconst ManagePurchasesTable = ({ courses, onDelete, prime, taxRate }) => {\n  const [data, setData] = useState([])\n\n  const primeRate = prime.storePurchaseDiscount\n  const isPrime = prime.enabled && primeRate > 0\n\n  const mappedData = courses\n    .map((course) =>\n      course.purchases.map((purchase) => ({\n        createdAt: moment(purchase.createdAt),\n        hasPrime: purchase.student.hasPrime,\n        note: purchase.note,\n        period: course.period,\n        products: purchase.products,\n        purchasedBy: `${purchase.student.firstName} ${\n          purchase.student.lastName\n        } ${purchase.student.dropped ? '(dropped)' : ''}`,\n        quantities: purchase.quantities,\n        status: purchase.status,\n        totalCost: purchase.products.reduce(\n          (prev, cur) =>\n            prev +\n            cur.cost *\n              purchase.quantities[cur._id] *\n              (taxRate / 100 + 1) *\n              (isPrime && purchase.student.hasPrime ? 1 - primeRate / 100 : 1),\n          0\n        ),\n        totalItems: Object.values(purchase.quantities).reduce(\n          (prev, cur) => prev + cur,\n          0\n        ),\n        _id: purchase._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    {\n      title: 'Purchase Date',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    { title: 'Total Items', field: 'totalItems' },\n    {\n      title: 'Total Cost',\n      field: 'totalCost',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Points value={rowData.totalCost} />\n        ) : (\n          <Points value={rowData} />\n        ),\n    },\n    { title: 'Purchased by', field: 'purchasedBy' },\n    {\n      title: 'Prime',\n      field: 'hasPrime',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          rowData.hasPrime ? (\n            <PrimeBadge />\n          ) : (\n            ''\n          )\n        ) : rowData ? (\n          <PrimeBadge />\n        ) : (\n          'No Prime'\n        ),\n    },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    { title: 'Notes', field: 'note' },\n    { title: 'Status', field: 'status' },\n  ])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <MaterialTable\n      title='Purchases'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No purchases have been made',\n          editRow: {\n            deleteText: 'Delete purchase?',\n            saveTooltip: 'Delete purchase',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, grouping: true }}\n      detailPanel={(rowData) => {\n        return (\n          <PurchaseDetailsList\n            hasPrime={rowData.hasPrime}\n            products={rowData.products}\n            quantities={rowData.quantities}\n          />\n        )\n      }}\n      onRowClick={(event, rowData, togglePanel) => togglePanel()}\n      editable={{\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const dataDelete = [...data]\n            const index = oldData.tableData.id\n            dataDelete.splice(index, 1)\n            setData([...dataDelete])\n            onDelete(oldData._id)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManagePurchasesTable)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  ButtonGroup,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { ShoppingCart, ThumbDown, ThumbUp } from '@material-ui/icons'\n\nimport AccountBalance from '../AccountBalance'\nimport FabBadge from '../FabBadge'\nimport InputBox from '../InputBox'\nimport ListErrors from '../ListErrors'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport PurchaseDetailsList from '../Purchases/PurchaseDetailsList'\nimport agent from '../../agent'\n\nimport {\n  PURCHASES_DIALOG_UNLOADED,\n  UPDATE_PURCHASE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  panel: {\n    minWidth: theme.spacing(40),\n    maxWidth: theme.spacing(60),\n  },\n  purchaseNote: {\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  removalAlert: {\n    backgroundColor: theme.palette.error.light,\n    border: `2px solid ${theme.palette.error.dark}`,\n    borderRadius: theme.spacing(2),\n    color: theme.palette.common.white,\n    fontSize: theme.typography.h6.fontSize,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    textTransform: 'uppercase',\n  },\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  songInfo: {\n    marginBottom: theme.spacing(4),\n  },\n  statusButton: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  studentInfo: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.up('md')]: {\n      borderTopColor: theme.palette.primary.main,\n      borderTopStyle: 'dotted',\n      borderTopWidth: '4px',\n      paddingTop: theme.spacing(2),\n    },\n  },\n  studentName: {\n    'alignItems': 'center',\n    'display': 'flex',\n    '& > div': {\n      marginRight: theme.spacing(1),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.purchases,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: PURCHASES_DIALOG_UNLOADED }),\n  onUpdate: (purchase) =>\n    dispatch({\n      type: UPDATE_PURCHASE,\n      payload: agent.Purchases.update(purchase),\n    }),\n})\n\nconst ProcessPurchasesDialog = ({\n  courses,\n  errors,\n  inProgress,\n  isLoaded,\n  onExit,\n  onUpdate,\n  prime,\n}) => {\n  const [count, setCount] = useState(0)\n  const [invoice, setInvoice] = useState({})\n  const [open, setOpen] = useState(false)\n  const [purchase, setPurchase] = useState(null)\n  const [purchaseNote, setPurchaseNote] = useState('')\n  const [skippedPurchases, setSkippedPurchases] = useState([])\n  const [status, setStatus] = useState(null)\n  const [totalCount, setTotalCount] = useState(0)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getPurchaseCount = () => {\n    let count = 0\n    if (courses.length > 0)\n      for (const course of courses)\n        count += course.purchases.filter((purchase) =>\n          purchase.status.startsWith('pending')\n        ).length\n    return count\n  }\n\n  const getNextPurchase = () => {\n    const prevPurchaseId = purchase?._id\n    setPurchase(null)\n    if (courses.length > 0) {\n      for (const course of courses) {\n        if (course.purchases.length > 0) {\n          const nextPurchase = course.purchases.find(\n            (purchase) =>\n              purchase.status.startsWith('pending') &&\n              !skippedPurchases.includes(purchase._id)\n          )\n          if (nextPurchase) {\n            nextPurchase.period = course.period\n            setPurchase(nextPurchase)\n            if (prevPurchaseId !== nextPurchase._id) setCount(count + 1)\n            break\n          }\n        }\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n    setTotalCount(getPurchaseCount())\n  }\n\n  const handleClose = () => {\n    setCount(0)\n    setOpen(false)\n    setStatus(null)\n    setPurchaseNote('')\n    setSkippedPurchases([])\n    setTotalCount(getPurchaseCount())\n  }\n\n  const handleAddPurchaseItemClick = (product) => {\n    const updatedPurchase = {\n      ...purchase,\n      products:\n        purchase.products.findIndex((prod) => prod._id === product._id) > -1\n          ? purchase.products\n          : [...purchase.products, product],\n      quantities: { ...purchase.quantities, [product._id]: 1 },\n      id: purchase._id,\n    }\n    onUpdate(updatedPurchase)\n  }\n\n  const handleDeletePurchaseItemClick = (productId, purchase) => {\n    const products = purchase.products.filter(\n      (product) => product._id !== productId\n    )\n    const quantities = { ...purchase.quantities }\n    delete quantities[productId]\n    onUpdate({\n      ...purchase,\n      products,\n      quantities,\n      id: purchase._id,\n    })\n  }\n\n  const handleUpdatePurchaseItemQuantity = (productId, quantity) => {\n    const quantities = { ...purchase.quantities, [productId]: quantity }\n    onUpdate({ ...purchase, quantities, id: purchase._id })\n  }\n\n  const handleSaveButtonClick = async () => {\n    onUpdate({\n      ...purchase,\n      id: purchase._id,\n      note: purchaseNote,\n      status,\n    })\n    setStatus(null)\n    setPurchaseNote('')\n  }\n\n  const handleStatusButtonClick = (status) => {\n    setStatus(status)\n  }\n\n  const handleSkip = () => {\n    setSkippedPurchases([...skippedPurchases, purchase._id])\n    setStatus(null)\n    setPurchaseNote('')\n  }\n\n  useEffect(() => {\n    setTotalCount(getPurchaseCount())\n  }, [isLoaded])\n\n  useEffect(() => {\n    getNextPurchase()\n  }, [courses, skippedPurchases])\n\n  const DroppedStudentAlert = () => (\n    <Alert severity='error'>\n      This student's account is currently suspended\n    </Alert>\n  )\n\n  const PrimeAlert = () => (\n    <>{prime.enabled && <Alert severity='success'>Prime member</Alert>}</>\n  )\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <FabBadge value={totalCount}>\n          <ShoppingCart className={classes.icon} />\n          Process purchases\n        </FabBadge>\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Process Purchases</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {purchase ? (\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                {purchase.student.dropped && <DroppedStudentAlert />}\n              </Grid>\n              <Grid item xs={12}>\n                {purchase.student.hasPrime && <PrimeAlert />}\n              </Grid>\n              <Grid item xs={12}>\n                <PurchaseDetailsList\n                  actions={{\n                    add: (product) => handleAddPurchaseItemClick(product),\n                    delete: (productId) =>\n                      handleDeletePurchaseItemClick(productId, purchase),\n                    setInvoice: (invoice) => setInvoice(invoice),\n                    update: (productId, quantity) =>\n                      handleUpdatePurchaseItemQuantity(productId, quantity),\n                  }}\n                  hasPrime={purchase.student.hasPrime}\n                  products={purchase.products}\n                  quantities={purchase.quantities}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <div className={classes.studentInfo}>\n                    <div className={classes.studentName}>\n                      <Chip color='secondary' label={purchase.period} />\n                      <Typography>\n                        {purchase.student.firstName} {purchase.student.lastName}\n                      </Typography>\n                      {purchase.student.hasPrime && <PrimeBadge size='2xl' />}\n                    </div>\n                    <AccountBalance\n                      cost={invoice.total}\n                      count={count}\n                      username={purchase.student.username}\n                    />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <Typography variant='h6'>Status</Typography>\n\n                  <ButtonGroup fullWidth size='large'>\n                    <Tooltip arrow enterTouchDelay={0} title='Approve'>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'approved' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('approved')}\n                      >\n                        <ThumbUp />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip arrow enterTouchDelay={0} title='Decline'>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'declined' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('declined')}\n                      >\n                        <ThumbDown />\n                      </Button>\n                    </Tooltip>\n                  </ButtonGroup>\n                  <InputBox\n                    label='Notes (optional)'\n                    name='purchaseNote'\n                    onChange={setPurchaseNote}\n                    value={purchaseNote}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Alert severity='info'>\n              <AlertTitle>All caught up!</AlertTitle>\n              There are no purchases to process at this time\n            </Alert>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          {purchase && (\n            <>\n              <Typography\n                style={{ marginRight: 'auto' }}\n                variant='subtitle2'\n              >{`Purchase ${count} of ${totalCount}`}</Typography>\n              <Button\n                color='primary'\n                disabled={inProgress || !status}\n                onClick={handleSaveButtonClick}\n                variant='contained'\n              >\n                {inProgress ? 'Saving...' : 'Save & Continue'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleSkip}\n                variant='contained'\n              >\n                Skip\n              </Button>\n            </>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {purchase ? 'Cancel' : 'Close'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProcessPurchasesDialog)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core'\n\nimport ManagePurchasesTable from './ManagePurchasesTable'\nimport PageHeader from '../PageHeader'\nimport ProcessPurchasesDialog from './ProcessPurchasesDialog'\nimport agent from '../../agent'\n\nimport {\n  NAV_TAB_CHANGE,\n  TEACHER_PURCHASES_LOADED,\n  TEACHER_PURCHASES_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.currentUser,\n  ...state.purchases,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_PURCHASES_LOADED,\n      payload: agent.Purchases.forTeacher(),\n    }),\n  onPageChange: (value, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value, redirectTo }),\n  onUnload: () => dispatch({ type: TEACHER_PURCHASES_UNLOADED }),\n})\n\nconst ManagePurchases = ({ onLoad, onPageChange, onUnload, role }) => {\n  const handlePageChange = () => onPageChange('store', `/${role}/products`)\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Purchases'>\n        <Button onClick={handlePageChange} size='small'>\n          Manage Products\n        </Button>\n        <ProcessPurchasesDialog />\n      </PageHeader>\n      <ManagePurchasesTable />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePurchases)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles,\n} from '@material-ui/core'\n\nimport agent from '../../agent'\n\nimport { WHATS_NEW_FLAGS_RESET } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onReset: (role) =>\n    dispatch({\n      type: WHATS_NEW_FLAGS_RESET,\n      payload: agent.Teachers.resetFlags(role),\n      snackbar: {\n        message: `${role.charAt(0).toUpperCase() + role.slice(1)} flags reset`,\n        variant: 'success',\n      },\n    }),\n})\n\nconst ResetWhatsNewAlert = ({ onReset }) => {\n  const [open, setOpen] = useState(false)\n\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (role) => {\n    setOpen(false)\n    onReset(role)\n  }\n\n  return (\n    <>\n      <Button className={classes.button} onClick={handleClickOpen} size='small'>\n        Reset Viewed Changes\n      </Button>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset Viewed Changes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Reset viewed changes flag for all student or teacher accounts?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => handleSubmit('student')}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Reset Students\n          </Button>\n          <Button\n            onClick={() => handleSubmit('teacher')}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Reset Teachers\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(ResetWhatsNewAlert)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst TeacherDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'teacher' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            teacher ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={teacher ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {teacher\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_TEACHER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(user),\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteTeacherAlert = ({ onDelete, teacher }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(teacher)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {teacher.firstName} {teacher.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all notifications</li>\n              <li>all transactions</li>\n              <li>all hallpasses</li>\n              <li>all purchases</li>\n              <li>all products</li>\n              <li>all bonuses</li>\n              <li>all scores</li>\n            </ul>\n            associated with this teacher. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteTeacherAlert)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  Assignment,\n  ExpandMore,\n  Group,\n  LocalAtm,\n  Money,\n  PlaylistAddCheck,\n  ShoppingCart,\n  Store,\n  Wc,\n} from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleHalfStroke,\n  faFlask,\n  faPersonBooth,\n  faUserLargeSlash,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport StatCard from '../StatCard'\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherStats = ({ teacher }) => {\n  const addItems = (items) => (items ? Object.values(items).flat().length : 0)\n\n  const countStudentSetting = (setting, students) =>\n    students\n      ? Object.values(students)\n          .flat()\n          .reduce((prev, cur) => prev + cur[setting], 0)\n      : 0\n\n  return (\n    <div>\n      <Typography variant='h6' gutterBottom>\n        Teacher Stats\n      </Typography>\n      <Grid container spacing={2}>\n        <StatCard\n          icon={<Assignment fontSize='large' />}\n          title='Assignments'\n          value={addItems(teacher.tasks)}\n        />\n        <StatCard\n          icon={<FontAwesomeIcon icon={faCircleHalfStroke} size='lg' />}\n          title='Dark Mode'\n          value={countStudentSetting('darkMode', teacher.students)}\n        />\n        <StatCard\n          icon={<FontAwesomeIcon icon={faUserLargeSlash} size='lg' />}\n          title='Dropped'\n          value={countStudentSetting('dropped', teacher.students)}\n        />\n        <StatCard\n          icon={<Wc fontSize='large' />}\n          title='Hallpasses'\n          value={addItems(teacher.passes)}\n        />\n        <StatCard\n          icon={<ShoppingCart fontSize='large' />}\n          title='Online Purchases'\n          value={addItems(teacher.purchases)}\n        />\n        <StatCard\n          icon={<FontAwesomeIcon icon={faFlask} size='lg' />}\n          title='Prime Members'\n          value={countStudentSetting('hasPrime', teacher.students)}\n        />\n        <StatCard\n          icon={<Store fontSize='large' />}\n          title='Products'\n          value={teacher.products ? teacher.products.length : 0}\n        />\n        <StatCard\n          icon={<Money fontSize='large' />}\n          title='Scores'\n          value={addItems(teacher.scores)}\n        />\n        <StatCard\n          icon={<PlaylistAddCheck fontSize='large' />}\n          title='Songs'\n          value={addItems(teacher.songs)}\n        />\n        <StatCard\n          icon={<Group fontSize='large' />}\n          title='Students'\n          value={addItems(teacher.students)}\n        />\n        <StatCard\n          icon={<LocalAtm fontSize='large' />}\n          title='Transactions'\n          value={addItems(teacher.transactions)}\n        />\n        <StatCard\n          icon={<FontAwesomeIcon icon={faPersonBooth} size='lg' />}\n          title='Viewed Changes'\n          value={countStudentSetting('viewedChanges', teacher.students)}\n        />\n      </Grid>\n    </div>\n  )\n}\n\nconst TeacherCourses = ({ teacher }) => {\n  const countSetting = (setting, students) =>\n    students.reduce((prev, cur) => prev + cur[setting], 0)\n\n  const StatListItem = ({ icon, primary, secondary }) => (\n    <ListItem alignItems='flex-start'>\n      <ListItemAvatar>\n        <Avatar>{icon}</Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={primary} secondary={secondary} />\n    </ListItem>\n  )\n\n  return (\n    <div>\n      <Typography variant='h6' gutterBottom>\n        Courses\n      </Typography>\n      <Grid container spacing={2}>\n        {teacher.courses && teacher.courses.length > 0 ? (\n          teacher.courses.map((course, index) => {\n            return (\n              <Grid item xs={12} md={6} lg={4} key={index}>\n                <Card variant='outlined'>\n                  <CardContent>\n                    <Typography gutterBottom variant='h5'>\n                      {course.name}\n                    </Typography>\n                    <Chip\n                      color='secondary'\n                      label={`Period ${course.period}`}\n                      size='small'\n                      style={{ color: 'white', marginRight: '8px' }}\n                    />\n                    <Chip\n                      color='primary'\n                      label={`${course.students.length} student${\n                        course.students.length === 1 ? '' : 's'\n                      }`}\n                      size='small'\n                      variant='outlined'\n                    />\n                    <List>\n                      <StatListItem\n                        icon={<Assignment />}\n                        primary='Assignments'\n                        secondary={teacher.tasks[course._id].length}\n                      />\n                      <StatListItem\n                        icon={<FontAwesomeIcon icon={faCircleHalfStroke} />}\n                        primary='Dark Mode'\n                        secondary={countSetting(\n                          'darkMode',\n                          teacher.students[course._id]\n                        )}\n                      />\n                      <StatListItem\n                        icon={<FontAwesomeIcon icon={faUserLargeSlash} />}\n                        primary='Dropped'\n                        secondary={countSetting(\n                          'dropped',\n                          teacher.students[course._id]\n                        )}\n                      />\n                      <StatListItem\n                        icon={<Wc />}\n                        primary='Hallpasses'\n                        secondary={teacher.passes[course._id].length}\n                      />\n                      <StatListItem\n                        icon={<ShoppingCart />}\n                        primary='Online Purchases'\n                        secondary={teacher.purchases[course._id].length}\n                      />\n                      <StatListItem\n                        icon={<FontAwesomeIcon icon={faFlask} />}\n                        primary='Prime Members'\n                        secondary={countSetting(\n                          'hasPrime',\n                          teacher.students[course._id]\n                        )}\n                      />\n                      <StatListItem\n                        icon={<Money />}\n                        primary='Scores'\n                        secondary={teacher.scores[course._id].length}\n                      />\n                      <StatListItem\n                        icon={<PlaylistAddCheck />}\n                        primary='Song Requests'\n                        secondary={teacher.songs[course._id].length}\n                      />\n                      <StatListItem\n                        icon={<LocalAtm />}\n                        primary='Transactions'\n                        secondary={teacher.transactions[course._id].length}\n                      />\n                      <StatListItem\n                        icon={<FontAwesomeIcon icon={faPersonBooth} />}\n                        primary='Viewed Changes'\n                        secondary={countSetting(\n                          'viewedChanges',\n                          teacher.students[course._id]\n                        )}\n                      />\n                    </List>\n                  </CardContent>\n                </Card>\n              </Grid>\n            )\n          })\n        ) : (\n          <Grid item xs={12}>\n            <Typography>No courses have been created</Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  )\n}\n\nconst TeacherSettings = ({ settings }) => {\n  const SettingValue = ({ value }) => {\n    const type = typeof value\n    const valueString = JSON.stringify(value)\n    if (type === 'boolean')\n      return (\n        <Chip\n          color={value ? 'primary' : 'secondary'}\n          label={valueString}\n          style={{ color: 'white' }}\n        />\n      )\n    if (type === 'object' && value.hasOwnProperty('_id')) return value._id\n    return valueString\n  }\n\n  return (\n    <div>\n      <Typography variant='h6' gutterBottom>\n        Settings\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Setting</TableCell>\n            <TableCell>Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.keys(settings).map((setting, index) => (\n            <TableRow key={index}>\n              <TableCell>{setting}</TableCell>\n              <TableCell>\n                <SettingValue value={settings[setting]} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\nconst TeacherList = ({ teachers }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog teacher={teacher} />\n                  <DeleteTeacherAlert teacher={teacher} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TeacherStats teacher={teacher} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TeacherCourses teacher={teacher} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TeacherSettings settings={teacher.settings} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography>\n                      <b>Viewed Changes</b>:{' '}\n                      {teacher.viewedChanges ? 'yes' : 'no'}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from './../PageHeader'\nimport ResetWhatsNewAlert from './ResetWhatsNewAlert'\nimport Spinner from '../Spinner'\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n})\n\nconst ManageTeachers = ({ onLoad, onUnload, pageLoaded, teachers }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Teachers'}>\n        <ResetWhatsNewAlert />\n        <TeacherDialog />\n      </PageHeader>\n      {pageLoaded ? (\n        <TeacherList teachers={teachers} />\n      ) : (\n        <Spinner message='Loading...' />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\n\nconst ConfirmationDialog = ({\n  isOpen,\n  label,\n  message,\n  onCancel,\n  onSubmit,\n  title,\n}) => {\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{message}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus color='primary' onClick={onSubmit}>\n          {label}\n        </Button>\n        <Button color='primary' onClick={onCancel}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ConfirmationDialog\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.info.main,\n    borderRadius: '100px',\n    color: theme.palette.common.white,\n    cursor: 'pointer',\n    fontFamily: '\"Carter One\", serif',\n    fontSize: theme.typography.h5.fontSize,\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px`,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n  },\n}))\n\nconst BigButton = (props) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root} {...props}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default BigButton\n","import React from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nimport BigButton from '../BigButton'\nimport Logo from '../Logo'\n\nconst getGradient = (theme, angle) =>\n  `linear-gradient(${angle}, ${theme.palette.primary.main} 0%, ${theme.palette.secondary.main} 100%)`\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    alignItems: 'center',\n    background: theme.palette.primary.main,\n    background: getGradient(theme, '180deg'),\n    color: theme.palette.common.white,\n    cursor: 'pointer',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    height: '500px',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      background: getGradient(theme, '90deg'),\n      flexFlow: 'row nowrap',\n      height: '180px',\n      padding: `${theme.spacing(2)}px ${theme.spacing(4)}px`,\n    },\n  },\n  bannerLogo: {\n    height: '45%',\n    [theme.breakpoints.up('md')]: {\n      height: '100%',\n    },\n  },\n  bannerText: {\n    fontFamily: '\"Carter One\", serif',\n  },\n}))\n\nconst PrimeBanner = (props) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.banner} {...props}>\n      <Logo className={classes.bannerLogo} prime={true} />\n      <Typography\n        align='center'\n        className={classes.bannerText}\n        color='inherit'\n        variant='h4'\n      >\n        Get access\n        <br />\n        to exclusive\n        <br />\n        member benefits!\n      </Typography>\n      <BigButton>Click to learn more</BigButton>\n    </div>\n  )\n}\n\nexport default PrimeBanner\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleHalfStroke,\n  faMoneyBillTrendUp,\n  faMusic,\n  faTag,\n  faTicket,\n  faTruck,\n  faMoneyBillWave,\n  faVolumeXmark,\n} from '@fortawesome/free-solid-svg-icons'\nimport Confetti from 'react-confetti'\n\nimport Logo from '../Logo'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    'display': 'flex',\n    'justifyContent': 'center',\n    '& > img': {\n      width: '75%',\n      [theme.breakpoints.up('md')]: {\n        width: '100%',\n      },\n    },\n  },\n  section: {\n    background: `linear-gradient(90deg, ${theme.palette.primary.main} 0%, ${theme.palette.secondary.main} 100%)`,\n    color: theme.palette.common.white,\n    fontFamily: '\"Carter One\", serif',\n    overflow: 'hidden',\n    padding: `${theme.spacing(6)}px ${theme.spacing(2)}px`,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(8),\n    },\n  },\n  text: {\n    fontFamily: 'inherit',\n  },\n}))\n\nconst PrimeConfirmation = ({ celebrate, enabled, prime }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container alignItems='center' className={classes.section} spacing={2}>\n      {celebrate && <Confetti numberOfPieces={750} recycle={false} />}\n      <Grid item xs={12} md={4} className={classes.logo}>\n        <Logo className={classes.logo} prime={true} />\n      </Grid>\n      {enabled.any && (\n        <Grid item xs={12} md={8}>\n          <Typography\n            className={classes.text}\n            color='inherit'\n            variant='h2'\n            gutterBottom\n          >\n            Welcome to Prime!\n          </Typography>\n          <Typography variant='h5'>\n            You now have instant access to...\n          </Typography>\n          <Typography color='inherit' variant='h6'>\n            <ul className='fa-ul'>\n              {enabled.darkMode && (\n                <li>\n                  <FontAwesomeIcon icon={faCircleHalfStroke} listItem />\n                  both light and dark modes in Settings\n                </li>\n              )}\n              {enabled.discounts.songs && (\n                <li>\n                  <FontAwesomeIcon icon={faMusic} listItem />a{' '}\n                  {prime.songRequestPurchaseDiscount}% discount on all song\n                  requests\n                </li>\n              )}\n              {enabled.songRemoval && (\n                <li>\n                  <FontAwesomeIcon icon={faVolumeXmark} listItem />\n                  ability to remove any songs from the class playlist for a fee\n                </li>\n              )}\n              {enabled.songRemoval && (\n                <li>\n                  <FontAwesomeIcon icon={faMoneyBillTrendUp} listItem />\n                  earn bonus points when one of your songs is removed\n                </li>\n              )}\n              {enabled.discounts.store && (\n                <li>\n                  <FontAwesomeIcon icon={faTag} listItem />a{' '}\n                  {prime.storePurchaseDiscount}% discount on all online store\n                  purchases\n                </li>\n              )}\n              {enabled.sameDay && (\n                <li>\n                  <FontAwesomeIcon icon={faTruck} listItem />\n                  same-day pickup for online purchases rather than at the end of\n                  the week\n                </li>\n              )}\n              {enabled.discounts.hallpass && (\n                <li>\n                  <FontAwesomeIcon icon={faTicket} listItem />a{' '}\n                  {prime.hallpassDiscount}% discount on all hallpass purchases\n                </li>\n              )}\n              <li>\n                <FontAwesomeIcon icon={faMoneyBillWave} listItem />\n                your membership is good for the whole school year\n              </li>\n            </ul>\n          </Typography>\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrimeConfirmation\n","import React from 'react'\nimport {\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleHalfStroke,\n  faFlask,\n  faMoneyBillTrendUp,\n  faMoneyBillWave,\n  faMusic,\n  faTag,\n  faTicket,\n  faTruck,\n  faVolumeXmark,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport BigButton from '../BigButton'\nimport Logo from '../Logo'\nimport Points from '../Points'\nimport primeDarkModeAd from '../../images/prime-darkmode.png'\nimport primeSameDayAd from '../../images/prime-sameday.png'\nimport primeSongRemovalAd from '../../images/prime-songremoval.png'\nimport primeSongsAd from '../../images/prime-songs.png'\nimport primeStoreAd from '../../images/prime-purchases.png'\n\nconst getGradient = (angle, color1, color2) =>\n  `linear-gradient(${angle}, ${color1} 0%, ${color2} 100%)`\n\nconst useStyles = makeStyles((theme) => ({\n  cost: {\n    border: `8px solid ${theme.palette.common.white}`,\n    borderRadius: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: 0,\n    },\n  },\n  list: {\n    'marginBottom': 0,\n    'marginTop': -theme.spacing(1),\n    '& li': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  logo: {\n    'display': 'flex',\n    'justifyContent': 'center',\n    '& > img': {\n      width: '75%',\n      [theme.breakpoints.up('md')]: {\n        width: '100%',\n      },\n    },\n  },\n  padLeft: {\n    [theme.breakpoints.up('md')]: {\n      paddingLeft: `${theme.spacing(4)}px !important`,\n    },\n  },\n  padRight: {\n    [theme.breakpoints.up('md')]: {\n      paddingRight: `${theme.spacing(4)}px !important`,\n    },\n  },\n  section: {\n    'color': theme.palette.common.white,\n    'fontFamily': '\"Carter One\", serif',\n    'overflow': 'hidden',\n    'padding': `${theme.spacing(6)}px ${theme.spacing(2)}px`,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(8),\n    },\n    '& h1': {\n      fontSize: theme.typography.h2.fontSize,\n      [theme.breakpoints.up('md')]: {\n        fontSize: theme.typography.h1.fontSize,\n      },\n    },\n    '& h2': {\n      fontSize: theme.typography.h3.fontSize,\n      [theme.breakpoints.up('md')]: {\n        fontSize: theme.typography.h2.fontSize,\n      },\n    },\n    '& h4': {\n      fontSize: theme.typography.h5.fontSize,\n      [theme.breakpoints.up('md')]: {\n        fontSize: theme.typography.h4.fontSize,\n      },\n    },\n    '& svg': {\n      display: 'block',\n      margin: '0 auto',\n      [theme.breakpoints.up('md')]: {\n        display: 'inline-block',\n      },\n    },\n  },\n  sectionImage: {\n    width: '100%',\n  },\n  songRemovalAd: {\n    [theme.breakpoints.up('md')]: {\n      position: 'absolute',\n      right: '-140px',\n      top: '15px',\n      width: '120%',\n    },\n  },\n  songsAd: {\n    [theme.breakpoints.up('md')]: {\n      left: '-100px',\n      position: 'absolute',\n      top: '-10px',\n      width: '120%',\n    },\n  },\n  storeAd: {\n    [theme.breakpoints.up('md')]: {\n      left: '-50px',\n      position: 'absolute',\n      top: '-30px',\n      width: '110%',\n    },\n  },\n  text: {\n    fontFamily: '\"Carter One\", serif',\n  },\n}))\n\nconst PrimeSignup = ({ balance, enabled, onSubmit, prime }) => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems='center'\n        className={classes.section}\n        spacing={2}\n        style={{\n          background: getGradient(\n            '90deg',\n            theme.palette.primary.main,\n            theme.palette.secondary.main\n          ),\n        }}\n      >\n        <Grid item className={classes.logo} xs={12} md={4}>\n          <Logo prime={true} />\n        </Grid>\n        {enabled.any && (\n          <Grid item xs={12} md={8}>\n            <Typography className={classes.text} color='inherit' variant='h5'>\n              With a Chem Cash Prime membership you get...\n              <ul className={`fa-ul ${classes.list}`}>\n                {enabled.darkMode && (\n                  <li>\n                    <FontAwesomeIcon icon={faCircleHalfStroke} listItem />\n                    access to dark mode\n                  </li>\n                )}\n                {enabled.discounts.songs && (\n                  <li>\n                    <FontAwesomeIcon icon={faMusic} listItem />\n                    discounts on songs\n                  </li>\n                )}\n                {enabled.songRemoval && (\n                  <li>\n                    <FontAwesomeIcon icon={faVolumeXmark} listItem />\n                    ability to remove songs\n                  </li>\n                )}\n                {enabled.discounts.store && (\n                  <li>\n                    <FontAwesomeIcon icon={faTag} listItem />\n                    discounts on store purchases\n                  </li>\n                )}\n                {enabled.sameDay && (\n                  <li>\n                    <FontAwesomeIcon icon={faTruck} listItem />\n                    same-day pickup for online purchases\n                  </li>\n                )}\n                {enabled.discounts.hallpass && (\n                  <li>\n                    <FontAwesomeIcon icon={faTicket} listItem />\n                    discounts on hallpasses\n                  </li>\n                )}\n              </ul>\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n\n      {enabled.darkMode && (\n        <Grid\n          container\n          className={classes.section}\n          spacing={2}\n          style={{ backgroundColor: theme.palette.common.black }}\n        >\n          <Grid item xs={12} md={8} className={classes.padRight}>\n            <Typography align='center' variant='h1' gutterBottom>\n              <FontAwesomeIcon icon={faCircleHalfStroke} /> Dark Mode\n            </Typography>\n            <Typography align='right' variant='h2' gutterBottom>\n              Someone turn on a light, it's dark in here\n            </Typography>\n            <Typography align='right' variant='h4'>\n              As a Prime member <br />\n              you get access to the <br />\n              dark mode toggle <br />\n              on the settings page\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <img className={classes.sectionImage} src={primeDarkModeAd} />\n          </Grid>\n        </Grid>\n      )}\n\n      {enabled.discounts.songs && (\n        <Grid\n          container\n          className={classes.section}\n          spacing={2}\n          style={{\n            background: getGradient(\n              '180deg',\n              theme.palette.primary.dark,\n              theme.palette.primary.light\n            ),\n          }}\n        >\n          <Grid item xs={12}>\n            <Typography align='center' variant='h1' gutterBottom>\n              <FontAwesomeIcon icon={faMusic} /> Song Discounts\n            </Typography>\n          </Grid>\n          <Grid\n            container\n            direction={isMobile ? 'column-reverse' : 'row'}\n            spacing={2}\n            wrap='nowrap'\n          >\n            <Grid item xs={12} md={7} style={{ position: 'relative' }}>\n              <img\n                className={`${classes.sectionImage} ${classes.songsAd}`}\n                src={primeSongsAd}\n              />\n            </Grid>\n            <Grid item xs={12} md={5} className={classes.padLeft}>\n              <Typography align='left' variant='h2' gutterBottom>\n                Hear more of the music you love\n              </Typography>\n              <Typography align='left' variant='h4'>\n                With discounts on all song purchases, you can buy more of the\n                music you enjoy\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n\n      {enabled.songRemoval && (\n        <Grid\n          container\n          className={classes.section}\n          spacing={2}\n          style={{\n            background: getGradient(\n              '180deg',\n              theme.palette.error.dark,\n              theme.palette.error.light\n            ),\n          }}\n        >\n          <Grid item xs={12}>\n            <Typography align='center' variant='h1' gutterBottom>\n              <FontAwesomeIcon icon={faVolumeXmark} /> Remove Songs\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={5} className={classes.padLeft}>\n            <Typography align='right' variant='h2' gutterBottom>\n              Hear less music you don't like\n            </Typography>\n            <Typography align='right' variant='h4'>\n              Prime members have the ability to remove any songs and earn bonus\n              points if their songs get removed\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={7} style={{ position: 'relative' }}>\n            <img\n              className={`${classes.sectionImage} ${classes.songRemovalAd}`}\n              src={primeSongRemovalAd}\n            />\n          </Grid>\n        </Grid>\n      )}\n\n      {enabled.discounts.store && (\n        <Grid\n          container\n          className={classes.section}\n          spacing={2}\n          style={{\n            background: getGradient(\n              '180deg',\n              theme.palette.secondary.dark,\n              theme.palette.secondary.light\n            ),\n          }}\n        >\n          <Grid item xs={12}>\n            <Typography align='center' variant='h1' gutterBottom>\n              <FontAwesomeIcon icon={faTag} /> Store Discounts\n            </Typography>\n          </Grid>\n          <Grid\n            container\n            direction={isMobile ? 'column-reverse' : 'row'}\n            spacing={2}\n            wrap='nowrap'\n          >\n            <Grid item xs={12} md={7} style={{ position: 'relative' }}>\n              <img\n                className={`${classes.sectionImage} ${classes.storeAd}`}\n                src={primeStoreAd}\n              />\n            </Grid>\n            <Grid item xs={12} md={5} className={classes.padLeft}>\n              <Typography align='left' variant='h2' gutterBottom>\n                Get more,\n                <br />\n                spend less\n              </Typography>\n              <Typography align='left' variant='h4'>\n                With discounts on all store purchases, you can buy more of the\n                stuff you want\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n\n      {enabled.sameDay && (\n        <Grid\n          container\n          className={classes.section}\n          spacing={2}\n          style={{\n            background: getGradient(\n              '180deg',\n              theme.palette.info.dark,\n              theme.palette.info.light\n            ),\n          }}\n        >\n          <Grid item xs={12}>\n            <Typography align='center' variant='h1' gutterBottom>\n              <FontAwesomeIcon icon={faTruck} /> Same-Day Pickup\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={7} className={classes.padLeft}>\n            <Typography align='right' variant='h2' gutterBottom>\n              Get your stuff...\n              <br />\n              now\n            </Typography>\n            <Typography align='right' variant='h4'>\n              Only Prime members can pickup their purchases the same day they\n              ordered them, while non-members will have to wait until the end of\n              the week\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <img className={classes.sectionImage} src={primeSameDayAd} />\n          </Grid>\n        </Grid>\n      )}\n\n      <Grid\n        container\n        className={classes.section}\n        spacing={2}\n        style={{\n          background: getGradient(\n            '90deg',\n            theme.palette.secondary.main,\n            theme.palette.primary.main\n          ),\n        }}\n      >\n        <Grid item xs={12}>\n          <Typography align='center' variant='h1' gutterBottom>\n            <FontAwesomeIcon icon={faFlask} /> Join Today\n          </Typography>\n        </Grid>\n        {enabled.any && (\n          <Grid item xs={12} md={6}>\n            <Typography align='center' variant='h5'>\n              Full Membership Benefits\n            </Typography>\n            <Typography color='inherit' variant='h6'>\n              <ul className='fa-ul'>\n                {enabled.darkMode && (\n                  <li>\n                    <FontAwesomeIcon icon={faCircleHalfStroke} listItem />\n                    access to both light and dark modes\n                  </li>\n                )}\n                {enabled.discounts.songs && (\n                  <li>\n                    <FontAwesomeIcon icon={faMusic} listItem />a{' '}\n                    {prime.songRequestPurchaseDiscount}% discount on song\n                    requests\n                  </li>\n                )}\n                {enabled.songRemoval && (\n                  <li>\n                    <FontAwesomeIcon icon={faVolumeXmark} listItem />\n                    ability to remove any songs from the class playlist for a\n                    fee\n                  </li>\n                )}\n                {enabled.songRemoval && (\n                  <li>\n                    <FontAwesomeIcon icon={faMoneyBillTrendUp} listItem />\n                    earn bonus points when one of your songs is removed\n                  </li>\n                )}\n                {enabled.discounts.store && (\n                  <li>\n                    <FontAwesomeIcon icon={faTag} listItem />a{' '}\n                    {prime.storePurchaseDiscount}% discount on all store\n                    purchases\n                  </li>\n                )}\n                {enabled.sameDay && (\n                  <li>\n                    <FontAwesomeIcon icon={faTruck} listItem />\n                    same-day pickup for online purchases rather than at the end\n                    of the week\n                  </li>\n                )}\n                {enabled.discounts.hallpass && (\n                  <li>\n                    <FontAwesomeIcon icon={faTicket} listItem />a{' '}\n                    {prime.hallpassDiscount}% discount on all hallpass purchases\n                  </li>\n                )}\n                <li>\n                  <FontAwesomeIcon icon={faMoneyBillWave} listItem />\n                  one-time fee for the whole school year\n                </li>\n              </ul>\n            </Typography>\n          </Grid>\n        )}\n        <Grid container item alignItems='center' xs={12} md={6}>\n          <Grid item xs={12} className={classes.cost}>\n            <Typography align='center' variant='h4'>\n              Cost\n            </Typography>\n            <Typography align='center' className={classes.text} variant='h3'>\n              <Points value={prime.purchaseAmount} />\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {balance >= prime.purchaseAmount ? (\n              <BigButton onClick={onSubmit}>Click here to buy Prime</BigButton>\n            ) : (\n              <BigButton>Insufficient balance</BigButton>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default PrimeSignup\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport ConfirmationDialog from '../ConfirmationDialog'\nimport ListErrors from '../ListErrors'\nimport PrimeBanner from './PrimeBanner'\nimport PrimeConfirmation from './PrimeConfirmation'\nimport PrimeSignup from './PrimeSignup'\nimport agent from '../../agent'\n\nimport {\n  PRIME_PURCHASE_DIALOG_UNLOADED,\n  SUBMIT_PRIME_PURCHASE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  paper: {\n    overflow: 'hidden',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n  errors: state.purchases.errors,\n  inProgress: state.purchases.inProgress,\n  prime: state.common.settings.prime,\n  scores: state.scores,\n  songRemovalRequestEnabled: state.common.settings.songRemovalRequestEnabled,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: PRIME_PURCHASE_DIALOG_UNLOADED }),\n  onSubmit: (transaction) =>\n    dispatch({\n      type: SUBMIT_PRIME_PURCHASE,\n      payload: agent.Transactions.add(transaction),\n      snackbar: { message: 'Now Enrolled in Prime', variant: 'success' },\n    }),\n})\n\nconst PrimeBannerDialog = ({\n  currentUser,\n  errors,\n  inProgress,\n  onExit,\n  onSubmit,\n  prime,\n  scores,\n  songRemovalRequestEnabled,\n  trigger,\n}) => {\n  const [confirm, setConfirm] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [testPrime, setTestPrime] = useState(false)\n\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setTestPrime(false)\n  }\n\n  const handleConfirm = () => {\n    setConfirm(true)\n  }\n\n  const handleCancelConfirm = () => {\n    setConfirm(false)\n  }\n\n  const handleSubmit = () => {\n    setConfirm(false)\n    if (currentUser.role === 'student') {\n      onSubmit({\n        amount: prime.purchaseAmount,\n        description: 'Chem Cash Prime Membership',\n        type: 'purchase',\n        student: { _id: currentUser._id },\n      })\n    } else {\n      setTestPrime(true)\n    }\n  }\n\n  const enabled = {\n    any:\n      prime.darkModeEnabled ||\n      prime.songRequestPurchaseDiscount > 0 ||\n      prime.storePurchaseDiscount > 0 ||\n      prime.sameDayDeliveryEnabled,\n    darkMode: prime.darkModeEnabled,\n    discounts: {\n      hallpass: prime.hallpassDiscount > 0,\n      songs: prime.songRequestPurchaseDiscount > 0,\n      store: prime.storePurchaseDiscount > 0,\n    },\n    sameDay: prime.sameDayDeliveryEnabled,\n    songRemoval: prime.songRemovalEnabled && songRemovalRequestEnabled,\n  }\n\n  const showBanner = prime.enabled && !currentUser.hasPrime\n  const showButton = prime.enabled && currentUser.hasPrime\n\n  return (\n    <>\n      {showBanner && trigger === 'banner' && (\n        <PrimeBanner onClick={handleClickOpen} />\n      )}\n      {showButton && trigger === 'button' && (\n        <Button onClick={handleClickOpen} size='small'>\n          View Prime Benefits\n        </Button>\n      )}\n      <Dialog\n        fullWidth\n        classes={{ paper: classes.paper }} // needed due to overflow/scroll when showing <PrimeConfirmation /> (due to confetti)\n        fullScreen={isMobile}\n        maxWidth='lg'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogContent\n          style={{\n            overflowX: 'hidden',\n            overflowY:\n              (currentUser.hasPrime || testPrime) && !isMobile ? 'hidden' : '', // needed due to slight overflow/scroll when showing <PrimeConfirmation />\n            padding: 0,\n          }}\n        >\n          <ListErrors errors={errors} />\n          {currentUser.hasPrime || testPrime ? (\n            <PrimeConfirmation\n              celebrate={trigger === 'banner'}\n              enabled={enabled}\n              prime={prime}\n            />\n          ) : (\n            <PrimeSignup\n              balance={scores.total?.balance}\n              enabled={enabled}\n              onSubmit={handleConfirm}\n              prime={prime}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          {!currentUser.hasPrime && !testPrime && (\n            <Button\n              color='primary'\n              disabled={\n                inProgress || scores.total?.balance < prime.purchaseAmount\n              }\n              onClick={handleConfirm}\n              type='submit'\n              variant='contained'\n            >\n              {inProgress ? 'Purchasing...' : 'Purchase Prime'}\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {currentUser.hasPrime || testPrime ? 'Close' : 'Cancel'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ConfirmationDialog\n        isOpen={confirm}\n        label='Purchase'\n        message={`Your account will be charged ${prime.purchaseAmount} pts and you will have instant access to Prime benefits`}\n        onCancel={handleCancelConfirm}\n        onSubmit={handleSubmit}\n        title='Purchase a Prime membership?'\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimeBannerDialog)\n","import React from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nimport { convertGoogleLink } from '../converter'\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    position: 'absolute',\n    top: '-18px',\n  },\n  img: {\n    maxHeight: '100%',\n    maxWidth: '100%',\n    minWidth: '20px',\n  },\n  window: {\n    alignItems: 'center',\n    display: 'flex',\n    borderColor: theme.palette.secondary.main,\n    borderStyle: 'solid',\n    borderWidth: '4px',\n    height: '300px',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n    position: 'relative',\n  },\n}))\n\nconst ImagePreview = ({ src }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.window}>\n      <Typography variant='h6' className={classes.header}>\n        Image Preview\n      </Typography>\n      {src ? (\n        <img className={classes.img} src={convertGoogleLink(src)} />\n      ) : (\n        <Typography>No photo url provided</Typography>\n      )}\n    </div>\n  )\n}\n\nexport default ImagePreview\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nconst TextFieldLimit = (props) => {\n  return (\n    <TextField\n      error={Boolean(props.errors)}\n      inputProps={{ maxLength: props.limit }}\n      helperText={\n        props.errors\n          ? `${props.errors} | ${props.value.length}/${props.limit}`\n          : `${props.value.length}/${props.limit}`\n      }\n      {...props}\n    />\n  )\n}\n\nexport default TextFieldLimit\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ImagePreview from '../ImagePreview'\nimport ListErrors from '../ListErrors'\nimport TextFieldLimit from '../TextFieldLimit'\nimport agent from '../../agent'\n\nimport {\n  ADD_PRODUCT,\n  PRODUCT_DIALOG_UNLOADED,\n  UPDATE_PRODUCT,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  addIcon: {\n    marginRight: theme.spacing(1),\n  },\n  updateIcon: {\n    'color': 'rgba(255, 255, 255, 0.7)',\n    '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.3)', color: 'white' },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.products,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (product) =>\n    dispatch({\n      type: ADD_PRODUCT,\n      payload: agent.Products.add(product),\n      snackbar: { message: 'Product added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: PRODUCT_DIALOG_UNLOADED }),\n  onUpdate: (product) =>\n    dispatch({\n      type: UPDATE_PRODUCT,\n      payload: agent.Products.update(product),\n      snackbar: { message: 'Product updated', variant: 'success' },\n    }),\n})\n\nconst ProductDialog = ({\n  currentUser,\n  product,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const CHAR_LIMITS = { name: 60, description: 140 }\n\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...product, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {product ? (\n        currentUser.role === 'teacher' && (\n          <ActionButton\n            action='Edit product'\n            onClick={handleClickOpen}\n            className={classes.updateIcon}\n          >\n            <Edit />\n          </ActionButton>\n        )\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.addIcon} />\n          Add product\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth='lg'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: product?.name || '',\n            description: product?.description || '',\n            photoUrl: product?.photoUrl || '',\n            cost: product?.cost || 0,\n            maxPurchaseQuantity: product?.maxPurchaseQuantity || 0,\n            quantity: product?.quantity || 0,\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string()\n              .max(\n                CHAR_LIMITS.name,\n                `Cannot be longer than ${CHAR_LIMITS.name} characters`\n              )\n              .required('Required'),\n            description: Yup.string().max(\n              CHAR_LIMITS.description,\n              `Cannot be longer than ${CHAR_LIMITS.description} characters`\n            ),\n            photoUrl: Yup.string().url('Not a valid url').required('Required'),\n            cost: Yup.number().typeError('Numbers only').required('Required'),\n            maxPurchaseQuantity: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            quantity: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n          })}\n          onSubmit={async (values) => {\n            product ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>\n                {product ? 'Edit product' : 'Add product'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      as={TextFieldLimit}\n                      autoFocus={product ? false : true}\n                      color='primary'\n                      disabled={inProgress}\n                      label='Product Name'\n                      name='name'\n                      type='text'\n                      limit={CHAR_LIMITS.name}\n                      errors={formik.errors.name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      as={TextFieldLimit}\n                      color='primary'\n                      disabled={inProgress}\n                      label='Product Description'\n                      name='description'\n                      type='text'\n                      limit={CHAR_LIMITS.description}\n                      errors={formik.errors.description}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Photo Url'\n                      name='photoUrl'\n                      type='url'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Cost'\n                      name='cost'\n                      type='number'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Quantity'\n                      name='quantity'\n                      type='number'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Max purchase quantity'\n                      name='maxPurchaseQuantity'\n                      type='number'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <ImagePreview src={formik.values.photoUrl} />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  disabled={inProgress}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  {product\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_PRODUCT } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    'color': 'rgba(255, 255, 255, 0.7)',\n    '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.3)', color: 'white' },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_PRODUCT,\n      payload: agent.Products.delete(slug),\n      snackbar: { message: 'Product deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteProductAlert = ({ currentUser, product, onDelete }) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(product.slug)\n  }\n\n  return (\n    <>\n      {currentUser.role === 'teacher' && (\n        <ActionButton\n          action='Delete product'\n          onClick={handleClickOpen}\n          className={classes.icon}\n        >\n          <Delete />\n        </ActionButton>\n      )}\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Product</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete <b>{product.name}</b>? This action{' '}\n            <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteProductAlert)\n","import React from 'react'\nimport {\n  Badge,\n  Chip,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, AddShoppingCart, Remove } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport DeleteProductDialog from './DeleteProductDialog'\nimport Points from '../Points'\nimport ProductDialog from './ProductDialog'\nimport { convertGoogleLink } from '../../converter'\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: { display: 'flex' },\n  cost: {\n    color: 'white',\n  },\n  description: {\n    marginBottom: '-1.5rem',\n    opacity: 0,\n    transition: 'opacity 0s ease-in-out',\n  },\n  icon: {\n    'color': 'rgba(255, 255, 255, 0.7)',\n    '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.3)', color: 'white' },\n  },\n  name: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(0.5),\n    whiteSpace: 'nowrap',\n  },\n  quantity: {\n    marginLeft: theme.spacing(2),\n  },\n  tile: {\n    '&:hover .MuiGridListTileBar-root': {\n      'height': '100%',\n      '& #description': {\n        marginBottom: 0,\n        opacity: 1,\n        transition: 'margin-bottom 0.35s ease-in-out, opacity 0.5s ease-in-out',\n      },\n    },\n  },\n  tileBar: {\n    alignItems: 'flex-end',\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    transition: 'height 0.35s ease-in-out',\n  },\n  title: {\n    whiteSpace: 'normal',\n  },\n}))\n\nconst ProductsGallery = ({\n  onAddToCart,\n  onInventoryChange,\n  cart,\n  products,\n  storeEnabled,\n  userRole,\n}) => {\n  const classes = useStyles()\n\n  const theme = useTheme()\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'))\n  const isMedium = useMediaQuery(theme.breakpoints.down('md'))\n  const cols = isSmall ? 1 : isMedium || userRole === 'teacher' ? 2 : 3\n\n  const handleAddToCartClick = (product) => onAddToCart(product)\n\n  const handleInventoryChangeClick = (product, type) =>\n    onInventoryChange({\n      ...product,\n      quantity: type === 'add' ? product.quantity + 1 : product.quantity - 1,\n    })\n\n  return (\n    <div>\n      <GridList cols={cols} spacing={8}>\n        {products?.length > 0 ? (\n          products.map((product) => {\n            const max =\n              product.maxPurchaseQuantity < product.quantity &&\n              product.maxPurchaseQuantity !== 0\n                ? product.maxPurchaseQuantity\n                : product.quantity\n            const maxQuantityReached =\n              max > 0 && cart?.quantities[product._id] >= max\n            return (\n              <GridListTile key={product.slug} className={classes.tile}>\n                <img\n                  src={convertGoogleLink(product.photoUrl)}\n                  alt={product.name}\n                />\n\n                <GridListTileBar\n                  classes={{\n                    actionIcon: classes.actionIcon,\n                    title: classes.title,\n                  }}\n                  className={classes.tileBar}\n                  title={\n                    <div>\n                      <div className={classes.description} id='description'>\n                        {product.description}{' '}\n                        {product.maxPurchaseQuantity > 0 && (\n                          <em>(Limit {product.maxPurchaseQuantity})</em>\n                        )}\n                      </div>\n                      <Tooltip\n                        arrow\n                        enterTouchDelay={0}\n                        placement='bottom-start'\n                        title={product.name}\n                      >\n                        <div className={classes.name}>{product.name}</div>\n                      </Tooltip>\n                    </div>\n                  }\n                  subtitle={\n                    <div>\n                      <Chip\n                        className={classes.cost}\n                        color='primary'\n                        label={<Points value={product.cost} />}\n                        size='small'\n                      />\n                      {(userRole === 'teacher' || product.quantity < 5) && (\n                        <Chip\n                          className={classes.quantity}\n                          color='secondary'\n                          label={\n                            userRole === 'teacher'\n                              ? `${product.quantity} available`\n                              : `only ${product.quantity} left`\n                          }\n                          size='small'\n                          variant='outlined'\n                        />\n                      )}\n                    </div>\n                  }\n                  actionIcon={\n                    userRole === 'teacher' ? (\n                      <>\n                        <ActionButton\n                          action='Remove inventory'\n                          className={classes.icon}\n                          onClick={() =>\n                            handleInventoryChangeClick(product, 'remove')\n                          }\n                        >\n                          <Remove />\n                        </ActionButton>\n                        <ActionButton\n                          action='Add inventory'\n                          className={classes.icon}\n                          onClick={() =>\n                            handleInventoryChangeClick(product, 'add')\n                          }\n                        >\n                          <Add />\n                        </ActionButton>\n                        <ProductDialog product={product} />\n                        <DeleteProductDialog product={product} />\n                      </>\n                    ) : (\n                      storeEnabled && (\n                        <ActionButton\n                          action={\n                            !maxQuantityReached\n                              ? 'Add to cart'\n                              : 'Max limit reached'\n                          }\n                          disabled={maxQuantityReached}\n                          onClick={() => handleAddToCartClick(product)}\n                          className={classes.icon}\n                        >\n                          <Badge\n                            badgeContent={cart.quantities[product._id]}\n                            color='secondary'\n                          >\n                            <AddShoppingCart />\n                          </Badge>\n                        </ActionButton>\n                      )\n                    )\n                  }\n                />\n              </GridListTile>\n            )\n          })\n        ) : (\n          <Typography>\n            {userRole === 'teacher'\n              ? 'You have no products'\n              : 'Your teacher has not added any products'}\n          </Typography>\n        )}\n      </GridList>\n    </div>\n  )\n}\n\nexport default ProductsGallery\n","import React from 'react'\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: theme.palette.common.white,\n    margin: '0 auto',\n  },\n}))\n\nconst DialogAppBar = ({ onClose, title }) => {\n  const classes = useStyles()\n\n  return (\n    <AppBar position='relative'>\n      <Toolbar>\n        <IconButton edge='start' onClick={onClose}>\n          <Close />\n        </IconButton>\n        <Typography variant='h5' className={classes.title}>\n          {title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default DialogAppBar\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Dialog, Fab, makeStyles } from '@material-ui/core'\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\nimport Alert from '../Alert'\nimport FabBadge from '../FabBadge'\nimport DialogAppBar from '../DialogAppBar'\nimport ListErrors from '../ListErrors'\nimport PageHeader from '../PageHeader'\nimport PageWrapper from '../PageWrapper'\nimport Points from '../Points'\nimport PurchaseDetailsList from './PurchaseDetailsList'\nimport Spinner from '../Spinner'\nimport { SlideUpTransition } from '../../transitions'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_CART_PRODUCT,\n  STUDENT_CART_LOADED,\n  STUDENT_CART_UNLOADED,\n  SUBMIT_PURCHASE,\n  UPDATE_CART_PRODUCT_QUANTITY,\n} from '../../constants/actionTypes'\nimport { useGetInvoice } from '../../hooks'\n\nconst useStyles = makeStyles((theme) => ({\n  cartIcon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.common.currentUser,\n  ...state.common.settings,\n  ...state.purchases,\n  ...state.scores.total,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (productId) => dispatch({ type: DELETE_CART_PRODUCT, productId }),\n  onLoad: (username) =>\n    dispatch({\n      type: STUDENT_CART_LOADED,\n      payload: agent.Scores.getStudentScores(username),\n    }),\n  onSubmit: (purchase) =>\n    dispatch({\n      type: SUBMIT_PURCHASE,\n      payload: agent.Purchases.add(purchase),\n      snackbar: { message: 'Order submitted', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: STUDENT_CART_UNLOADED }),\n  onUpdate: (productId, qty) =>\n    dispatch({ type: UPDATE_CART_PRODUCT_QUANTITY, productId, qty }),\n})\n\nconst ShoppingCart = ({\n  allowPurchasesWithInsufficientFunds,\n  balance,\n  cart,\n  errors,\n  hasPrime,\n  inProgress,\n  onDelete,\n  onLoad,\n  onSubmit,\n  onUnload,\n  onUpdate,\n  prime,\n  taxRate,\n  username,\n}) => {\n  const [open, setOpen] = useState(false)\n  const { invoice } = useGetInvoice(\n    cart.products,\n    cart.quantities,\n    taxRate,\n    prime.enabled && hasPrime ? prime.storePurchaseDiscount : 0\n  )\n\n  const classes = useStyles()\n\n  const handleClickOpen = () => setOpen(true)\n\n  const handleClose = () => setOpen(false)\n\n  const handleSubmitClick = () => {\n    onSubmit({\n      products: cart.products,\n      quantities: cart.quantities,\n      status: 'pending',\n    })\n    handleClose()\n  }\n\n  const getTotalItemsInCart = Object.values(cart.quantities).reduce(\n    (prev, cur) => prev + cur,\n    0\n  )\n\n  const hasInsufficientFunds =\n    !allowPurchasesWithInsufficientFunds && invoice.total > balance\n\n  useEffect(() => {\n    onLoad(username)\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <Fab\n        color='primary'\n        disabled={cart.products.length === 0}\n        onClick={handleClickOpen}\n        variant='extended'\n      >\n        <FabBadge value={getTotalItemsInCart}>\n          <ShoppingCartIcon className={classes.cartIcon} />\n          Checkout\n        </FabBadge>\n      </Fab>\n      <Dialog\n        fullScreen\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        TransitionComponent={SlideUpTransition}\n      >\n        <DialogAppBar onClose={handleClose} title='Store' />\n        <PageWrapper>\n          <Container>\n            <PageHeader title='Complete Your Order'>\n              <Fab\n                color='primary'\n                disabled={cart.products.length === 0 || hasInsufficientFunds}\n                onClick={handleSubmitClick}\n                variant='extended'\n              >\n                <ShoppingBasketIcon className={classes.cartIcon} />\n                Place Your Order\n              </Fab>\n            </PageHeader>\n            <ListErrors errors={errors} />\n            {(hasInsufficientFunds || invoice.total > balance) && (\n              <Alert disableClose={true} severity='warning'>\n                Insufficient funds! You have {<Points value={balance} />}\n              </Alert>\n            )}\n            {inProgress ? (\n              <Spinner message='Loading...' />\n            ) : (\n              <PurchaseDetailsList\n                actions={{\n                  delete: onDelete,\n                  update: onUpdate,\n                }}\n                products={cart.products}\n                quantities={cart.quantities}\n              />\n            )}\n          </Container>\n        </PageWrapper>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\n\nimport Points from '../Points'\nimport PurchaseDetailsList from './PurchaseDetailsList'\nimport agent from '../../agent'\n\nimport { STUDENT_DELETE_PURCHASE } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  hasPrime: state.common.currentUser.hasPrime,\n  prime: state.common.settings.prime,\n  purchases: state.purchases.purchases,\n  taxRate: state.common.settings.taxRate,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: STUDENT_DELETE_PURCHASE,\n      payload: agent.Purchases.delete(id),\n      snackbar: { message: 'Purchase deleted', variant: 'success' },\n    }),\n})\n\nconst StudentPurchasesTable = ({\n  hasPrime,\n  onDelete,\n  prime,\n  purchases,\n  taxRate,\n}) => {\n  const [data, setData] = useState([])\n\n  const primeRate = prime.storePurchaseDiscount\n  const isPrime = prime.enabled && primeRate > 0 && hasPrime\n\n  const mappedData = purchases.map((purchase) => ({\n    createdAt: moment(purchase.createdAt),\n    note: purchase.note,\n    quantities: purchase.quantities,\n    products: purchase.products,\n    status: purchase.status,\n    totalCost: purchase.products.reduce(\n      (prev, cur) =>\n        prev +\n        cur.cost *\n          purchase.quantities[cur._id] *\n          (taxRate / 100 + 1) *\n          (isPrime ? 1 - primeRate / 100 : 1),\n      0\n    ),\n    totalItems: Object.values(purchase.quantities).reduce(\n      (prev, cur) => prev + cur,\n      0\n    ),\n    _id: purchase._id,\n  }))\n\n  const [columns] = useState([\n    {\n      title: 'Purchase Date',\n      field: 'createdAt',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row'\n          ? rowData.createdAt.format('ddd, MMM D, YYYY')\n          : rowData.format('ddd, MMM D, YYYY'),\n    },\n    { title: 'Total Items', field: 'totalItems' },\n    {\n      title: 'Total Cost',\n      field: 'totalCost',\n      render: (rowData) => <Points value={rowData.totalCost} />,\n    },\n    { title: 'Notes', field: 'note' },\n    { title: 'Status', field: 'status' },\n  ])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [purchases])\n\n  return (\n    <MaterialTable\n      title='Orders'\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No purchases have been made',\n          editRow: {\n            deleteText: 'Delete purchase? This will cancel your order',\n            saveTooltip: 'Delete purchase',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, showTitle: false }}\n      detailPanel={(rowData) => {\n        return (\n          <PurchaseDetailsList\n            products={rowData.products}\n            quantities={rowData.quantities}\n          />\n        )\n      }}\n      onRowClick={(event, rowData, togglePanel) => togglePanel()}\n      editable={{\n        isDeletable: (rowData) => rowData.status === 'pending',\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const dataDelete = [...data]\n            const index = oldData.tableData.id\n            dataDelete.splice(index, 1)\n            setData([...dataDelete])\n            onDelete(oldData._id)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudentPurchasesTable)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Container, Dialog } from '@material-ui/core'\n\nimport DialogAppBar from '../DialogAppBar'\nimport ListErrors from '../ListErrors'\nimport PageHeader from '../PageHeader'\nimport PageWrapper from '../PageWrapper'\nimport Spinner from '../Spinner'\nimport StudentPurchasesTable from './StudentPurchasesTable'\nimport { SlideUpTransition } from './../../transitions'\n\nimport agent from '../../agent'\n\nimport {\n  STUDENT_PURCHASES_LOADED,\n  STUDENT_PURCHASES_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.purchases,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: STUDENT_PURCHASES_LOADED,\n      payload: agent.Purchases.forStudent(),\n    }),\n  onUnload: () =>\n    dispatch({\n      type: STUDENT_PURCHASES_UNLOADED,\n    }),\n})\n\nconst StudentPurchasesDialog = ({ errors, inProgress, onLoad, onUnload }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n    onLoad()\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    onUnload()\n  }\n\n  return (\n    <>\n      <Button onClick={handleClickOpen} size='small'>\n        Your orders\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n        TransitionComponent={SlideUpTransition}\n      >\n        <DialogAppBar onClose={handleClose} title='Store' />\n        <PageWrapper>\n          <Container>\n            <PageHeader title='Your Orders' />\n            <ListErrors errors={errors} />\n            {inProgress ? (\n              <Spinner message='Loading...' />\n            ) : (\n              <StudentPurchasesTable />\n            )}\n          </Container>\n        </PageWrapper>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudentPurchasesDialog)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Grid, Typography } from '@material-ui/core'\n\nimport PageHeader from '../PageHeader'\nimport PrimeBadge from '../Prime/PrimeBadge'\nimport PrimeDialog from '../Prime/PrimeDialog'\nimport ProductDialog from './ProductDialog'\nimport ProductsGallery from './ProductsGallery'\nimport ShoppingCart from '../Purchases/ShoppingCart'\nimport Spinner from '../Spinner'\nimport StudentPurchasesDialog from '../Purchases/StudentPurchasesDialog'\nimport agent from '../../agent'\n\nimport {\n  ADD_TO_CART,\n  NAV_TAB_CHANGE,\n  PRODUCTS_PAGE_LOADED,\n  PRODUCTS_PAGE_UNLOADED,\n  UPDATE_PRODUCT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  settings: state.common.settings,\n  ...state.common.currentUser,\n  ...state.products,\n  ...state.purchases,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddToCart: (product) => dispatch({ type: ADD_TO_CART, product }),\n  onLoad: () =>\n    dispatch({ type: PRODUCTS_PAGE_LOADED, payload: agent.Products.getAll() }),\n  onPageChange: (value, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value, redirectTo }),\n  onUnload: () => dispatch({ type: PRODUCTS_PAGE_UNLOADED }),\n  onUpdateInventory: (product) =>\n    dispatch({\n      type: UPDATE_PRODUCT,\n      payload: agent.Products.update(product),\n    }),\n})\n\nconst Products = ({\n  cart,\n  onAddToCart,\n  onLoad,\n  onPageChange,\n  onUnload,\n  onUpdateInventory,\n  pageLoaded,\n  products,\n  role,\n  settings,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  const isTeacher = role === 'teacher'\n\n  const inStockProducts = products.filter((product) => product.quantity > 0)\n\n  const outOfStockProducts = products.filter((product) => product.quantity <= 0)\n\n  const handlePageChange = () => onPageChange('store', `/${role}/store`)\n\n  const handleAddToCart = (product) => onAddToCart(product)\n\n  const handleInventoryChange = (product) => onUpdateInventory(product)\n\n  const primeMessage =\n    'The banner below is visible to students at the top of this page when Prime is enabled'\n\n  return (\n    <>\n      <PageHeader title={isTeacher ? 'Manage Products' : 'View Products'}>\n        {isTeacher ? (\n          <>\n            {settings.storeEnabled && (\n              <Button onClick={handlePageChange} size='small'>\n                Manage purchases\n              </Button>\n            )}\n            <ProductDialog />\n          </>\n        ) : (\n          settings.storeEnabled && (\n            <>\n              <PrimeDialog trigger='button' />\n              <StudentPurchasesDialog />\n              <ShoppingCart />\n            </>\n          )\n        )}\n      </PageHeader>\n      {role === 'student' && <PrimeDialog trigger='banner' />}\n      {pageLoaded ? (\n        <Grid container spacing={8}>\n          <Grid item xs={12}>\n            {isTeacher ? (\n              <>\n                <Typography variant='h5' gutterBottom>\n                  In Stock\n                </Typography>\n                <ProductsGallery\n                  onInventoryChange={handleInventoryChange}\n                  products={inStockProducts}\n                  userRole={role}\n                />\n              </>\n            ) : (\n              <ProductsGallery\n                cart={cart}\n                products={inStockProducts}\n                onAddToCart={handleAddToCart}\n                storeEnabled={settings.storeEnabled}\n                userRole={role}\n              />\n            )}\n          </Grid>\n          {isTeacher && (\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Out of Stock\n              </Typography>\n              <ProductsGallery\n                onInventoryChange={handleInventoryChange}\n                products={outOfStockProducts}\n                userRole={role}\n              />\n            </Grid>\n          )}\n          {isTeacher && settings.prime.enabled && (\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Prime <PrimeBadge title={primeMessage} />\n              </Typography>\n              <PrimeDialog trigger='banner' />\n            </Grid>\n          )}\n        </Grid>\n      ) : (\n        <Spinner message='Loading...' />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport AccountSuspendedDialog from './Student/AccountSuspendedDialog'\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherAccounts from './Teacher/TeacherAccounts'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport TeacherSongs from './Teacher/TeacherSongs'\nimport ManagePurchases from './Purchases/ManagePurchases'\nimport ManageTeachers from './Admin/ManageTeachers'\nimport Products from './Products/Products'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <AccountSuspendedDialog user={currentUser} />\n      <Header />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n            <ProtectedRoute path='/student/store' component={Products} />\n\n            <ProtectedRoute\n              path='/teacher/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/products' component={Products} />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/teacher/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/teacher/store' component={ManagePurchases} />\n\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Grid, Link, Typography, makeStyles } from '@material-ui/core'\n\nimport profile from '../images/doc-may-profile.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    '& p:not(:last-of-type)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  profile: {\n    borderRadius: '100%',\n    boxShadow: theme.shadows[10],\n    float: 'right',\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    width: '120px',\n  },\n}))\n\nconst About = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid className={classes.page} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align='center' gutterBottom variant='h5'>\n          What is Chem Cash?\n        </Typography>\n        <img className={classes.profile} src={profile} />\n        <Typography variant='body2'>\n          Hi! I'm Joseph May, a high school chemistry teacher from Las Vegas.\n          While I love teaching chemistry, I also love programming for the web,\n          so why not combine the two.\n        </Typography>\n        <Typography variant='body2'>\n          Chem Cash is a points-based rewards system I use in my classroom. The\n          idea for this site came from a colleage who was inspired by one of his\n          own high school science teachers.\n        </Typography>\n        <Typography variant='body2'>\n          Students earn points in two ways: (1) through payouts based on their\n          assessment scores and (2) with bonus points earned for anything I deam\n          worthy of reward such as winning in-class competitions or going above\n          and beyond to help me or a student.\n        </Typography>\n        <Typography variant='body2'>\n          These points can be used to \"purchase\" goods such as school supplies,\n          electronics, and anything I can find for cheap or get for free.\n        </Typography>\n        <Typography variant='body2'>\n          However, the hottest-selling item is song requests. During work time\n          in my class I play music for my students. Each class period has its\n          own playlist and students can only add songs to the playlist by\n          spending their Chem Cash points.\n        </Typography>\n        <Typography variant='body2'>\n          I created this program to help manage all of the logistics behind this\n          system of incentives. While it can support multiple teachers, I am\n          running it on no-cost servers, so it was not intended to be a public\n          program. Although, if you are interested in learning more, please\n          reach out to me{' '}\n          <Link href='mailto:jwmay87+chemcash@gmail.com'>here</Link>.\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport Div100vh from 'react-div-100vh'\nimport {\n  Button,\n  Grid,\n  LinearProgress,\n  Paper,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport { ArrowBackIos, InfoOutlined } from '@material-ui/icons'\n\nimport About from '../About'\nimport Logo from '../Logo'\nimport LoginForm from './LoginForm'\nimport background from '../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  aboutLink: {\n    bottom: theme.spacing(2),\n    position: 'absolute',\n    right: theme.spacing(4),\n  },\n  loginLink: {\n    'marginBottom': theme.spacing(2),\n    '& > a': {\n      textDecoration: 'none',\n    },\n  },\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    maxHeight: '90%',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      maxHeight: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n  pathname: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst AboutLink = () => {\n  const classes = useStyles()\n  return (\n    <span className={classes.aboutLink}>\n      <Tooltip arrow enterTouchDelay={0} title='Learn more'>\n        <Link to='/about'>\n          <InfoOutlined color='secondary' fontSize='small' />\n        </Link>\n      </Tooltip>\n    </span>\n  )\n}\n\nconst LoginLink = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.loginLink}>\n      <Link to='/login'>\n        <Button color='secondary' startIcon={<ArrowBackIos />}>\n          Login\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nconst Login = ({ currentUser, inProgress, onUnload, pathname }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => onUnload()\n  }, [])\n\n  if (currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              {pathname.includes('about') ? (\n                <>\n                  <LoginLink />\n                  <About />\n                </>\n              ) : (\n                <>\n                  <AboutLink />\n                  <LoginForm />\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport agent from '../agent'\n\nimport { WHATS_NEW_DIALOG_UNLOADED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () =>\n    dispatch({\n      type: WHATS_NEW_DIALOG_UNLOADED,\n      payload: agent.Auth.save({ viewedChanges: true }), // @note: set to 'false' when testing\n    }),\n})\n\nconst WhatsNewDialog = ({ currentUser, onExit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  useEffect(() => {\n    if (currentUser) setOpen(!currentUser.viewedChanges)\n  }, [currentUser])\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      fullWidth={true}\n      maxWidth={'md'}\n      open={open}\n      onClose={handleClose}\n      onClick={(ev) => ev.stopPropagation()}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n    >\n      <DialogTitle>What's New in Chem Cash!</DialogTitle>\n      <DialogContent>\n        {currentUser?.role === 'student'\n          ? StudentWhatsNewContent()\n          : TeacherWhatsNewContent()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant='contained'>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nconst NewDate = ({ date }) => (\n  <Grid item xs={12}>\n    <Typography variant='body1'>\n      <em>{date}</em>\n    </Typography>\n  </Grid>\n)\n\nconst NewItem = ({ children, title }) => (\n  <Grid item xs={12}>\n    <Typography variant='subtitle2'>{title}</Typography>\n    <Typography variant='body2'>{children}</Typography>\n  </Grid>\n)\n\nconst StudentWhatsNewContent = () => (\n  <Grid container spacing={4}>\n    <Grid item xs={12} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6'>Latest Updates</Typography>\n      </Grid>\n      <NewDate date='August 1, 2023' />\n      <NewItem title='Chem Cash Prime'>\n        If enabled by your teacher, Chem Cash Prime may give you access to Chem\n        Cash features and discounts for a one-time membership fee depending on\n        your teacher's settings. To see if your teacher has enabled Chem Cash\n        Prime, go to the <em>Store</em> tab and look for the Chem Cash Prime\n        banner at the top of the page.\n      </NewItem>\n    </Grid>\n    <Grid item xs={12} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6'>Previous Updates</Typography>\n      </Grid>\n      <NewDate date='October 14, 2022' />\n      <NewItem title='Dark Mode'>\n        Like things dark? Chem Cash now has a dark mode that you can activate by\n        going to the Settings tab and switching on dark mode under Appearance.\n        Be sure to save your changes in order for the dark mode to activate.\n      </NewItem>\n      <NewDate date='October 10, 2022' />\n      <NewItem title='Hallpasses'>\n        If enabled by your teacher, you can now create a digital hallpass for\n        using the restroom. Your teacher can choose to set a point value for\n        hallpasses, which will be deducted from your account. You can only\n        generate one hallpass per day and only if there is not already an active\n        hallpass for another student. You can create a hallpass by clicking the\n        restroom icon on the Account page.\n      </NewItem>\n      <NewItem title='Sorting by Dates'>\n        Sorting by dates in all tables (transactions, songs, and purchases) now\n        works as expected, sorting by date and not alphabetically.\n      </NewItem>\n      <NewDate date='August 22, 2022' />\n      <NewItem title='Score and Transaction Notifications'>\n        You will now receive notifications when new or updated assessment scores\n        post to your account and when new bonuses and quick purchases post to\n        your account.\n      </NewItem>\n      <NewDate date='August 1, 2022' />\n      <NewItem title='Notification Center'>\n        You will now see notifications when you first login if there are updates\n        to your song and online purchase requests. You will see if your requests\n        were approved or denied and will see any notes associted with your\n        request.\n      </NewItem>\n      <NewItem title='Online Purchases'>\n        If your teacher has enabled the feature, you can now make purchases\n        online! You can add items to your cart on the Store page, manage your\n        cart, submit your order, and view your previous orders.\n      </NewItem>\n      <NewItem title='Product Quantities'>\n        You can now see when there are fewer than five items of any given\n        product with a new badge shown on the Products or Store page.\n      </NewItem>\n      <NewDate date='Dec 30, 2021' />\n      <NewItem title='Delete Songs'>\n        You can now request songs to be removed from your class playlist by\n        going to the 'Songs' tab and clicking the trash can icon next to the\n        song you want removed. This feature is only available if your teacher\n        has activated it.\n      </NewItem>\n      <NewItem title=\"What's New Notifications\">\n        This notification is a new feature! When new Chem Cash udpates are\n        released this notification will appear once on the first time you access\n        the website after the update is released.\n      </NewItem>\n    </Grid>\n  </Grid>\n)\n\nconst TeacherWhatsNewContent = () => (\n  <Grid container spacing={4}>\n    <Grid item xs={12} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6'>Latest Updates</Typography>\n      </Grid>\n      <NewDate date='August 1, 2023' />\n      <NewItem title='Chem Cash Prime'>\n        When enabled, Chem Cash Prime allows you to charge students a one-time\n        membership fee for access to various features and discounts of your\n        choice including access to dark mode, the ability to remove songs,\n        same-day delivery, and discounts on songs, purchases, and hallpasses. Go\n        to the <em>Settings</em> page to enable Prime as this is a great way for\n        students to spend their points. To see the Prime banner and purchase\n        experience that students will have, go to the bottom of the{' '}\n        <em>Products</em> page when Prime is enabled.\n      </NewItem>\n      <NewItem title='Suspend Student Accounts'>\n        A new toggle on the 'Edit Student' dialog allows students to be dropped\n        which suspends their account. Students will not be able to create\n        hallpasses, make song requests, or submit online purchases while thier\n        account is dropped/suspended. Dropped/suspended students will not appear\n        in the bulk bonus or bulk purchase table and they will not affect the\n        data in the economy view.\n      </NewItem>\n      <NewItem title='Product Inventory Updates When Purchases are Submitted'>\n        Product inventory in the Store is updated once a purchase is submitted\n        rather than approved. This ensures that when a purchase is submitted for\n        an item that would then be out of stock, no other student can also\n        submit an order for it.\n      </NewItem>\n      <NewItem title='New Sorting When Processing Online Orders and Song Requests'>\n        When processing online purchases and song requests, you will see that\n        they are now sorted oldest to newest rather than the other way around.\n        This makes it more first-come-first served.\n      </NewItem>\n      <NewItem title='Hallpasses Out of Beta'>\n        Hallpasses are now ready for primetime and are out of beta!\n      </NewItem>\n    </Grid>\n    <Grid item xs={12} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6'>Previous Updates</Typography>\n      </Grid>\n      <NewDate date='October 14, 2022' />\n      <NewItem title='Dark Mode'>\n        Chem Cash now has a dark mode that you or students can activate by going\n        to the Settings tab and switching on dark mode under Appearance. Be sure\n        to save your changes in order for the dark mode to activate.\n      </NewItem>\n      <NewDate date='October 10, 2022' />\n      <NewItem title='Hallpasses (beta)'>\n        If you have beta features enabled, you can now enalbe hallpasses. This\n        allows teachers and students to create digital hallpasses for students\n        to leave the classroom. You can choose to set a point value for\n        hallpasses, which will automatically be deducted from student's\n        accounts. Students can only generate one hallpass per day and only if\n        there is not already an active hallpass for another student. You can\n        create a hallpass for a student anytime by clicking the restroom icon on\n        the Account page when you have a student account open. To view, edit,\n        and delete active and expired hallpasses, go to the Accounts page and\n        click the Update Accounts button. Then select Manage Hallpasses.\n      </NewItem>\n      <NewItem title='Sorting by Dates'>\n        Sorting by dates in all tables (transactions, songs, and purchases) now\n        works as expected, sorting by date and not alphabetically.\n      </NewItem>\n      <NewDate date='August 28, 2022' />\n      <NewItem title='Create and Manage Pre-set Bonuses'>\n        You can now create and manage pre-set bonuses for quickly adding bonus\n        points to a student's account. In the 'Update Accounts' menu on the\n        'Accounts' page, you can now select 'Manage Bonuses' to create, edit,\n        and delete pre-set bonuses that can be added to student's accounts. When\n        adding a bonus to a single student or to many students in a class\n        period, you will now see a dropdown menu of any pre-set bonuses you have\n        created that will auto-populate the amount field as well. Of course,\n        free-form bonuses can still be added.\n      </NewItem>\n      <NewItem title='Bonus and Product Selectors Available for Bulk Purchases'>\n        When adding a bulk bonus or bulk quick purchase to multiple students in\n        a class period, a dropdown of bonuses or products is now available.\n        Selecting a bonus or product from this dropdown will auto-populate the\n        amount field with the amount of the bonus or the cost of the item\n        including tax.\n      </NewItem>\n      <NewItem title='Support for Evergreen School District'>\n        Bock can now import students from the Evergreen School District into the\n        app when creating courses :) Support for importing scores is coming\n        soon!\n      </NewItem>\n      <NewDate date='August 22, 2022' />\n      <NewItem title='Score and Transaction Notifications for Students'>\n        Students will now receive notifications when new or updated assessment\n        scores post to their account and when new bonuses and quick purchases\n        post to their account.\n      </NewItem>\n      <NewDate date='August 1, 2022' />\n      <NewItem title='Online Purchases'>\n        Students can now submit online orders for products! New settings in the{' '}\n        <em>Products and Online Purchases</em> section allow you to control\n        whether students can submit online purchases or not, whether students\n        can submit online purchases if they do not have sufficient points, and a\n        tax rate to be applied to all online purchases of products (does not\n        apply to song requests or removal requests; can be set to zero if you do\n        not want to charge a tax). You can also add purchases to a student's\n        account from the <em>Accounts</em> tab.\n      </NewItem>\n      <NewItem title='Processing Purchases'>\n        If you have enabled online purchases, a new <em>Process Purchases</em>{' '}\n        dialog is available to approve or reject online purchases submitted by\n        students in a manner similar to the song request processing feature.\n        When processing purchases, you will have the option to update the order\n        quantity of each item, add items to the order, remove items from the\n        order, add a note to the order, and approve or reject the order. Upon\n        approval of the order, the on-hand quantity of each product will be\n        automaticaly adjusted.\n      </NewItem>\n      <NewItem title='Notification Center for Student Accounts'>\n        Students will now see notifications when they first login if there are\n        any updates to their song and online store purchase requests. Approval\n        or rejection notes will also be included with the notification.\n      </NewItem>\n      <NewItem title='Inventory Control Buttons and Quantity Display for Products'>\n        On the <em>Products</em> page, two new inventory control buttons are now\n        available to quickly increase or decrease the amount of on-hand product.\n        The quantity of each product is also now visible directly on each\n        product image. Students will only see the on-hand quantity when there\n        are fewer then five items remaining in stock.\n      </NewItem>\n      <NewItem title='Max Purchase Quantity for Products'>\n        A new field is now available for products that sets the maximum purchase\n        quantity limit for each product. When combined with the online store,\n        this will limit the quantity of items a student can add to their cart\n        for each product.\n      </NewItem>\n      <NewItem title='Add Quick Purchases with Automatic Inventory Mangement'>\n        Quick purchases allow you to add a deduction to a student's account for\n        the purchase of a single product from the store or you can enter a\n        custom description. When products from the store are purchased, the\n        inventory is automatically reduced by one.\n      </NewItem>\n      <NewItem title='Points Multiplier for Assignments'>\n        Assignments can now be weighted with a multiplier to increase or\n        decrease their point value. By default, all assignments are imported\n        with a multiplier of 1. To change the multiplier for an assignment in a\n        course go to <em>Courses</em> and click the <em>Manage Assignments</em>{' '}\n        button for that course. Then click the Edit button for the assignment\n        whose multiplier you want to change. The multiplier applies to the\n        points and not to the score.\n      </NewItem>\n      <NewItem title='Google Drive Hosted Images Now Easier to Use'>\n        You can now directly use the link generated by the <em>Get link</em>{' '}\n        feature on Google Drive to add custom product images to your store.\n        Images hosted on Google Drive must have their share permissions set to{' '}\n        <em>Anyone with the link</em> to properly display for all users.\n      </NewItem>\n      <NewItem title='Song Requests Badge'>\n        A badge now appears on the <em>Process Songs</em> button to indicate the\n        number of song requests that are pending approval. A similar badge also\n        appears on the <em>Process Purchases</em> button.\n      </NewItem>\n      <NewItem title='Improved Settings'>\n        The settings page has been improved to make clear which features are\n        enabled and disabled. A new school district setting has been added\n        because <em>somebody</em> had to go and leave CCSD :) so this will\n        ensure that there are no username conflicts with student accounts.\n      </NewItem>\n      <NewDate date='Jan 31, 2022' />\n      <NewItem title='In Stock and Out of Stock Products'>\n        Products with a quantity of zero will no longer be visible to students.\n        Teachers will see these products in an \"Out of Stock\" section on the\n        Products page. Once the product's quantity is greater than zero, the\n        product will appear in the \"In Stock\" section for teachers and will be\n        visible to students.\n      </NewItem>\n      <NewDate date='Jan 23, 2022' />\n      <NewItem title='Student Account Balances Visible When Processing Song Requests'>\n        Student account balances are now visible in the song request processing\n        dialog so you can quickly identify with a red/green color indicator if a\n        student has enough points to buy a song request or a song removal\n        request.\n      </NewItem>\n      <NewItem title='Song Totals Visible When Processing Song Requests'>\n        The total number of song requests to process is now visible in the song\n        request processing dialog along with a running count of requests\n        remaining to process.\n      </NewItem>\n      <NewDate date='Jan 17, 2022' />\n      <NewItem title='Economy View'>\n        You can now view a summary of details about the account balances for\n        students in your courses including the total number of points available\n        in your economy and an interactive table containing the account balances\n        of all students in all of your courses.\n      </NewItem>\n      <NewItem title='Beta Features Flag'>\n        A new flag that enables beta features when they are available can now be\n        found in the Account Details section of the Settings page.\n      </NewItem>\n      <NewDate date='Dec 30, 2021' />\n      <NewItem title='Delete Songs'>\n        Students can now request songs to be removed from thier class playlist\n        by going to the 'Songs' tab and clicking the trash can icon, once you\n        have activated the feature in the Settings.\n      </NewItem>\n      <NewItem title='Delete Songs Settings'>\n        New settings have been added to control student ability to request songs\n        for deletion as well as settings for the amount of points charged for a\n        song removal and the amount of points refunded to the person whose song\n        was removed.\n      </NewItem>\n      <NewItem title='Search for Products'>\n        You can now search for products in a dropdown menu when entering\n        purchases on the accounts page and the cost of the product will\n        automatically populate in the amount field.\n      </NewItem>\n      <NewItem title=\"What's New Notifications\">\n        This notification is a new feature! When new Chem Cash udpates are\n        released this notification will appear once on the first time you access\n        the website after the update is released.\n      </NewItem>\n    </Grid>\n  </Grid>\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WhatsNewDialog)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_BONUS,\n  DELETE_BONUS,\n  LOAD_BONUSES,\n  UNLOAD_BONUSES,\n  UPDATE_BONUS,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  bonuses: [],\n  errors: null,\n}\n\nconst sortByDescription = (a, b) => a.description.localeCompare(b.description)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_BONUS:\n      return {\n        ...state,\n        bonuses: action.error\n          ? state.bonuses\n          : [...state.bonuses, action.payload.bonus].sort((a, b) =>\n              sortByDescription(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n      }\n    case DELETE_BONUS:\n      return {\n        ...state,\n        bonuses: action.error\n          ? state.bonuses\n          : state.bonuses.filter(\n              (bonus) => bonus._id !== action.payload.bonus._id\n            ),\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOAD_BONUSES:\n      return {\n        ...state,\n        bonuses: action.error ? state.bonuses : action.payload.bonuses,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case UNLOAD_BONUSES:\n      return defaultState\n    case UPDATE_BONUS:\n      return {\n        ...state,\n        bonuses: action.error\n          ? state.bonuses\n          : state.bonuses\n              .map((bonus) =>\n                bonus._id === action.payload.bonus._id\n                  ? action.payload.bonus\n                  : bonus\n              )\n              .sort((a, b) => sortByDescription(a, b)),\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  SPOTIFY_REMOVE_AUTH,\n  SUBMIT_PRIME_PURCHASE,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n  WHATS_NEW_DIALOG_LOADED,\n  WHATS_NEW_DIALOG_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        // settings: action.error ? state.settings : action.payload[1].settings,\n        // @todo: the sharing of teacher settings with student accounts needs some cleanup to avoid messes like this\n        settings:\n          action.error || state.currentUser.role === 'student'\n            ? state.settings\n            : action.payload[1].settings,\n      }\n    case SPOTIFY_REMOVE_AUTH:\n      return {\n        ...state,\n        settings: action.error\n          ? state.settings\n          : { ...state.settings, spotifyTokens: undefined },\n      }\n    case SUBMIT_PRIME_PURCHASE:\n      return {\n        ...state,\n        currentUser: action.error\n          ? state.currentUser\n          : { ...state.currentUser, hasPrime: true },\n      }\n    case WHATS_NEW_DIALOG_LOADED:\n    case WHATS_NEW_DIALOG_UNLOADED:\n      return {\n        ...state,\n        currentUser: action.payload ? action.payload.user : null,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ALERT_CLOSED,\n  ASYNC_START,\n  COURSE_DIALOG_UNLOADED,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  DELETE_STUDENT,\n  IMPORT_STUDENTS,\n  MOVE_STUDENT,\n  RESET_STUDENT_PASSWORD,\n  STUDENT_DIALOG_UNLOADED,\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  importCount: null,\n  importFailed: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId) {\n          courseCopy.students = [...course.students, action.payload.user].sort(\n            (a, b) => sortByLastName(a, b)\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ALERT_CLOSED:\n      return { ...state, importCount: null, importFailed: null }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_STUDENT ||\n        action.subtype === ADD_COURSE ||\n        action.subtype === MOVE_STUDENT ||\n        action.subtype === UPDATE_COURSE ||\n        action.subtype === UPDATE_STUDENT\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === COURSES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      } else if (action.subtype === IMPORT_STUDENTS) {\n        return {\n          ...state,\n          errors: null,\n          importCount: null,\n          importFailed: null,\n          inProgress: true,\n        }\n      }\n      break\n    case COURSE_DIALOG_UNLOADED:\n    case STUDENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case COURSES_PAGE_LOADED:\n    case STUDENT_SEARCH_LOADED:\n      return { ...state, courses: action.payload.courses, pageLoaded: false }\n    case COURSES_PAGE_UNLOADED:\n    case STUDENT_SEARCH_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter(\n              (course) => course.slug !== action.payload.course.slug\n            ),\n      }\n    case DELETE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.payload.course._id.toString()) {\n          courseCopy.students = course.students.filter(\n            (student) => student.username !== action.payload.user.username\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case IMPORT_STUDENTS:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload.course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) =>\n              course._id === action.payload.course._id\n                ? action.payload.course\n                : course\n            ),\n        errors: action.error ? action.payload.errors : null,\n        importCount: action.error ? null : action.payload.count,\n        importFailed: action.error ? null : action.payload.failed,\n        inProgress: false,\n      }\n    case MOVE_STUDENT:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload[0].course.students.sort((a, b) => sortByLastName(a, b))\n      !action.error &&\n        action.payload[1].course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) => {\n              if (course._id === action.payload[0].course._id) {\n                return action.payload[0].course\n              } else if (course._id === action.payload[1].course._id) {\n                return action.payload[1].course\n              } else {\n                return course\n              }\n            }),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case RESET_STUDENT_PASSWORD:\n      return { ...state }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      const updatedUser = action.payload.user\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students\n            .map((student) =>\n              student._id.toString() === updatedUser._id.toString()\n                ? updatedUser\n                : student\n            )\n            .sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  ECONOMY_DIALOG_LOADED,\n  ECONOMY_DIALOG_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  students: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === ECONOMY_DIALOG_LOADED) {\n        return {\n          ...state,\n          errors: null,\n          inProgress: true,\n        }\n      }\n      break\n    case ECONOMY_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        students: action.error ? state.students : action.payload.students,\n      }\n    case ECONOMY_DIALOG_UNLOADED:\n      return { ...defaultState }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  NOTIFICATION_DIALOG_LOADED,\n  NOTIFICATION_DIALOG_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  notifications: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case NOTIFICATION_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        notifications: action.error\n          ? state.notifications\n          : action.payload.notifications,\n      }\n    case NOTIFICATION_DIALOG_UNLOADED:\n      return defaultState\n    default:\n      return state\n  }\n}\n","import {\n  ADD_BONUS,\n  ADD_COURSE,\n  ADD_PASS,\n  ADD_PRODUCT,\n  ADD_STUDENT,\n  ADD_TEACHER,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  DELETE_BONUS,\n  DELETE_COURSE,\n  DELETE_PASS,\n  DELETE_PRODUCT,\n  DELETE_PURCHASE,\n  DELETE_SONG_REQUEST,\n  DELETE_STUDENT,\n  DELETE_TASK,\n  DELETE_TEACHER,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_STUDENTS,\n  MOVE_STUDENT,\n  RESET_STUDENT_PASSWORD,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  STUDENT_DELETE_PURCHASE,\n  SUBMIT_PURCHASE,\n  SUBMIT_PRIME_PURCHASE,\n  SUBMIT_SONG_REQUEST,\n  SUBMIT_SONG_REMOVAL_REQUEST,\n  UPDATE_BONUS,\n  UPDATE_COURSE,\n  UPDATE_PASS,\n  UPDATE_PRODUCT,\n  UPDATE_STUDENT,\n  UPDATE_TASK,\n  UPDATE_TEACHER,\n  UPDATE_TRANSACTION,\n  WHATS_NEW_FLAGS_RESET,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_BONUS:\n    case ADD_COURSE:\n    case ADD_PASS:\n    case ADD_PRODUCT:\n    case ADD_STUDENT:\n    case ADD_TEACHER:\n    case ADD_TRANSACTION:\n    case ADD_TRANSACTIONS:\n    case DELETE_BONUS:\n    case DELETE_COURSE:\n    case DELETE_PASS:\n    case DELETE_PRODUCT:\n    case DELETE_PURCHASE:\n    case DELETE_SONG_REQUEST:\n    case DELETE_STUDENT:\n    case DELETE_TASK:\n    case DELETE_TEACHER:\n    case DELETE_TRANSACTION:\n    case IMPORT_SCORES:\n    case IMPORT_STUDENTS:\n    case MOVE_STUDENT:\n    case RESET_STUDENT_PASSWORD:\n    case SETTINGS_SAVED:\n    case STUDENT_DELETE_PURCHASE:\n    case SUBMIT_PURCHASE:\n    case SUBMIT_PRIME_PURCHASE:\n    case SUBMIT_SONG_REQUEST:\n    case SUBMIT_SONG_REMOVAL_REQUEST:\n    case UPDATE_BONUS:\n    case UPDATE_COURSE:\n    case UPDATE_PASS:\n    case UPDATE_PRODUCT:\n    case UPDATE_STUDENT:\n    case UPDATE_TASK:\n    case UPDATE_TEACHER:\n    case UPDATE_TRANSACTION:\n    case WHATS_NEW_FLAGS_RESET:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ASYNC_START,\n  ADD_PASS,\n  DELETE_PASS,\n  GET_LAST_PASS,\n  LOAD_STUDENT_PASSES,\n  LOAD_TEACHER_PASSES,\n  UNLOAD_MANAGE_PASSES,\n  UNLOAD_PASSES,\n  UPDATE_PASS,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  inProgress: false,\n  lastPass: null,\n  passes: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_PASS:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        passes: action.error\n          ? state.passes\n          : [action.payload.pass, ...state.passes],\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_PASS ||\n        action.subtype === LOAD_STUDENT_PASSES ||\n        action.subtype === LOAD_TEACHER_PASSES\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      }\n      break\n    case DELETE_PASS:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.passes = courseCopy.passes.filter(\n          (pass) => pass._id.toString() !== action.payload.pass._id.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case GET_LAST_PASS:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        lastPass: action.error ? state.lastPass : action.payload.pass,\n      }\n    case LOAD_STUDENT_PASSES:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        passes: action.error ? state.passes : action.payload.passes,\n      }\n    case LOAD_TEACHER_PASSES:\n      return {\n        ...state,\n        courses: action.error ? state.courses : action.payload.courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UNLOAD_MANAGE_PASSES:\n    case UNLOAD_PASSES:\n      return defaultState\n    case UPDATE_PASS:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.passes = courseCopy.passes.map((pass) =>\n            pass._id.toString() === action.payload.pass._id.toString()\n              ? action.payload.pass\n              : pass\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_PRODUCT,\n  ASYNC_START,\n  PRODUCT_DIALOG_UNLOADED,\n  PRODUCT_SELECTOR_LOADED,\n  PRODUCT_SELECTOR_UNLOADED,\n  PRODUCTS_PAGE_LOADED,\n  PRODUCTS_PAGE_UNLOADED,\n  DELETE_PRODUCT,\n  UPDATE_PRODUCT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  products: [],\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByCost = (a, b) => a.cost - b.cost\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        products: action.error\n          ? state.products\n          : [...state.products, action.payload.product].sort((a, b) =>\n              sortByCost(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_PRODUCT || action.subtype === UPDATE_PRODUCT) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (\n        action.subtype === PRODUCT_SELECTOR_LOADED ||\n        action.subtype === PRODUCTS_PAGE_LOADED\n      ) {\n        return { ...state, errors: null, inProgress: true, pageLoaded: false }\n      }\n      break\n    case DELETE_PRODUCT:\n      return {\n        ...state,\n        products: action.error\n          ? state.products\n          : state.products.filter(\n              (product) => product.slug !== action.payload.product.slug\n            ),\n      }\n    case PRODUCT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case PRODUCT_SELECTOR_LOADED:\n    case PRODUCTS_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        pageLoaded: true,\n        products: action.error ? state.products : action.payload.products,\n      }\n    case PRODUCT_SELECTOR_UNLOADED:\n    case PRODUCTS_PAGE_UNLOADED:\n      return defaultState\n    case UPDATE_PRODUCT:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        products: action.error\n          ? state.products\n          : state.products\n              .map((product) =>\n                product._id === action.payload.product._id\n                  ? action.payload.product\n                  : product\n              )\n              .sort((a, b) => sortByCost(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_PURCHASE,\n  ADD_PURCHASE_DIALOG_UNLOADED,\n  ADD_TO_CART,\n  ASYNC_START,\n  DELETE_CART_PRODUCT,\n  DELETE_PURCHASE,\n  PRIME_PURCHASE_DIALOG_UNLOADED,\n  PURCHASES_DIALOG_UNLOADED,\n  STUDENT_DELETE_PURCHASE,\n  STUDENT_PURCHASES_LOADED,\n  STUDENT_PURCHASES_UNLOADED,\n  SUBMIT_PURCHASE,\n  SUBMIT_PRIME_PURCHASE,\n  TEACHER_PURCHASES_LOADED,\n  TEACHER_PURCHASES_UNLOADED,\n  UPDATE_CART_PRODUCT_QUANTITY,\n  UPDATE_PURCHASE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  cart: { products: [], quantities: {} },\n  courses: [],\n  errors: null,\n  inProgress: false,\n  isLoaded: false,\n  purchases: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_PURCHASE:\n    case SUBMIT_PURCHASE:\n    case SUBMIT_PRIME_PURCHASE:\n      return {\n        ...state,\n        cart: action.error ? state.cart : defaultState.cart,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_PURCHASE_DIALOG_UNLOADED:\n    case PRIME_PURCHASE_DIALOG_UNLOADED:\n      return defaultState\n    case ADD_TO_CART:\n      const productIndex = state.cart.products.findIndex(\n        (product) => product._id === action.product._id\n      )\n      const isAdded = productIndex > -1\n      const updatedQuantity = isAdded\n        ? state.cart.quantities[action.product._id] + 1\n        : 1\n      const allowed = action.product.maxPurchaseQuantity\n      const onHand = action.product.quantity\n      const max = allowed !== 0 ? Math.min(allowed, onHand) : onHand\n      return {\n        ...state,\n        cart: {\n          products: isAdded\n            ? state.cart.products\n            : [...state.cart.products, action.product],\n          quantities: {\n            ...state.cart.quantities,\n            [action.product._id]:\n              updatedQuantity <= max ? updatedQuantity : max,\n          },\n        },\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === STUDENT_PURCHASES_LOADED ||\n        action.subtype === TEACHER_PURCHASES_LOADED ||\n        action.subtype === SUBMIT_PURCHASE ||\n        action.subtype === SUBMIT_PRIME_PURCHASE\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      }\n      break\n    case DELETE_CART_PRODUCT:\n      const { [action.productId]: value, ...withoutDeleted } =\n        state.cart.quantities\n      return {\n        ...state,\n        cart: {\n          products: state.cart.products.filter(\n            (product) => product._id !== action.productId\n          ),\n          quantities: withoutDeleted,\n        },\n      }\n    case DELETE_PURCHASE:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.purchases = courseCopy.purchases.filter(\n          (purchase) =>\n            purchase._id.toString() !== action.payload.purchase._id.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case PURCHASES_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case STUDENT_DELETE_PURCHASE:\n      return {\n        ...state,\n        purchases: action.error\n          ? state.purchases\n          : state.purchases.filter(\n              (purchase) => purchase._id !== action.payload.purchase._id\n            ),\n      }\n    case STUDENT_PURCHASES_LOADED:\n      return {\n        ...state,\n        purchases: action.error ? state.purchases : action.payload.purchases,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case STUDENT_PURCHASES_UNLOADED:\n      return { ...defaultState, cart: state.cart }\n    case TEACHER_PURCHASES_LOADED:\n      return {\n        ...state,\n        courses: action.error ? state.courses : action.payload.courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        isLoaded: true,\n      }\n    case TEACHER_PURCHASES_UNLOADED:\n      return { ...defaultState }\n    case UPDATE_CART_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        cart: {\n          ...state.cart,\n          quantities: {\n            ...state.cart.quantities,\n            [action.productId]: action.qty,\n          },\n        },\n      }\n    case UPDATE_PURCHASE:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.purchases = courseCopy.purchases.map((purchase) =>\n            purchase._id.toString() === action.payload.purchase._id.toString()\n              ? action.payload.purchase\n              : purchase\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import { unionBy } from 'lodash'\nimport {\n  ACCOUNT_BALANCE_LOADED,\n  ACCOUNT_BALANCE_UNLOADED,\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  ACCOUNTS_PAGE_UNLOADED,\n  ADD_PASS,\n  ADD_PURCHASE,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  ALERT_CLOSED,\n  ASYNC_START,\n  DELETE_PASS,\n  DELETE_TRANSACTION,\n  STUDENT_CART_LOADED,\n  STUDENT_CART_UNLOADED,\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n  TRANSACTION_DIALOG_UNLOADED,\n  TRANSACTIONS_DIALOG_UNLOADED,\n  UNLOAD_MANAGE_PASSES,\n  UPDATE_PASS,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\nimport { convertScore } from '../converter'\n\nconst defaultState = {\n  balance: null,\n  conversions: null,\n  errors: null,\n  importSummary: null,\n  inProgress: false,\n  total: null,\n  transactions: null,\n}\n\nconst getTotals = (transactions, conversions) => {\n  const sumTransactions = (total, transaction) => total + transaction.amount\n  const sumScores = (total, score) => total + convertScore(score, conversions)\n\n  const bonuses = transactions.bonuses.reduce(sumTransactions, 0)\n  const purchases = transactions.purchases.reduce(sumTransactions, 0)\n  const scores = transactions.scores.reduce(sumScores, 0)\n\n  const balance = bonuses + purchases + scores\n\n  return { balance, bonuses, purchases, scores }\n}\n\nconst addScores = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.filter(\n      (score) => score.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) {\n      transactions.scores = unionBy(usersAdded, [...transactions.scores], '_id')\n    }\n\n    return transactions\n  }\n\n  return null\n}\n\nconst addTransaction = (added, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(added.type)) {\n      transactions[type] = [added, ...transactions[type]]\n    }\n  }\n  return transactions\n}\n\nconst addBulkTransaction = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.find(\n      (transaction) => transaction.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) return addTransaction(usersAdded, transactions)\n  }\n\n  return null\n}\n\nconst deleteTransaction = (deleted, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(deleted.type)) {\n      transactions[type] = transactions[type].filter(\n        (transaction) => transaction._id !== deleted._id\n      )\n    }\n  }\n  return transactions\n}\n\nconst updateTransaction = (updated, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(updated.type)) {\n      transactions[type] = transactions[type].map((transaction) =>\n        transaction._id === updated._id ? updated : transaction\n      )\n    }\n  }\n  return transactions\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_BALANCE_LOADED:\n      return {\n        ...state,\n        balance: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n      }\n    case ACCOUNT_BALANCE_UNLOADED:\n      return { ...state, balance: null }\n    case STUDENT_CART_LOADED:\n      return {\n        ...state,\n        total: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n      }\n    case STUDENT_CART_UNLOADED:\n      return { ...state, total: null }\n    case ACCOUNT_VIEW_LOADED:\n      return {\n        ...state,\n        conversions: action.error ? null : action.payload.scoreConverter,\n        total: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n        transactions: action.error ? null : action.payload.transactions,\n      }\n    case ACCOUNT_VIEW_UNLOADED:\n      return { ...state, conversions: null, total: null, transactions: null }\n    case ACCOUNTS_PAGE_UNLOADED:\n    case ALERT_CLOSED:\n      return { ...state, importSummary: null }\n    case ADD_PASS:\n    case ADD_TRANSACTION:\n      const addedTransactions = !action.error\n        ? addTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(addedTransactions, state.conversions),\n      }\n    case ADD_PURCHASE:\n      const addedTranasctions = !action.error\n        ? addTransaction(action.payload.purchase.purchaseTransaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedTranasctions,\n        total: action.error\n          ? state.total\n          : getTotals(addedTranasctions, state.conversions),\n      }\n    case ADD_TRANSACTIONS:\n      const addedBulkTransactions = !action.error\n        ? addBulkTransaction(\n            action.payload.transactions,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : null\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions:\n          action.error || !state.transactions\n            ? state.transactions\n            : addedBulkTransactions,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(addedBulkTransactions, state.conversions),\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_TRANSACTION ||\n        action.subtype === ADD_TRANSACTIONS ||\n        action.subtype === DELETE_TRANSACTION ||\n        action.subtype === UPDATE_TRANSACTION\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === IMPORT_SCORES) {\n        return { ...state, errors: null, importSummary: null, inProgress: true }\n      }\n      break\n    case DELETE_PASS:\n    case DELETE_TRANSACTION:\n      const deletedTransactions = !action.error\n        ? deleteTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions:\n          action.error || !state.transactions\n            ? state.transactions\n            : deletedTransactions,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(deletedTransactions, state.conversions),\n      }\n    case IMPORT_SCORES:\n      const addedScores = !action.error\n        ? addScores(\n            action.payload.scores,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : null\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        importSummary: action.error ? null : action.payload.results,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedScores,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(addedScores, state.conversions),\n      }\n    case IMPORT_SCORES_DIALOG_UNLOADED:\n    case TRANSACTION_DIALOG_UNLOADED:\n    case TRANSACTIONS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_PASS:\n    case UPDATE_TRANSACTION:\n      const updatedTransactions = !action.error\n        ? updateTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions:\n          action.error || !state.transactions\n            ? state.transactions\n            : updatedTransactions,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(updatedTransactions, state.conversions),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SPOTIFY_LINKER_LOADED,\n  SPOTIFY_LINKER_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  spotifyAuthUrl: null,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SPOTIFY_LINKER_LOADED:\n      return { ...state, spotifyAuthUrl: action.payload.spotifyAuthUrl }\n    case SETTINGS_PAGE_UNLOADED:\n    case SPOTIFY_LINKER_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  TASKS_DIALOG_UNLOADED,\n  UPDATE_TASK,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  tasks: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === TASKS_DIALOG_LOADED) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.filter(\n              (task) => task.slug !== action.payload.task.slug\n            ),\n      }\n    case TASKS_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        tasks: action.error ? [] : action.payload.tasks,\n      }\n    case TASKS_DIALOG_UNLOADED:\n      return defaultState\n    case UPDATE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.map((task) =>\n              task.slug === action.payload.task.slug\n                ? action.payload.task\n                : task\n            ),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_TEACHER,\n  ASYNC_START,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [\n              ...state.teachers,\n              { ...action.payload.user, settings: action.payload.settings },\n            ].sort((a, b) => sortByLastName(a, b)),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      } else if (action.subtype === MANAGE_TEACHERS_PAGE_LOADED) {\n        return { ...state, errors: null, inProgress: true, pageLoaded: false }\n      }\n      break\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.payload.user.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        pageLoaded: true,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? { ...user, ...action.payload.user }\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_SONG_REQUEST,\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REQUEST,\n  SUBMIT_SONG_REMOVAL_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n  UPDATE_SONG_REQUEST,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  course: null,\n  courses: [],\n  courseSongs: [],\n  errors: null,\n  inProgress: false,\n  isLoaded: false,\n  userSongs: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === UPDATE_SONG_REQUEST) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.songs = courseCopy.songs.filter(\n          (song) => song._id.toString() !== action.payload.song._id.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case SONG_REQUESTS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case SONGS_PAGE_UNLOADED:\n      return defaultState\n    case STUDENT_SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case SUBMIT_SONG_REMOVAL_REQUEST:\n      return {\n        ...state,\n        userSongs: state.userSongs.map((song) =>\n          action.payload.song._id === song._id ? action.payload.song : song\n        ),\n        courseSongs: state.courseSongs.map((song) =>\n          action.payload.song._id === song._id ? action.payload.song : song\n        ),\n      }\n    case TEACHER_SONGS_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses, isLoaded: true }\n    case UPDATE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.songs = courseCopy.songs.map((song) =>\n            song._id.toString() === action.payload.song._id.toString()\n              ? action.payload.song\n              : song\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport bonuses from './reducers/bonuses'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport economy from './reducers/economy'\nimport nav from './reducers/nav'\nimport notifications from './reducers/notifications'\nimport notifier from './reducers/notifier'\nimport passes from './reducers/passes'\nimport products from './reducers/products'\nimport purchases from './reducers/purchases'\nimport scores from './reducers/scores'\nimport settings from './reducers/settings'\nimport tasks from './reducers/tasks'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    bonuses,\n    common,\n    courses,\n    economy,\n    nav,\n    notifications,\n    notifier,\n    passes,\n    products,\n    purchases,\n    scores,\n    settings,\n    tasks,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport { ChemCashDarkTheme, ChemCashLightTheme } from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport WhatsNewDialog from './WhatsNewDialog'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n    darkMode: state.common?.currentUser?.darkMode,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo, darkMode } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={darkMode ? ChemCashDarkTheme : ChemCashLightTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/about' component={Login} />\n              <Route path='/' component={Home} />\n            </Switch>\n          </Suspense>\n        </Notifier>\n        <WhatsNewDialog />\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={darkMode ? ChemCashDarkTheme : ChemCashLightTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n","import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://chem-cash.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst encode = encodeURIComponent\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  // @todo update superagent-promise from v1.1.0 when available\n  // superagent-promise does not allow for body to pass, so it has been manually added to the package file\n  // This is a known issue, see: https://github.com/lightsofapollo/superagent-promise/issues/28\n  del: (url, body) =>\n    superagent\n      .del(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Bonuses = {\n  add: (bonus) => requests.post('/bonuses', { bonus }),\n  delete: (bonus) => requests.del(`/bonuses/${bonus._id}`),\n  getAll: () => requests.get('/bonuses'),\n  update: (bonus) => requests.put(`/bonuses/${bonus._id}`, { bonus }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  enroll: (course) =>\n    requests.post(`/courses/${course.slug}/enroll`, { course }),\n  getAll: () => requests.get('/courses'),\n  unenroll: (course) =>\n    requests.del(`/courses/${course.slug}/enroll`, { course }),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Notifications = {\n  clearAll: () => requests.del('/notifications'),\n  getAll: () => requests.get('/notifications'),\n}\n\nconst Passes = {\n  add: (pass) => requests.post('/passes', { pass }),\n  delete: (id) => requests.del(`/passes/${id}`),\n  getAll: () => requests.get('/passes'),\n  getLastPass: () => requests.get('/passes/last'),\n  update: (pass) => requests.put(`/passes/${pass._id}`, { pass }),\n}\n\nconst Products = {\n  add: (product) => requests.post('/products', { product }),\n  delete: (slug) => requests.del(`/products/${slug}`),\n  getAll: () => requests.get('/products'),\n  update: (product) => requests.put(`/products/${product.slug}`, { product }),\n}\n\nconst Purchases = {\n  add: (purchase) => requests.post('/purchases', { purchase }),\n  delete: (id) => requests.del(`/purchases/${id}`),\n  forStudent: () => requests.get('/purchases/student'),\n  forTeacher: () => requests.get('/purchases/teacher'),\n  update: (purchase) => requests.put(`/purchases/${purchase.id}`, { purchase }),\n}\n\nconst Scores = {\n  getAll: () => requests.get('/scores/all'),\n  getStudentScores: (username) => requests.get(`/scores?username=${username}`),\n  import: (data) => requests.post('/scores/import', { data }),\n}\n\nconst Settings = {\n  // get: () => requests.get('/user/settings'),\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Songs = {\n  delete: (id) => requests.del(`/songs/${id}`),\n  forStudent: () => requests.get('/songs/student'),\n  forTeacher: () => requests.get('/songs/teacher'),\n  request: (song) => requests.post('/songs', { song }),\n  update: (song) => requests.put(`/songs/${song.id}`, { song }),\n}\n\nconst Spotify = {\n  getAuthUrl: () => requests.get('/spotify/auth'),\n  removeAuth: () => requests.del('/spotify/auth'),\n}\n\nconst Students = {\n  add: (user, courseId) =>\n    requests.post(`/users?courseId=${encode(courseId)}`, { user }),\n  delete: (user) => requests.del(`/users/student/${user.username}`),\n  import: (users, courseId) =>\n    requests.post(`/users/import?courseId=${encode(courseId)}`, { users }),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Tasks = {\n  getAll: (courseId) => requests.get(`/tasks?courseId=${courseId}`),\n  delete: (task) => requests.del(`/tasks/${task.slug}`),\n  update: (task) => requests.put(`/tasks/${task.slug}`, { task }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (user) => requests.del(`/users/teacher/${user.username}`),\n  resetFlags: (role) => requests.put(`/users/reset?role=${role}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Transactions = {\n  add: (transaction) => requests.post('/transactions', { transaction }),\n  addMany: (transactions) =>\n    requests.post('/transactions/bulk', { transactions }),\n  delete: (transaction) => requests.del(`/transactions/${transaction._id}`),\n  update: (transaction) =>\n    requests.put(`/transactions/${transaction._id}`, { transaction }),\n}\n\nexport default {\n  Auth,\n  Bonuses,\n  Courses,\n  Notifications,\n  Passes,\n  Products,\n  Purchases,\n  Scores,\n  Settings,\n  Songs,\n  Spotify,\n  Students,\n  Tasks,\n  Teachers,\n  Transactions,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n"],"sourceRoot":""}