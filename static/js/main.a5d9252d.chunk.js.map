{"version":3,"sources":["agent.js","images/chemistry-background.jpg","images/chem-cash-logo.png","images/songs-background.jpg","images/doc-may-profile.jpg","components/Theme.js","components/Logo.js","constants/actionTypes.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ListErrors.js","components/PageHeader.js","components/Settings.js","components/ActionButton.js","components/Teacher/ResetStudentPasswordAlert.js","components/Teacher/TransactionDialog.js","converter.js","components/AccountView.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/Alert.js","components/Teacher/StudentSearch.js","components/Teacher/CourseSelector.js","components/Teacher/StudentsTable.js","components/Teacher/BulkTransactionsDialog.js","components/Filedrop.js","components/Spinner.js","components/Teacher/ImportScoresDialog.js","components/Teacher/UpdateAccountsMenu.js","components/Teacher/TeacherAccounts.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteStudentAlert.js","components/Teacher/StudentDialog.js","components/Teacher/CourseStudentList.js","components/Teacher/DeleteCourseAlert.js","components/Teacher/ImportStudentsDialog.js","components/Teacher/TasksTable.js","components/Teacher/TasksDialog.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/Teacher/ProcessSongRequestsDialog.js","components/Teacher/TeacherSongs.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/ImagePreview.js","components/TextFieldLimit.js","components/Products/ProductDialog.js","components/Products/DeleteProductDialog.js","components/Products/ProductsGallery.js","components/Products/Products.js","components/Home.js","components/Loading.js","components/About.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","reducers/auth.js","reducers/common.js","reducers/courses.js","reducers/nav.js","reducers/notifier.js","reducers/products.js","reducers/scores.js","reducers/settings.js","reducers/tasks.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","encode","encodeURIComponent","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Courses","add","course","delete","slug","getAll","update","Products","product","Scores","import","data","Settings","settings","Songs","id","forStudent","forTeacher","request","song","Spotify","getAuthUrl","removeAuth","Students","courseId","users","Tasks","task","Teachers","Transactions","transaction","addMany","transactions","_id","setToken","_token","module","exports","ChemCashTheme","createMuiTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","Logo","props","alt","src","logo","ASYNC_START","LOGIN","useStyles","makeStyles","theme","title","color","flexGrow","height","marginTop","spacing","marginRight","marginBottom","connect","state","navTabValue","nav","dispatch","onClickLogout","type","classes","currentUser","AppBar","position","Container","Toolbar","className","Typography","variant","align","charAt","toUpperCase","slice","Button","onClick","bottom","width","zIndex","path","router","location","pathname","common","onTabChange","tabValue","redirectTo","value","onLoad","onUnload","userRole","role","enabled","products","productsEnabled","songs","songRequestEnabled","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","Store","SupervisorAccount","People","wrapper","PageWrapper","children","NotFound","exact","component","to","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","severity","headerLeft","alignItems","display","headerRight","justifyContent","pageHeader","PageHeader","Grid","container","item","xs","paper","onSubmitForm","payload","all","agent","snackbar","message","inProgress","enableReinitialize","initialValues","defaultStudentPassword","songRequestPurchaseAmount","firstName","lastName","score100","scoreConverter","score90","score80","score70","score60","score50","validationSchema","Yup","typeError","onSubmit","form","a","userSettings","100","90","80","70","60","50","40","30","20","10","0","resetForm","Fab","disabled","SaveAlt","Paper","gutterBottom","TextField","name","fullWidth","Switch","actionButton","text","ActionButton","passedClasses","Tooltip","arrow","enterTouchDelay","action","IconButton","aria-label","ev","stopPropagation","onFocus","size","btnSize","student","useState","open","setOpen","handleClose","LockOpen","fontSize","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","scores","onAdd","typeTitle","onExit","useTheme","fullScreen","useMediaQuery","down","handleSubmitAdd","Grade","ShoppingCart","amount","description","required","convertScore","score","conversions","total","totalPoints","nonZeroTotal","percent","Math","round","floor","actions","balance","borderTop","fontStyle","textTransform","edit","backgroundColor","main","subtotal","typography","pxToRem","unit","AccountHeader","canEdit","doEdit","onEditClick","period","bonuses","purchases","Close","Edit","TransactionList","onDelete","onUpdate","setData","mapTransaction","createdAt","Date","toDateString","mappedData","mapped","bonus","purchase","mapScore","field","editable","defaultSort","columns","localization","emptyDataSourceMessage","editRow","deleteText","options","actionsColumnIndex","paging","toolbar","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","onRowDelete","index","splice","setDoEdit","button","dialog","backgroundImage","background","backgroundPosition","backgroundSize","input","inputLabel","handleSubmit","Add","artist","InputLabelProps","marginLeft","paddingLeft","status","DataRow","showStudent","TableRow","TableCell","statusDescription","InfoOutlined","CourseSongs","length","colSpan","UserSongs","courseSongs","userSongs","mySongsOnly","setMySongsOnly","grid","FormControlLabel","control","Checkbox","checked","target","TableContainer","Table","TableHead","TableBody","Collapse","in","search","courses","setMappedData","students","flat","Autocomplete","autoHighlight","getOptionLabel","option","groupBy","noOptionsText","renderInput","params","placeholder","renderOption","inputValue","matches","match","parts","parse","part","style","fontWeight","highlight","shadows","boxShadow","light","onSelect","tabIndex","StudentsTable","fullName","nRowsSelected","onSelectionChange","rows","selection","up","curStudent","isClosed","isOpen","setCourse","setStudents","filedrop","grey","borderRadius","flexDirection","outline","transition","filedropActive","contrastText","filedropReject","Filedrop","onFiledrop","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","parsedFile","result","skip_empty_lines","readAsBinaryString","useDropzone","accept","multiple","onDropAccepted","getRootProps","getInputProps","isDragActive","isDragReject","minWidth","spinner","Spinner","CircularProgress","ScoreImportStepper","onDataChange","onShowImport","setFile","tasks","setTasks","handleTaskChange","tasksSelected","some","el","FormControl","FormGroup","onImport","ready","setReady","importData","selected","usernames","pop","filter","parsed","taskName","find","row","endsWith","push","UpdateAccountsMenu","menuAnchorEl","setMenuAnchorEl","menuSelection","setMenuSelection","handleMenuSelect","currentTarget","dataset","handleDialogClose","Money","Menu","anchorEl","Boolean","MenuItem","data-type","ListItemIcon","Publish","ListItemText","importSummary","setStudent","plural","qty","tasksCreated","scoresImported","scoresUpdated","handleClickOpen","handleSubmitUpdate","Delete","PersonAdd","borderBottomColor","rowHeader","studentUsername","StudentListRow","Chip","CourseStudentList","column","trim","element","minHeight","Assignment","courseDetails","courseHeader","coursePeriod","courseTitle","CourseList","expanded","setExpanded","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","Avatar","ExpansionPanelDetails","importCount","pageLoaded","maxWidth","songInfo","statusButton","studentInfo","borderTopColor","borderTopStyle","borderTopWidth","paddingTop","setSong","setStatus","setStatusDescription","handleStatusButtonClick","handleStatusDescriptionChange","nextSong","getNextSong","PlaylistAddCheck","ButtonGroup","href","getSpotifySearchUrl","ThumbUp","ThumbDown","RadioGroup","Radio","AlertTitle","purchasedBy","render","rowData","renderType","lookup","approved","pending","rejected","removed","grouping","dataDelete","teachers","teacher","teacherDetails","teacherHeader","teacherUsername","teacherName","TeacherList","header","paddingRight","top","img","maxHeight","window","borderColor","borderStyle","borderWidth","ImagePreview","TextFieldLimit","error","inputProps","maxLength","limit","helperText","addIcon","updateIcon","CHAR_LIMITS","photoUrl","cost","quantity","max","formik","as","actionIcon","lineHeight","opacity","h5","whiteSpace","tile","tileBar","paddingBottom","ProductsGallery","isSmall","isMedium","cols","GridList","GridListTile","GridListTileBar","placement","subtitle","displayType","thousandSeparator","suffix","DeleteProductDialog","StudentAccount","StudentSongs","TeacherAccounts","TeacherCourses","TeacherSongs","ManageTeachers","flexFlow","overflowY","Loading","elevation","page","profile","float","About","Link","auth","submitForm","aboutLink","right","loginLink","textDecoration","margin","progress","left","AboutLink","LoginLink","startIcon","ArrowBackIos","LinearProgress","includes","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","React","createRef","onSnackbarDismiss","closeSnackbar","maxSnack","ref","subtype","defaultState","appName","viewChangeCounter","appLoaded","spotifyTokens","undefined","sortByLastName","b","localeCompare","sortByPeriod","sort","courseCopy","toString","count","updatedUser","sortByCost","getTotals","sumTransactions","reduce","addScores","added","curUser","curUserId","usersAdded","unionBy","addTransaction","startsWith","addBulkTransaction","deleteTransaction","deleted","updateTransaction","updated","addedTransactions","addedBulkTransactions","deletedTransactions","addedScores","results","updatedTransactions","spotifyAuthUrl","songsByUser","songsByCourse","promiseMiddleware","store","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.a5d9252d.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://chem-cash.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst encode = encodeURIComponent\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  del: (url) =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  getAll: () => requests.get('/courses'),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Products = {\n  add: (product) => requests.post('/products', { product }),\n  delete: (slug) => requests.del(`/products/${slug}`),\n  getAll: () => requests.get('/products'),\n  update: (product) => requests.put(`/products/${product.slug}`, { product }),\n}\n\nconst Scores = {\n  getAll: (username) => requests.get(`/scores?username=${username}`),\n  import: (data) => requests.post('/scores/import', { data }),\n}\n\nconst Settings = {\n  // get: () => requests.get('/user/settings'),\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Songs = {\n  delete: (id) => requests.del(`/songs/${id}`),\n  forStudent: () => requests.get('/songs/student'),\n  forTeacher: () => requests.get('/songs/teacher'),\n  request: (song) => requests.post('/songs', { song }),\n  update: (song) => requests.put(`/songs/${song.id}`, { song }),\n}\n\nconst Spotify = {\n  getAuthUrl: () => requests.get('/spotify/auth'),\n  removeAuth: () => requests.del('/spotify/auth'),\n}\n\nconst Students = {\n  add: (user, courseId) =>\n    requests.post(`/users?courseId=${encode(courseId)}`, { user }),\n  delete: (user) => requests.del(`/users/student/${user.username}`),\n  import: (users, courseId) =>\n    requests.post(`/users/import?courseId=${encode(courseId)}`, { users }),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Tasks = {\n  getAll: (courseId) => requests.get(`/tasks?courseId=${courseId}`),\n  delete: (task) => requests.del(`/tasks/${task.slug}`),\n  update: (task) => requests.put(`/tasks/${task.slug}`, { task }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (user) => requests.del(`/users/teacher/${user.username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Transactions = {\n  add: (transaction) => requests.post('/transactions', { transaction }),\n  addMany: (transactions) =>\n    requests.post('/transactions/bulk', { transactions }),\n  delete: (transaction) => requests.del(`/transactions/${transaction._id}`),\n  update: (transaction) =>\n    requests.put(`/transactions/${transaction._id}`, { transaction }),\n}\n\nexport default {\n  Auth,\n  Courses,\n  Products,\n  Scores,\n  Settings,\n  Songs,\n  Spotify,\n  Students,\n  Tasks,\n  Teachers,\n  Transactions,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/chemistry-background.11d1d297.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.30174016.png\";","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doc-may-profile.f927335d.jpg\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = createMuiTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n})\n\nexport default ChemCashTheme\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const DELETE_SONG_REQUEST = 'DELETE_SONG_REQUEST'\nexport const SONG_REQUESTS_DIALOG_UNLOADED = 'SONG_REQUESTS_DIALOG_UNLOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const STUDENT_SONGS_PAGE_LOADED = 'STUDENT_SONGS_PAGE_LOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\nexport const TEACHER_SONGS_PAGE_LOADED = 'TEACHER_SONGS_PAGE_LOADED'\nexport const UPDATE_SONG_REQUEST = 'UPDATE_SONG_REQUEST'\n\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const COURSE_DIALOG_UNLOADED = 'COURSE_DIALOG_UNLOADED'\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const DELETE_COURSE = 'DELETE_COURSE'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\n\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const DELETE_STUDENT = 'DELETE_STUDENT'\nexport const IMPORT_STUDENTS = 'IMPORT_STUDENTS'\nexport const RESET_STUDENT_PASSWORD = 'RESET_STUDENT_PASSWORD'\nexport const STUDENT_DIALOG_UNLOADED = 'STUDENT_DIALOG_UNLOADED'\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT'\n\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\n\nexport const SPOTIFY_REMOVE_AUTH = 'SPOTIFY_REMOVE_AUTH'\nexport const SPOTIFY_LINKER_LOADED = 'SPOTIFY_LINKER_LOADED'\nexport const SPOTIFY_LINKER_UNLOADED = 'SPOTIFY_LINKER_UNLOADED'\n\nexport const IMPORT_SCORES = 'IMPORT_SCORES'\nexport const IMPORT_SCORES_DIALOG_UNLOADED = 'IMPORT_SCORES_DIALOG_UNLOADED'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const TASKS_DIALOG_LOADED = 'TASKS_DIALOG_LOADED'\nexport const TASKS_DIALOG_UNLOADED = 'TASKS_DIALOG_UNLOADED'\nexport const UPDATE_TASK = 'UPDATE_TASK'\n\nexport const ACCOUNT_VIEW_LOADED = 'ACCOUNT_VIEW_LOADED'\nexport const ACCOUNT_VIEW_UNLOADED = 'ACCOUNT_VIEW_UNLOADED'\nexport const ACCOUNTS_PAGE_UNLOADED = 'ACCOUNTS_PAGE_UNLOADED'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const ADD_TRANSACTIONS = 'ADD_TRANSACTIONS'\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION'\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION'\nexport const TRANSACTION_DIALOG_UNLOADED = 'TRANSACTION_DIALOG_UNLOADED'\nexport const TRANSACTIONS_DIALOG_UNLOADED = 'TRANSACTIONS_DIALOG_UNLOADED'\n\nexport const STUDENT_SEARCH_LOADED = 'STUDENT_SEARCH_LOADED'\nexport const STUDENT_SEARCH_UNLOADED = 'STUDENT_SEARCH_UNLOADED'\n\nexport const PRODUCTS_PAGE_LOADED = 'PRODUCTS_PAGE_LOADED'\nexport const PRODUCTS_PAGE_UNLOADED = 'PRODUCTS_PAGE_UNLOADED'\nexport const PRODUCT_DIALOG_UNLOADED = 'PRODUCT_DIALOG_UNLOADED'\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  People,\n  QueueMusic,\n  Settings,\n  Store,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  path: state.router.location.pathname,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n  const enabled = {\n    products: props.settings.productsEnabled,\n    songs: props.settings.songRequestEnabled,\n  }\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ??\n      (userRole === 'student'\n        ? 'account'\n        : userRole === 'admin'\n        ? 'teachers'\n        : 'accounts')\n    const redirectTo = `/${userRole}/${tabValue}`\n    props.onLoad(tabValue, redirectTo)\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        {enabled.songs && (\n          <BottomNavigationAction\n            label='Songs'\n            icon={<QueueMusic />}\n            value='songs'\n          />\n        )}\n        {enabled.products && (\n          <BottomNavigationAction\n            label='Products'\n            icon={<Store />}\n            value='products'\n          />\n        )}\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  if (userRole === 'admin') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalAtm />}\n        value='accounts'\n      />\n      {enabled.products && (\n        <BottomNavigationAction\n          label='Products'\n          icon={<Store />}\n          value='products'\n        />\n      )}\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      {enabled.songs && (\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n      )}\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  headerLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  headerRight: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  pageHeader: {\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = ({ children, title }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={2} className={classes.pageHeader}>\n      <Grid item xs={12} md={6} className={classes.headerLeft}>\n        <Typography variant='h4'>{title}</Typography>\n      </Grid>\n      <Grid item xs={12} md={6} className={classes.headerRight}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PageHeader\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { Switch, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\n// import SpotifyLinker from './Teacher/SpotifyLinker'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        defaultStudentPassword: settings?.defaultStudentPassword || '',\n        productsEnabled: settings?.productsEnabled || false,\n        songRequestEnabled: settings?.songRequestEnabled || false,\n        songRequestPurchaseAmount: settings?.songRequestPurchaseAmount || 0,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n        score100: settings?.scoreConverter?.[100] || 1200,\n        score90: settings?.scoreConverter?.[90] || 1000,\n        score80: settings?.scoreConverter?.[80] || 800,\n        score70: settings?.scoreConverter?.[70] || 600,\n        score60: settings?.scoreConverter?.[60] || 0,\n        score50: settings?.scoreConverter?.[50] || 0,\n      }}\n      validationSchema={Yup.object({\n        defaultStudentPassword: Yup.string(),\n        productsEnabled: Yup.boolean(),\n        songRequestEnabled: Yup.boolean(),\n        songRequestPurchaseAmount: Yup.number().typeError('Numbers only'),\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n        score100: Yup.number().typeError('Numbers only'),\n        score90: Yup.number().typeError('Numbers only'),\n        score80: Yup.number().typeError('Numbers only'),\n        score70: Yup.number().typeError('Numbers only'),\n        score60: Yup.number().typeError('Numbers only'),\n        score50: Yup.number().typeError('Numbers only'),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password && currentUser.role !== 'student')\n          delete userSettings.password\n\n        if (currentUser.role !== 'student')\n          userSettings.scoreConverter = {\n            100: values.score100,\n            90: values.score90,\n            80: values.score80,\n            70: values.score70,\n            60: values.score60,\n            50: values.score50,\n            40: 0,\n            30: 0,\n            20: 0,\n            10: 0,\n            0: 0,\n          }\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={errors} />\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Song Requests\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Song request purchase amount'\n                  name='songRequestPurchaseAmount'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <label>\n                  <Field\n                    component={Switch}\n                    label='Display the Songs page'\n                    name='songRequestEnabled'\n                    type='checkbox'\n                  />\n                  Display the Songs page\n                </label>\n              </Grid>\n              {/* <Grid item xs={12} md={6}>\n                <SpotifyLinker />\n              </Grid> */}\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Products\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <label>\n                  <Field\n                    component={Switch}\n                    label='Display the Products page'\n                    name='productsEnabled'\n                    type='checkbox'\n                  />\n                  Display the Products page\n                </label>\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Student Accounts\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Default student password'\n                  name='defaultStudentPassword'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Score Conversions\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='100% and up'\n                  name='score100'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='90% and up'\n                  name='score90'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='80% and up'\n                  name='score80'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='70% and up'\n                  name='score70'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='60% and up'\n                  name='score60'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='50% and up'\n                  name='score50'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Account Details\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='First name'\n                  name='firstName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Last name'\n                  name='lastName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const passedClasses = props.className || ''\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip arrow enterTouchDelay={0} title={props.action}>\n      <IconButton\n        aria-label={props.action}\n        className={`${classes.actionButton} ${passedClasses}`}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { LockOpen } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { RESET_STUDENT_PASSWORD } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  defaultStudentPassword: state.common.settings.defaultStudentPassword,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (user) =>\n    dispatch({\n      type: RESET_STUDENT_PASSWORD,\n      payload: agent.Students.update(user),\n      snackbar: { message: 'Password reset', variant: 'success' },\n    }),\n})\n\nconst ResetStudentPasswordAlert = ({\n  btnSize,\n  defaultStudentPassword,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    const user = { ...student, password: defaultStudentPassword }\n    onSubmit(user)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Reset password'\n        onClick={handleClickOpen}\n        size={btnSize ?? 'small'}\n      >\n        <LockOpen fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset Password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you want to reset{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            's password to <strong>{defaultStudentPassword}</strong>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='primary'\n            variant='contained'\n            autoFocus\n          >\n            Reset\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetStudentPasswordAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Grade, ShoppingCart } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n  TRANSACTION_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transaction) =>\n    dispatch({\n      type: ADD_TRANSACTION,\n      payload: agent.Transactions.add(transaction),\n      snackbar: {\n        message: `${transaction.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTION_DIALOG_UNLOADED }),\n})\n\nconst TransactionDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  student,\n  transaction,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, student, type: type.toLowerCase(), typeTitle: type })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    // onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton\n        action={`Add ${type.toLowerCase()}`}\n        onClick={handleClickOpen}\n      >\n        {type === 'Bonus' && <Grade />}\n        {type === 'Purchase' && <ShoppingCart />}\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            amount: transaction?.amount || '',\n            description: transaction?.description || '',\n          }}\n          validationSchema={Yup.object({\n            amount: Yup.number().typeError('Numbers only').required('Required'),\n            description: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            transaction ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {`${transaction ? 'Edit' : 'Add'} ${type}`}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={transaction ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {transaction\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDialog)\n","// Convert the given score to points using the given conversions\nconst convertScore = (score, conversions) => {\n  const total = score.task.totalPoints\n  const nonZeroTotal = total === 0 ? 1 : total\n  const percent = Math.round((score.value / nonZeroTotal) * 100)\n  const conversionKey = Math.floor((percent > 100 ? 100 : percent) / 10) * 10\n  return conversions[conversionKey]\n}\n\nexport default convertScore\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { Close, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../components/ActionButton'\nimport ResetStudentPasswordAlert from './Teacher/ResetStudentPasswordAlert'\nimport TransactionDialog from './Teacher/TransactionDialog'\nimport agent from '../agent'\nimport convertScore from '../converter'\n\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  balance: {\n    'textAlign': 'center',\n    '& > h6': {\n      borderTop: '1px solid #ccc',\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  edit: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  subtotal: {\n    'position': 'relative',\n    'textAlign': 'center',\n    '& > p': {\n      position: 'relative',\n      bottom: -theme.spacing(1),\n    },\n    '& > h6': {\n      fontSize: theme.typography.pxToRem(12),\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  unit: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  conversions: state.scores.conversions,\n  total: state.scores.total,\n  transactions: state.scores.transactions,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (transaction) =>\n    dispatch({\n      type: DELETE_TRANSACTION,\n      payload: agent.Transactions.delete(transaction),\n      snackbar: { message: 'Transaction deleted', variant: 'success' },\n    }),\n  onLoad: (username) =>\n    dispatch({\n      type: ACCOUNT_VIEW_LOADED,\n      payload: agent.Scores.getAll(username),\n    }),\n  onUnload: () => dispatch({ type: ACCOUNT_VIEW_UNLOADED }),\n  onUpdate: (transaction) =>\n    dispatch({\n      type: UPDATE_TRANSACTION,\n      payload: agent.Transactions.update(transaction),\n      snackbar: { message: 'Transaction updated', variant: 'success' },\n    }),\n})\n\nconst AccountHeader = ({ canEdit, doEdit, onEditClick, student, total }) => {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <Typography gutterBottom variant='h5'>\n            {student.firstName} {student.lastName}\n          </Typography>\n          {student.course && (\n            <Typography color='textSecondary' variant='subtitle1'>\n              {student.course} &middot; Period {student.period}\n            </Typography>\n          )}\n        </Grid>\n        <Grid item xs={12} md={4} container>\n          <Grid item xs={12} className={classes.balance}>\n            <Typography\n              color={total?.balance >= 0 ? 'primary' : 'secondary'}\n              variant='h4'\n            >\n              {total?.balance} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='textSecondary' variant='subtitle2'>\n              Balance\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.bonuses} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Bonuses\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='secondary' variant='body1'>\n              {total?.purchases} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='secondary' variant='subtitle2'>\n              Purchases\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.scores} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Assessments\n            </Typography>\n          </Grid>\n        </Grid>\n        {canEdit && (\n          <Grid item xs={12} md={4} className={classes.actions}>\n            <TransactionDialog student={student} type='Bonus' />\n            <TransactionDialog student={student} type='Purchase' />\n            <ActionButton\n              action={doEdit ? 'Finish editing' : 'Edit transactions'}\n              className={doEdit && classes.edit}\n              onClick={onEditClick}\n            >\n              {doEdit ? <Close /> : <Edit />}\n            </ActionButton>\n            <ResetStudentPasswordAlert btnSize='medium' student={student} />\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  )\n}\n\nconst TransactionList = ({\n  conversions,\n  doEdit,\n  onDelete,\n  onUpdate,\n  transactions,\n}) => {\n  const [data, setData] = useState([])\n\n  const mapTransaction = (transaction) => ({\n    amount: transaction.amount,\n    createdAt: new Date(transaction.createdAt).toDateString(),\n    description: transaction.description,\n    type: transaction.type,\n    _id: transaction._id,\n  })\n\n  const mapScore = (score) => ({\n    amount: convertScore(score, conversions),\n    createdAt: new Date(score.createdAt).toDateString(),\n    description: score.task.title,\n    type: 'assessment',\n  })\n\n  // @todo: sort by date?\n  const mappedData = (transactions) => {\n    const { bonuses, purchases, scores } = transactions\n    const mapped = [\n      ...bonuses.map((bonus) => mapTransaction(bonus)),\n      ...purchases.map((purchase) => mapTransaction(purchase)),\n    ]\n    if (doEdit) {\n      return mapped\n    } else {\n      return [...mapped, ...scores.map((score) => mapScore(score))]\n    }\n  }\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      defaultSort: 'desc',\n    },\n    { title: 'Description', field: 'description' },\n    { title: 'Amount', field: 'amount' },\n    { title: 'Type', field: 'type', editable: 'never' },\n  ])\n\n  useEffect(() => {\n    transactions && setData(mappedData(transactions))\n  }, [doEdit, transactions])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No activity to report',\n          editRow: {\n            deleteText: 'Delete this transaction?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={\n        doEdit\n          ? {\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  const dataUpdate = [...data]\n                  const index = oldData.tableData.id\n                  dataUpdate[index] = newData\n                  setData([...dataUpdate])\n                  onUpdate(newData)\n                  resolve()\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  const newData = [...data]\n                  const index = oldData.tableData.id\n                  newData.splice(index, 1)\n                  setData([...newData])\n                  onDelete(oldData)\n                  resolve()\n                }),\n            }\n          : {}\n      }\n    />\n  )\n}\n\nconst AccountView = ({\n  canEdit,\n  conversions,\n  onDelete,\n  onLoad,\n  onUnload,\n  onUpdate,\n  student,\n  total,\n  transactions,\n}) => {\n  const [doEdit, setDoEdit] = useState(false)\n\n  const handleEditClick = () => {\n    setDoEdit(!doEdit)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    onLoad(student.username)\n  }, [student])\n\n  return (\n    <>\n      {transactions && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountHeader\n              canEdit={canEdit}\n              doEdit={doEdit}\n              onEditClick={handleEditClick}\n              student={student}\n              total={total}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TransactionList\n              conversions={conversions}\n              doEdit={doEdit}\n              onDelete={onDelete}\n              onUpdate={onUpdate}\n              transactions={transactions}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountView)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AccountView from '../AccountView'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst StudentAccount = ({ currentUser }) => {\n  return <AccountView student={currentUser} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(StudentAccount)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport agent from '../../agent'\nimport background from './../../images/songs-background.jpg'\n\nimport { SUBMIT_SONG_REQUEST } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n})\n\nconst SongRequestDialog = ({ onSubmit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit(values)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  autoFocus\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(SongRequestDialog)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  paper: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n  status: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload) => dispatch({ type: STUDENT_SONGS_PAGE_LOADED, payload }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst DataRow = ({ song, showStudent }) => {\n  const classes = useStyles()\n\n  return (\n    <TableRow>\n      <TableCell>{new Date(song.createdAt).toDateString()}</TableCell>\n      <TableCell>{song.title}</TableCell>\n      <TableCell>{song.artist}</TableCell>\n      {showStudent && (\n        <TableCell>\n          {song.student.firstName} {song.student.lastName}\n        </TableCell>\n      )}\n      <TableCell>\n        <span className={classes.status}>\n          {song.statusDescription ? (\n            <>\n              {song.status}\n              <Tooltip\n                arrow\n                color='primary'\n                enterTouchDelay={0}\n                title={song.statusDescription}\n              >\n                <InfoOutlined className={classes.icon} />\n              </Tooltip>\n            </>\n          ) : (\n            song.status\n          )}\n        </span>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst CourseSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={true} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='5'>\n        <Typography align='center'>\n          No songs have been requested for your period\n        </Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst UserSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={false} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='4'>\n        <Typography align='center'>You have not requested any songs</Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst StudentSongs = ({\n  course,\n  courseSongs,\n  currentUser,\n  onLoad,\n  onUnload,\n  userSongs,\n}) => {\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  const classes = useStyles()\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  useEffect(() => {\n    onLoad(agent.Songs.forStudent())\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          'Songs for ' +\n          (mySongsOnly ? currentUser.firstName : 'Period ' + course.period)\n        }\n      >\n        <SongRequestDialog />\n      </PageHeader>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Request Date</TableCell>\n              <TableCell>Song Title</TableCell>\n              <TableCell>Song Artist</TableCell>\n              {!mySongsOnly && <TableCell>Purchased by</TableCell>}\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mySongsOnly ? (\n              <UserSongs songs={userSongs} />\n            ) : (\n              <CourseSongs songs={courseSongs} />\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Collapse, IconButton, makeStyles } from '@material-ui/core'\nimport { Alert as MuiAlert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\n\nimport { ALERT_CLOSED } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch({ type: ALERT_CLOSED }),\n})\n\nconst Alert = ({ children, onClose, severity, variant }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div className={classes.alert}>\n      <Collapse in={open}>\n        <MuiAlert\n          action={\n            <IconButton\n              aria-label='close'\n              color='inherit'\n              size='small'\n              onClick={() => {\n                setOpen(false)\n                onClose()\n              }}\n            >\n              <Close fontSize='inherit' />\n            </IconButton>\n          }\n          severity={severity || 'info'}\n          variant={variant || 'outlined'}\n        >\n          {children}\n        </MuiAlert>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Alert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Paper, TextField, makeStyles } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: STUDENT_SEARCH_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: STUDENT_SEARCH_UNLOADED }),\n})\n\nconst StudentSearch = ({ courses, onChange, onLoad, onUnload }) => {\n  const [mappedData, setMappedData] = useState([])\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const mapped = courses\n      .map((course) =>\n        course.students.map((student) => ({\n          ...student,\n          course: course.name,\n          period: course.period,\n          name: `${student.firstName} ${student.lastName}`,\n        }))\n      )\n      .flat()\n    setMappedData(mapped)\n  }, [courses])\n\n  return (\n    <Paper className={classes.search}>\n      <Autocomplete\n        autoHighlight\n        getOptionLabel={(option) => option.name}\n        groupBy={(option) => `${option.course} | Period ${option.period}`}\n        noOptionsText='No students have been added'\n        onChange={(ev, value) => onChange(value)}\n        options={mappedData}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Student'\n            placeholder='Type or select a name'\n          />\n        )}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n    </Paper>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSearch)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nconst useStyles = makeStyles((theme) => ({\n  courses: {\n    '& div': {\n      'boxShadow': theme.shadows[4],\n      'cursor': 'pointer',\n      'marginBottom': theme.spacing(1),\n      'padding': `${theme.spacing(3)}px ${theme.spacing(4)}px`,\n      'transition': 'all 0.15s ease-in-out',\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: theme.shadows[1],\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[1],\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst CourseSelector = ({ courses, onSelect }) => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Typography gutterBottom variant='h6'>\n        Select a course\n      </Typography>\n      {courses.length > 0 ? (\n        <div className={classes.courses}>\n          {courses.map((course) => (\n            <div\n              key={course.slug}\n              onClick={() => {\n                onSelect(course)\n              }}\n              tabIndex='0'\n            >\n              <Typography variant='body1'>\n                <b>{course.name}</b> &middot; Period {course.period}\n              </Typography>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <Alert severity='info'>\n          You must create a course before continuing\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(CourseSelector)\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table'\n\nconst StudentsTable = ({ course, onSelect }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = course.students.map((student) => ({\n    username: student.username,\n    firstName: student.firstName,\n    lastName: student.lastName,\n    fullName: `${student.firstName} ${student.lastName}`,\n    role: student.role,\n    _id: student._id,\n  }))\n\n  const [columns] = useState([{ title: 'Students', field: 'fullName' }])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [course])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No students found for this course',\n        },\n        toolbar: {\n          nRowsSelected: '{0} student(s) selected',\n        },\n      }}\n      onSelectionChange={(rows) => onSelect(rows)}\n      options={{ paging: false, selection: true, toolbar: true }}\n      title={`${course.name} | Period ${course.period}`}\n    />\n  )\n}\n\nexport default StudentsTable\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport ListErrors from '../ListErrors'\nimport StudentsTable from './StudentsTable'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTIONS,\n  TRANSACTIONS_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(80),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transactions, curStudent) =>\n    dispatch({\n      type: ADD_TRANSACTIONS,\n      payload: agent.Transactions.addMany(transactions),\n      curStudent,\n      snackbar: {\n        message: `${transactions.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTIONS_DIALOG_UNLOADED }),\n})\n\nconst BulkTransactionsDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onAdd,\n  onExit,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [course, setCourse] = useState(null)\n  const [students, setStudents] = useState([])\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    setCourse(null)\n    isClosed()\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd(\n      {\n        ...values,\n        students: students.map((student) => student._id),\n        type: type === 'Bonuses' ? 'bonus' : 'purchase',\n        typeTitle: type,\n      },\n      curStudent\n    )\n  }\n\n  const handleCourseSelect = (slug) => {\n    setCourse(slug)\n  }\n\n  const handleStudentSelect = (rows) => {\n    setStudents(rows)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <Formik\n        initialValues={{\n          amount: '',\n          description: '',\n        }}\n        validationSchema={Yup.object({\n          amount: Yup.number().typeError('Numbers only').required('Required'),\n          description: Yup.string().required('Required'),\n        })}\n        onSubmit={async (values) => {\n          handleSubmitAdd(values)\n        }}\n      >\n        <Form>\n          <DialogTitle>Add {type}</DialogTitle>\n          <DialogContent>\n            <ListErrors errors={errors} />\n            {!course && <CourseSelector onSelect={handleCourseSelect} />}\n            {course && (\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <StudentsTable\n                    course={course}\n                    onSelect={handleStudentSelect}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              disabled={inProgress || students.length === 0}\n              color='primary'\n              type='submit'\n              variant='contained'\n            >\n              {inProgress ? 'Adding...' : 'Add'}\n            </Button>\n            <Button\n              disabled={inProgress}\n              onClick={handleClose}\n              variant='contained'\n            >\n              Cancel\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BulkTransactionsDialog)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport parse from 'csv-parse/lib/sync'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  filedrop: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[300],\n    borderRadius: theme.spacing(1),\n    color: theme.palette.grey[600],\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: '20px',\n    transition: 'all 0.25s ease-in-out',\n  },\n  filedropActive: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  filedropReject: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nfunction Filedrop({ onFiledrop }) {\n  const classes = useStyles()\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Due to {multiple: false} in useDropzone(), only one file will be received\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const parsedFile = parse(reader.result, {\n          columns: true,\n          skip_empty_lines: true,\n        })\n        onFiledrop(parsedFile)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    accept: 'text/csv, text/plain',\n    multiple: false,\n    onDropAccepted: onDrop,\n  })\n\n  return (\n    <div\n      {...getRootProps({\n        className: `${classes.filedrop} ${\n          isDragActive ? classes.filedropActive : ''\n        } ${isDragReject ? classes.filedropReject : ''}`,\n      })}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive && (\n        <Typography>\n          Drop a .csv file here or click to select a .csv file\n        </Typography>\n      )}\n      {isDragActive && !isDragReject && (\n        <Typography>Drop .csv file here</Typography>\n      )}\n      {isDragReject && <Typography>File type not accepted</Typography>}\n    </div>\n  )\n}\n\nexport default Filedrop\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Working...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport Filedrop from '../Filedrop'\nimport ListErrors from '../ListErrors'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onImport: (data, curStudent) =>\n    dispatch({\n      type: IMPORT_SCORES,\n      payload: agent.Scores.import(data),\n      curStudent,\n      snackbar: { message: 'Scores imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: IMPORT_SCORES_DIALOG_UNLOADED }),\n})\n\nconst ScoreImportStepper = ({ onDataChange, onShowImport }) => {\n  const [file, setFile] = useState(null)\n  const [course, setCourse] = useState(null)\n  const [tasks, setTasks] = useState(null)\n\n  const handleCourseSelect = (course) => {\n    setCourse(course)\n  }\n\n  const handleFiledrop = (file) => {\n    const tasks = {}\n    Object.keys(file[0])\n      .slice(1)\n      .forEach((task) => {\n        tasks[task] = false\n      })\n    setFile(file)\n    setTasks(tasks)\n  }\n\n  const handleTaskChange = (ev) => {\n    setTasks({ ...tasks, [ev.target.name]: ev.target.checked })\n  }\n\n  // Determine if any tasks have been checked/selected\n  useEffect(() => {\n    const tasksSelected = tasks\n      ? Object.values(tasks).some((el) => el === true)\n      : false\n    onShowImport(tasksSelected)\n  }, [tasks])\n\n  // Keep the imported data object current\n  useEffect(() => {\n    onDataChange({ file, course, tasks })\n  }, [file, course, tasks])\n\n  return (\n    <>\n      {!file && !course && !tasks && (\n        <CourseSelector onSelect={handleCourseSelect} />\n      )}\n\n      {!file && course && !tasks && (\n        <div>\n          <Typography gutterBottom>\n            Scores must be imported from a .csv file exported from Infinite\n            Campus\n          </Typography>\n          <Filedrop onFiledrop={handleFiledrop} />\n        </div>\n      )}\n\n      {file &&\n      course &&\n      tasks && ( // @todo: use material-table here?\n          <FormControl component='fieldset'>\n            <Typography gutterBottom variant='body1'>\n              Select the assignments to import\n            </Typography>\n            <FormGroup>\n              {Object.keys(tasks).map((task) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={tasks[task]}\n                      onChange={handleTaskChange}\n                      name={task}\n                    />\n                  }\n                  key={task}\n                  label={task}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        )}\n    </>\n  )\n}\n\nconst ImportScoresDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onExit,\n  onImport,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [ready, setReady] = useState(false)\n  const [data, setData] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    isClosed()\n  }\n\n  const handleDataChange = (importData) => {\n    setData(importData)\n  }\n\n  const handleShowImport = (selected) => {\n    setReady(selected)\n  }\n\n  const handleClickImport = () => {\n    // Get student usernames (student numbers)\n    const usernames = data.file\n      .map(\n        (student, index) =>\n          index > 1 && student['Assignment Name'].split('#').pop()\n      )\n      .filter((username) => username !== false)\n\n    // Prepare data to send to server\n    const parsed = { course: data.course, tasks: [] }\n    for (const taskName in data.tasks) {\n      const selected = data.tasks[taskName]\n      if (selected) {\n        const task = {\n          title: taskName,\n          totalPoints: data.file[1][taskName],\n          scores: {},\n        }\n\n        for (const username of usernames) {\n          const student = data.file.find((row) =>\n            row['Assignment Name'].endsWith(username)\n          )\n          if (student) task.scores[username] = student[taskName]\n        }\n\n        parsed.tasks.push(task)\n      }\n    }\n\n    onImport(parsed, curStudent)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <DialogTitle>Import Scores</DialogTitle>\n      <DialogContent>\n        <ListErrors errors={errors} />\n        {inProgress ? (\n          <Spinner message='Importing...' />\n        ) : (\n          <ScoreImportStepper\n            onDataChange={handleDataChange}\n            onShowImport={handleShowImport}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        {ready && (\n          <Button\n            color='primary'\n            disabled={inProgress}\n            onClick={handleClickImport}\n            variant='contained'\n          >\n            {inProgress ? 'Importing...' : 'Import'}\n          </Button>\n        )}\n        <Button disabled={inProgress} onClick={handleClose} variant='contained'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportScoresDialog)\n","import React, { useState } from 'react'\nimport {\n  Fab,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core'\nimport { Grade, Money, Publish, ShoppingCart } from '@material-ui/icons'\n\nimport BulkTransactionsDialog from './BulkTransactionsDialog'\nimport ImportScoresDialog from '../Teacher/ImportScoresDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst UpdateAccountsMenu = ({ curStudent }) => {\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null)\n  const [menuSelection, setMenuSelection] = useState(null)\n\n  const classes = useStyles()\n\n  const handleMenuOpen = (ev) => {\n    setMenuAnchorEl(ev.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null)\n  }\n\n  const handleMenuSelect = (ev) => {\n    setMenuSelection(ev.currentTarget.dataset.type)\n    setMenuAnchorEl(null)\n  }\n\n  const handleDialogClose = () => {\n    setMenuSelection(null)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleMenuOpen} variant='extended'>\n        <Money className={classes.icon} />\n        Update Accounts\n      </Fab>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem data-type='scores' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Publish />\n          </ListItemIcon>\n          <ListItemText>Import scores</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='bonuses' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Grade />\n          </ListItemIcon>\n          <ListItemText>Add Bonuses</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='purchases' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <ShoppingCart />\n          </ListItemIcon>\n          <ListItemText>Add Purchases</ListItemText>\n        </MenuItem>\n      </Menu>\n      <ImportScoresDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'scores'}\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'bonuses'}\n        type='Bonuses'\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'purchases'}\n        type='Purchases'\n      />\n    </>\n  )\n}\n\nexport default UpdateAccountsMenu\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport AccountView from '../AccountView'\nimport Alert from '../Alert'\nimport PageHeader from '../PageHeader'\nimport StudentSearch from './StudentSearch'\nimport UpdateAccountsMenu from './UpdateAccountsMenu'\n\nimport { ACCOUNTS_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  importSummary: state.scores.importSummary,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: ACCOUNTS_PAGE_UNLOADED }),\n})\n\nconst TeacherAccounts = ({ importSummary, onUnload }) => {\n  const [student, setStudent] = useState(null)\n\n  const plural = (qty, unit) => `${qty} ${unit}${qty !== 1 ? 's' : ''}`\n\n  const handleStudentSelect = (student) => {\n    setStudent(student)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Accounts'>\n        <UpdateAccountsMenu curStudent={student} />\n      </PageHeader>\n\n      {importSummary && (\n        <Alert>\n          Created {plural(importSummary.tasksCreated, 'assignment')}, imported{' '}\n          {plural(importSummary.scoresImported, 'score')}, and updated{' '}\n          {plural(importSummary.scoresUpdated, 'score')}\n        </Alert>\n      )}\n\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <StudentSearch onChange={handleStudentSelect} />\n        </Grid>\n        <Grid item xs={12}>\n          {student && <AccountView canEdit={true} student={student} />}\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherAccounts)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSE_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: COURSE_DIALOG_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst CourseDialog = ({\n  course,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {course ? (\n        <ActionButton action='Edit course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Create course\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: course?.name || '',\n            period: course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.number().typeError('Numbers only').required('Required'),\n          })}\n          onSubmit={async (values) => {\n            course ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {course ? 'Edit Course' : 'Create Course'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={course ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {course\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_STUDENT } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_STUDENT,\n      payload: agent.Students.delete(user),\n      snackbar: { message: 'Student deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteStudentAlert = ({ course, onDelete, student }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(student)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Delete student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Delete fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Student</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>the student's account, and</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this student. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteStudentAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Edit, PersonAdd } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_STUDENT,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_STUDENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user, courseId) =>\n    dispatch({\n      type: ADD_STUDENT,\n      payload: agent.Students.add(user, courseId),\n      courseId,\n      snackbar: { message: 'Student added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n  onUpdate: (user, courseId) =>\n    dispatch({\n      type: UPDATE_STUDENT,\n      payload: agent.Students.update(user),\n      courseId,\n      snackbar: { message: 'Student updated', variant: 'success' },\n    }),\n})\n\nconst StudentDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    const user = { ...values }\n    const courseId = course._id\n    user.role = 'student'\n    onAdd(user, courseId)\n  }\n\n  const handleSubmitUpdate = (values) => {\n    const user = { ...student, ...values }\n    const courseId = course._id\n    onUpdate(user, courseId)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {student ? (\n        <ActionButton\n          action='Edit student'\n          onClick={handleClickOpen}\n          size='small'\n        >\n          <Edit fontSize='inherit' />\n        </ActionButton>\n      ) : (\n        <ActionButton action='Add student' onClick={handleClickOpen}>\n          <PersonAdd />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            firstName: student?.firstName || '',\n            lastName: student?.lastName || '',\n            username: student?.username || '',\n            password: !student ? defaultStudentPassword : '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            password: Yup.string().required(!student ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            student ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {student ? 'Edit Student' : 'Add Student'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={student ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!student || inProgress}\n                    label='Student Number'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {student\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDialog)\n","import React from 'react'\nimport { Chip, Typography, makeStyles } from '@material-ui/core'\n\nimport DeleteStudentAlert from './DeleteStudentAlert'\nimport ResetStudentPasswordAlert from './ResetStudentPasswordAlert'\nimport StudentDialog from './StudentDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    'alignItems': 'center',\n    'borderBottom': 'solid 2px white',\n    'display': 'flex',\n    'height': theme.spacing(5),\n    'justifyContent': 'space-between',\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderBottomColor: theme.palette.secondary.main,\n    },\n  },\n  rowHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  studentUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n}))\n\nconst StudentListRow = ({ course, student }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.row}>\n      <div className={classes.rowHeader}>\n        <Chip\n          color='primary'\n          label={student.username}\n          className={classes.studentUsername}\n        />\n        <Typography>\n          {student.lastName}, {student.firstName}\n        </Typography>\n      </div>\n      <div>\n        <ResetStudentPasswordAlert student={student} />\n        <StudentDialog course={course} student={student} />\n        <DeleteStudentAlert course={course} student={student} />\n      </div>\n    </div>\n  )\n}\n\nconst CourseStudentList = ({ course }) => {\n  return (\n    <>\n      <Typography variant='h6'>Students</Typography>{' '}\n      {course.students && course.students.length > 0 ? (\n        course.students.map((student) => {\n          return (\n            <StudentListRow\n              key={student._id}\n              course={course}\n              student={student}\n            />\n          )\n        })\n      ) : (\n        <div>\n          <Typography>No students have been added to this course</Typography>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CourseStudentList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_COURSE } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteCourseAlert = ({ course, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(course.slug)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {course.name} Period {course.period}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this course. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteCourseAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Publish } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Filedrop from '../Filedrop'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_STUDENTS,\n  STUDENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrop: (users, courseId) =>\n    dispatch({\n      type: IMPORT_STUDENTS,\n      payload: agent.Students.import(users, courseId),\n      snackbar: { message: 'Students imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n})\n\nconst ImportStudentsDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onDrop,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleFiledrop = (file) => {\n    const column = Object.keys(file[0])\n    const users = file\n      .map((row, index) => {\n        // Parse csv data for Infinite Campus grade book export\n        if (index < 2) return null\n        const student = row[column[0]]\n        const user = {\n          firstName: student\n            .split(',')[1]\n            .split(/(\\s\\w)*\\s#/)[0]\n            .trim(),\n          lastName: student.split(',')[0],\n          username: student.split('#')[1],\n          password: defaultStudentPassword,\n          role: 'student',\n        }\n        return user\n      })\n      .filter((element) => element !== null)\n    onDrop(users, course._id)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action='Import students' onClick={handleClickOpen}>\n        <Publish />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Students</DialogTitle>\n        <DialogContent>\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <>\n              <Typography gutterBottom>\n                Students can be imported from a .csv file exported from Infinite\n                Campus\n              </Typography>\n              <Filedrop onFiledrop={handleFiledrop} />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportStudentsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  UPDATE_TASK,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (task) =>\n    dispatch({\n      type: DELETE_TASK,\n      payload: agent.Tasks.delete(task),\n      snackbar: { message: 'Assignment removed', variant: 'success' },\n    }),\n  onLoad: (courseId) =>\n    dispatch({\n      type: TASKS_DIALOG_LOADED,\n      payload: agent.Tasks.getAll(courseId),\n    }),\n  onUpdate: (task) =>\n    dispatch({\n      type: UPDATE_TASK,\n      payload: agent.Tasks.update(task),\n      snackbar: { message: 'Assignment updated', variant: 'success' },\n    }),\n})\n\nconst TasksTable = ({ course, onDelete, onLoad, onUpdate, tasks }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = tasks.map((task) => ({\n    createdAt: new Date(task.createdAt).toDateString(),\n    title: task.title,\n    totalPoints: task.totalPoints,\n    slug: task.slug,\n  }))\n\n  const [columns] = useState([\n    { title: 'Date', field: 'createdAt', editable: 'never' },\n    { title: 'Title', field: 'title', editable: 'never' },\n    { title: 'Total Points', field: 'totalPoints' },\n  ])\n\n  useEffect(() => {\n    onLoad(course._id)\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [tasks])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No assignments found for this course',\n          editRow: {\n            deleteText:\n              'Delete assignment? This will delete all scores for this assignment.',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksTable)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Assignment } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport TasksTable from './TasksTable'\n\nimport { TASKS_DIALOG_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: TASKS_DIALOG_UNLOADED }),\n})\n\nconst TasksDialog = ({ course, errors, inProgress, onExit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton action='Manage assignments' onClick={handleClickOpen}>\n        <Assignment />\n      </ActionButton>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Manage Assignments</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          <TasksTable course={course} />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDialog)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport CourseStudentList from './CourseStudentList'\nimport DeleteCourseAlert from './DeleteCourseAlert'\nimport ImportStudentsDialog from './ImportStudentsDialog'\nimport StudentDialog from './StudentDialog'\nimport TasksDialog from './TasksDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = ({ courses }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <TasksDialog course={course} />\n                  <StudentDialog course={course} />\n                  <ImportStudentsDialog course={course} />\n                  <CourseDialog course={course} />\n                  <DeleteCourseAlert course={course} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <CourseStudentList course={course} />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Alert from '../Alert'\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n})\n\nconst TeacherCourses = ({\n  courses,\n  importCount,\n  onLoad,\n  onUnload,\n  pageLoaded,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Courses'>\n        <CourseDialog />\n      </PageHeader>\n      {importCount !== null && <Alert>{importCount} students imported</Alert>}\n      {pageLoaded ? (\n        <Spinner message='Loading...' />\n      ) : (\n        <CourseList courses={courses} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  ButtonGroup,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { PlaylistAddCheck, ThumbDown, ThumbUp } from '@material-ui/icons'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  UPDATE_SONG_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  panel: {\n    minWidth: theme.spacing(40),\n    maxWidth: theme.spacing(60),\n  },\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  songInfo: {\n    marginBottom: theme.spacing(4),\n  },\n  statusButton: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  statusDescription: {\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  studentInfo: {\n    'alignItems': 'center',\n    'display': 'flex',\n    'marginTop': theme.spacing(4),\n    '& > div': {\n      marginRight: theme.spacing(1),\n    },\n    [theme.breakpoints.up('md')]: {\n      borderTopColor: theme.palette.primary.main,\n      borderTopStyle: 'dotted',\n      borderTopWidth: '4px',\n      paddingTop: theme.spacing(2),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  songRequestPurchaseAmount: state.common.settings.songRequestPurchaseAmount,\n  // spotifyTokens: state.common.settings.spotifyTokens,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: SONG_REQUESTS_DIALOG_UNLOADED }),\n  onSubmit: (song) =>\n    dispatch({\n      type: UPDATE_SONG_REQUEST,\n      payload: agent.Songs.update(song),\n    }),\n})\n\nconst ProcessSongRequestsDialog = ({\n  courses,\n  errors,\n  inProgress,\n  onExit,\n  onSubmit,\n  songRequestPurchaseAmount,\n  // spotifyTokens,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [song, setSong] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [statusDescription, setStatusDescription] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getLyricSearchUrl = (artist, title) => {\n    const url = `http://www.google.com/search?q=${encodeURIComponent(\n      'lyrics: ' + title + ' by ' + artist\n    )}`\n    return url\n  }\n\n  const getSpotifySearchUrl = (artist, title) => {\n    const url = `https://open.spotify.com/search/${encodeURIComponent(\n      title + ' ' + artist\n    )}`\n    return url\n  }\n\n  const getNextSong = () => {\n    setSong(null)\n    if (courses.length > 0) {\n      for (const course of courses) {\n        if (course.songs.length > 0) {\n          const nextSong = course.songs.find(\n            (song) => song.status === 'pending'\n          )\n          if (nextSong) {\n            nextSong.period = course.period\n            setSong(nextSong)\n            break\n          }\n        }\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  const handleStatusButtonClick = (status) => {\n    setStatus(status)\n  }\n\n  const handleStatusDescriptionChange = (ev) => {\n    setStatusDescription(ev.target.value)\n  }\n\n  const handleSubmit = async () => {\n    onSubmit({\n      amount: songRequestPurchaseAmount,\n      id: song._id,\n      status,\n      statusDescription,\n    })\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  useEffect(() => {\n    getNextSong()\n  }, [courses])\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <PlaylistAddCheck className={classes.icon} />\n        Process requests\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Process Song Requests</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {song ? (\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <div className={classes.songInfo}>\n                    <Typography variant='h6'>{song.title}</Typography>\n                    <Typography\n                      color='textSecondary'\n                      variant='body1'\n                      gutterBottom\n                    >\n                      Song\n                    </Typography>\n                    <Typography variant='h6'>{song.artist}</Typography>\n                    <Typography color='textSecondary' variant='body1'>\n                      Artist\n                    </Typography>\n                  </div>\n\n                  <ButtonGroup>\n                    <Button\n                      href={getLyricSearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Lyrics\n                    </Button>\n                    <Button\n                      href={getSpotifySearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Spotify\n                    </Button>\n                  </ButtonGroup>\n\n                  <div className={classes.studentInfo}>\n                    <Chip color='secondary' label={song.period} />\n                    <Typography>\n                      {song.student.firstName} {song.student.lastName}\n                    </Typography>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <Typography variant='h6'>Status</Typography>\n\n                  <ButtonGroup fullWidth size='large'>\n                    <Tooltip arrow enterTouchDelay={0} title='Approve'>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'approved' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('approved')}\n                      >\n                        <ThumbUp />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip arrow enterTouchDelay={0} title='Reject'>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'rejected' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('rejected')}\n                      >\n                        <ThumbDown />\n                      </Button>\n                    </Tooltip>\n                  </ButtonGroup>\n                  {status === 'approved' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Condition for Approval</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Clean version'\n                            control={<Radio />}\n                            label='Clean version'\n                          />\n                          <FormControlLabel\n                            value='Instrumental version'\n                            control={<Radio />}\n                            label='Instrumental version'\n                          />\n                          <FormControlLabel\n                            value='Picked my best guess'\n                            control={<Radio />}\n                            label='Picked my best guess'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                  {status === 'rejected' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Reason for Rejection</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Inappropriate content (language, drugs, sex, and/or violence)'\n                            control={<Radio />}\n                            label='Inappropriate content (language, drugs, sex, and/or violence)'\n                          />\n                          <FormControlLabel\n                            value='Not available on Spotify'\n                            control={<Radio />}\n                            label='Not available on Spotify'\n                          />\n                          <FormControlLabel\n                            value='other'\n                            control={<Radio />}\n                            label='Other'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Alert severity='info'>\n              <AlertTitle>All caught up!</AlertTitle>\n              There are no songs to process at this time\n            </Alert>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          {song && (\n            <Button\n              color='primary'\n              disabled={inProgress}\n              onClick={handleSubmit}\n              variant='contained'\n            >\n              {inProgress ? 'Saving...' : 'Save & Continue'}\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {song ? 'Cancel' : 'Close'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProcessSongRequestsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Chip, Tooltip } from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport ProcessSongRequestsDialog from './ProcessSongRequestsDialog'\nimport agent from '../../agent'\n\nimport {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.songs })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_SONG_REQUEST,\n      payload: agent.Songs.delete(id),\n      snackbar: { message: 'Song request removed', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forTeacher(),\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst TeacherSongs = ({ courses, onDelete, onLoad, onUnload }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = courses\n    .map((course) =>\n      course.songs.map((song) => ({\n        createdAt: new Date(song.createdAt).toDateString(),\n        title: song.title,\n        artist: song.artist,\n        purchasedBy: `${song.student.firstName} ${song.student.lastName}`,\n        period: course.period,\n        status: song.status,\n        statusDescription: song.statusDescription,\n        _id: song._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    { title: 'Request Date', field: 'createdAt', editable: 'never' },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    { title: 'Purchased by', field: 'purchasedBy', editable: 'never' },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        approved: 'approved',\n        pending: 'pending',\n        rejected: 'rejected',\n        removed: 'removed',\n      },\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <span style={{ alignItems: 'center', display: 'flex' }}>\n            {rowData.statusDescription ? (\n              <>\n                {rowData.status}\n                <Tooltip\n                  arrow\n                  color='primary'\n                  enterTouchDelay={0}\n                  title={rowData.statusDescription}\n                >\n                  <InfoOutlined style={{ marginLeft: '8px' }} />\n                </Tooltip>\n              </>\n            ) : (\n              rowData.status\n            )}\n          </span>\n        ) : (\n          <span>{rowData}</span>\n        ),\n    },\n  ])\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <>\n      <PageHeader title='Manage Song Requests'>\n        <ProcessSongRequestsDialog />\n      </PageHeader>\n\n      <MaterialTable\n        title='Song Requests'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No song requests have been submitted',\n            editRow: {\n              deleteText: 'Delete song request?',\n            },\n          },\n        }}\n        options={{ actionsColumnIndex: -1, paging: false, grouping: true }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const dataDelete = [...data]\n              const index = oldData.tableData.id\n              dataDelete.splice(index, 1)\n              setData([...dataDelete])\n              onDelete(oldData._id)\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSongs)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst TeacherDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'teacher' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            teacher ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={teacher ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {teacher\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_TEACHER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(user),\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteTeacherAlert = ({ onDelete, teacher }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(teacher)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {teacher.firstName} {teacher.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all products</li>\n              <li>all scores</li>\n            </ul>\n            associated with this teacher. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteTeacherAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherList = ({ teachers }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog teacher={teacher} />\n                  <DeleteTeacherAlert teacher={teacher} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Typography variant='h6'>Courses</Typography>\n                {teacher.courses && teacher.courses.length > 0 ? (\n                  teacher.courses.map((course) => {\n                    return (\n                      <div key={course._id}>\n                        <Typography>\n                          Period {course.period} | {course.name} |{' '}\n                          {course.students.length} students\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No courses have been created</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from './../PageHeader'\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n})\n\nconst ManageTeachers = ({ onLoad, onUnload, teachers }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Teachers'}>\n        <TeacherDialog />\n      </PageHeader>\n      <TeacherList teachers={teachers} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: 'white',\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    position: 'absolute',\n    top: '-18px',\n  },\n  img: {\n    maxHeight: '100%',\n    maxWidth: '100%',\n    minWidth: '20px',\n  },\n  window: {\n    alignItems: 'center',\n    display: 'flex',\n    borderColor: theme.palette.secondary.main,\n    borderStyle: 'solid',\n    borderWidth: '4px',\n    height: '300px',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n    position: 'relative',\n  },\n}))\n\nconst ImagePreview = ({ src }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.window}>\n      <Typography variant='h6' className={classes.header}>\n        Image Preview\n      </Typography>\n      {src ? (\n        <img className={classes.img} src={src} />\n      ) : (\n        <Typography>No photo url provided</Typography>\n      )}\n    </div>\n  )\n}\n\nexport default ImagePreview\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nconst TextFieldLimit = (props) => {\n  return (\n    <TextField\n      error={Boolean(props.errors)}\n      inputProps={{ maxLength: props.limit }}\n      helperText={\n        props.errors\n          ? `${props.errors} | ${props.value.length}/${props.limit}`\n          : `${props.value.length}/${props.limit}`\n      }\n      {...props}\n    />\n  )\n}\n\nexport default TextFieldLimit\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ImagePreview from '../ImagePreview'\nimport ListErrors from '../ListErrors'\nimport TextFieldLimit from '../TextFieldLimit'\nimport agent from '../../agent'\n\nimport {\n  ADD_PRODUCT,\n  PRODUCT_DIALOG_UNLOADED,\n  UPDATE_PRODUCT,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  addIcon: {\n    marginRight: theme.spacing(1),\n  },\n  updateIcon: {\n    'color': 'rgba(255, 255, 255, 0.7)',\n    '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.3)', color: 'white' },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.products,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (product) =>\n    dispatch({\n      type: ADD_PRODUCT,\n      payload: agent.Products.add(product),\n      snackbar: { message: 'Product added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: PRODUCT_DIALOG_UNLOADED }),\n  onUpdate: (product) =>\n    dispatch({\n      type: UPDATE_PRODUCT,\n      payload: agent.Products.update(product),\n      snackbar: { message: 'Product updated', variant: 'success' },\n    }),\n})\n\nconst ProductDialog = ({\n  currentUser,\n  product,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const CHAR_LIMITS = { name: 60, description: 140 }\n\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...product, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {product ? (\n        currentUser.role === 'teacher' && (\n          <ActionButton\n            action='Edit product'\n            onClick={handleClickOpen}\n            className={classes.updateIcon}\n          >\n            <Edit />\n          </ActionButton>\n        )\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.addIcon} />\n          Add product\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        maxWidth='lg'\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: product?.name || '',\n            description: product?.description || '',\n            photoUrl: product?.photoUrl || '',\n            cost: product?.cost || '',\n            quantity: product?.quantity || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string()\n              .max(\n                CHAR_LIMITS.name,\n                `Cannot be longer than ${CHAR_LIMITS.name} characters`\n              )\n              .required('Required'),\n            description: Yup.string().max(\n              CHAR_LIMITS.description,\n              `Cannot be longer than ${CHAR_LIMITS.description} characters`\n            ),\n            photoUrl: Yup.string().url('Not a valid url').required('Required'),\n            cost: Yup.number().typeError('Numbers only').required('Required'),\n            quantity: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n          })}\n          onSubmit={async (values) => {\n            product ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          {(formik) => (\n            <Form>\n              <DialogTitle>\n                {product ? 'Edit product' : 'Add product'}\n              </DialogTitle>\n              <DialogContent>\n                <ListErrors errors={errors} />\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      as={TextFieldLimit}\n                      autoFocus={product ? false : true}\n                      color='primary'\n                      disabled={inProgress}\n                      label='Product Name'\n                      name='name'\n                      type='text'\n                      limit={CHAR_LIMITS.name}\n                      errors={formik.errors.name}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      as={TextFieldLimit}\n                      color='primary'\n                      disabled={inProgress}\n                      label='Product Description'\n                      name='description'\n                      type='text'\n                      limit={CHAR_LIMITS.description}\n                      errors={formik.errors.description}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Photo Url'\n                      name='photoUrl'\n                      type='url'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Cost'\n                      name='cost'\n                      type='number'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Field\n                      color='primary'\n                      component={TextField}\n                      disabled={inProgress}\n                      label='Quantity'\n                      name='quantity'\n                      type='number'\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <ImagePreview src={formik.values.photoUrl} />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  disabled={inProgress}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  {product\n                    ? inProgress\n                      ? 'Updating...'\n                      : 'Update'\n                    : inProgress\n                    ? 'Adding...'\n                    : 'Add'}\n                </Button>\n                <Button\n                  disabled={inProgress}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_PRODUCT } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    'color': 'rgba(255, 255, 255, 0.7)',\n    '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.3)', color: 'white' },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_PRODUCT,\n      payload: agent.Products.delete(slug),\n      snackbar: { message: 'Product deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteProductAlert = ({ currentUser, product, onDelete }) => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(product.slug)\n  }\n\n  return (\n    <>\n      {currentUser.role === 'teacher' && (\n        <ActionButton\n          action='Delete product'\n          onClick={handleClickOpen}\n          className={classes.icon}\n        >\n          <Delete />\n        </ActionButton>\n      )}\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Product</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete <b>{product.name}</b>? This action{' '}\n            <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteProductAlert)\n","import React from 'react'\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport CurrencyFormat from 'react-currency-format'\n\nimport DeleteProductDialog from './DeleteProductDialog'\nimport ProductDialog from './ProductDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  actionIcon: { display: 'flex' },\n  cost: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    fontSize: '1rem',\n    lineHeight: '1.5rem',\n    padding: theme.spacing(1),\n  },\n  description: {\n    marginBottom: '-1.5rem',\n    opacity: 0,\n    transition: 'opacity 0s ease-in-out',\n  },\n  name: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    whiteSpace: 'nowrap',\n  },\n  tile: {\n    '&:hover .MuiGridListTileBar-root': {\n      'height': '100%',\n      '& [class*=\"description\"]': {\n        marginBottom: 0,\n        opacity: 1,\n        transition: 'margin-bottom 0.35s ease-in-out, opacity 0.5s ease-in-out',\n      },\n    },\n  },\n  tileBar: {\n    alignItems: 'flex-end',\n    paddingBottom: theme.spacing(1),\n    transition: 'height 0.35s ease-in-out',\n  },\n  title: {\n    whiteSpace: 'normal',\n  },\n}))\n\nconst ProductsGallery = ({ products, userRole }) => {\n  const classes = useStyles()\n\n  const theme = useTheme()\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'))\n  const isMedium = useMediaQuery(theme.breakpoints.down('md'))\n  const cols = isSmall ? 1 : isMedium ? 2 : 3\n\n  return (\n    <div>\n      <GridList cols={cols} spacing={8}>\n        {products?.length > 0 ? (\n          products.map((product) => {\n            return (\n              <GridListTile key={product.slug} className={classes.tile}>\n                <img src={product.photoUrl} alt={product.name} />\n\n                <GridListTileBar\n                  classes={{\n                    actionIcon: classes.actionIcon,\n                    title: classes.title,\n                  }}\n                  className={classes.tileBar}\n                  title={\n                    <div>\n                      <div className={classes.description}>\n                        {product.description}\n                      </div>\n                      <Tooltip\n                        arrow\n                        enterTouchDelay={0}\n                        placement='bottom-start'\n                        title={product.name}\n                      >\n                        <div className={classes.name}>{product.name}</div>\n                      </Tooltip>\n                    </div>\n                  }\n                  subtitle={\n                    <span className={classes.cost}>\n                      <CurrencyFormat\n                        value={product.cost}\n                        displayType={'text'}\n                        thousandSeparator={true}\n                        suffix={' pts'}\n                      />\n                    </span>\n                  }\n                  actionIcon={\n                    userRole === 'teacher' && (\n                      <>\n                        <ProductDialog product={product} />\n                        <DeleteProductDialog product={product} />\n                      </>\n                    )\n                  }\n                />\n              </GridListTile>\n            )\n          })\n        ) : (\n          <Typography>You have no products</Typography>\n        )}\n      </GridList>\n    </div>\n  )\n}\n\nexport default ProductsGallery\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from '../PageHeader'\nimport ProductDialog from './ProductDialog'\nimport ProductsGallery from './ProductsGallery'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  PRODUCTS_PAGE_LOADED,\n  PRODUCTS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.products,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: PRODUCTS_PAGE_LOADED, payload: agent.Products.getAll() }),\n  onUnload: () => dispatch({ type: PRODUCTS_PAGE_UNLOADED }),\n})\n\nconst Products = ({ currentUser, products, onLoad, onUnload, pageLoaded }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          currentUser.role === 'teacher' ? 'Manage Products' : 'View Products'\n        }\n      >\n        {currentUser.role === 'teacher' && <ProductDialog />}\n      </PageHeader>\n      {pageLoaded ? (\n        <Spinner message='Loading...' />\n      ) : (\n        <ProductsGallery products={products} userRole={currentUser.role} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherAccounts from './Teacher/TeacherAccounts'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport TeacherSongs from './Teacher/TeacherSongs'\nimport ManageTeachers from './Admin/ManageTeachers'\nimport Products from './Products/Products'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n            <ProtectedRoute path='/student/products' component={Products} />\n\n            <ProtectedRoute\n              path='/teacher/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/teacher/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/teacher/products' component={Products} />\n\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Grid, Link, Typography, makeStyles } from '@material-ui/core'\n\nimport profile from '../images/doc-may-profile.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    '& p:not(:last-of-type)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  profile: {\n    borderRadius: '100%',\n    boxShadow: theme.shadows[10],\n    float: 'right',\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    width: '120px',\n  },\n}))\n\nconst About = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid className={classes.page} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align='center' gutterBottom variant='h5'>\n          What is Chem Cash?\n        </Typography>\n        <img className={classes.profile} src={profile} />\n        <Typography variant='body2'>\n          Hi! I'm Joseph May, a high school chemistry teacher from Las Vegas.\n          While I love teaching chemistry, I also love programming for the web,\n          so why not combine the two.\n        </Typography>\n        <Typography variant='body2'>\n          Chem Cash is a points-based rewards system I use in my classroom. The\n          idea for this site came from a colleage who was inspired by one of his\n          own high school science teachers.\n        </Typography>\n        <Typography variant='body2'>\n          Students earn points in two ways: (1) through payouts based on their\n          assessment scores and (2) with bonus points earned for anything I deam\n          worthy of reward such as winning in-class competitions or going above\n          and beyond to help me or a student.\n        </Typography>\n        <Typography variant='body2'>\n          These points can be used to \"purchase\" goods such as school supplies,\n          electronics, and anything I can find for cheap or get for free.\n        </Typography>\n        <Typography variant='body2'>\n          However, the hottest-selling item is song requests. During work time\n          in my class I play music for my students. Each class period has its\n          own playlist and students can only add songs to the playlist by\n          spending their Chem Cash points.\n        </Typography>\n        <Typography variant='body2'>\n          I created this program to help manage all of the logistics behind this\n          system of incentives. While it can support multiple teachers, I am\n          running it on no-cost servers, so it was not intended to be a public\n          program. Although, if you are interested in learning more, please\n          reach out to me{' '}\n          <Link href='mailto:jwmay87+chemcash@gmail.com'>here</Link>.\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport Div100vh from 'react-div-100vh'\nimport {\n  Button,\n  Grid,\n  LinearProgress,\n  Paper,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport { ArrowBackIos, InfoOutlined } from '@material-ui/icons'\n\nimport About from '../About'\nimport Logo from '../Logo'\nimport LoginForm from './LoginForm'\nimport background from '../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  aboutLink: {\n    bottom: theme.spacing(2),\n    position: 'absolute',\n    right: theme.spacing(4),\n  },\n  loginLink: {\n    'marginBottom': theme.spacing(2),\n    '& > a': {\n      textDecoration: 'none',\n    },\n  },\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    maxHeight: '90%',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      maxHeight: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n  pathname: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst AboutLink = () => {\n  const classes = useStyles()\n  return (\n    <span className={classes.aboutLink}>\n      <Tooltip arrow enterTouchDelay={0} title='Learn more'>\n        <Link to='/about'>\n          <InfoOutlined color='secondary' fontSize='small' />\n        </Link>\n      </Tooltip>\n    </span>\n  )\n}\n\nconst LoginLink = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.loginLink}>\n      <Link to='/login'>\n        <Button color='secondary' startIcon={<ArrowBackIos />}>\n          Login\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nconst Login = ({ currentUser, inProgress, onUnload, pathname }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => onUnload()\n  }, [])\n\n  if (currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              {pathname.includes('about') ? (\n                <>\n                  <LoginLink />\n                  <About />\n                </>\n              ) : (\n                <>\n                  <AboutLink />\n                  <LoginForm />\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  SPOTIFY_REMOVE_AUTH,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    case SPOTIFY_REMOVE_AUTH:\n      return {\n        ...state,\n        settings: action.error\n          ? state.settings\n          : { ...state.settings, spotifyTokens: undefined },\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ALERT_CLOSED,\n  ASYNC_START,\n  COURSE_DIALOG_UNLOADED,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  DELETE_STUDENT,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  STUDENT_DIALOG_UNLOADED,\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  importCount: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId) {\n          courseCopy.students = [...course.students, action.payload.user].sort(\n            (a, b) => sortByLastName(a, b)\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ALERT_CLOSED:\n      return { ...state, importCount: null }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_STUDENT ||\n        action.subtype === ADD_COURSE ||\n        action.subtype === UPDATE_COURSE ||\n        action.subtype === UPDATE_STUDENT\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === COURSES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      } else if (action.subtype === IMPORT_STUDENTS) {\n        return { ...state, errors: null, importCount: null, inProgress: true }\n      }\n      break\n    case COURSE_DIALOG_UNLOADED:\n    case STUDENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case COURSES_PAGE_LOADED:\n    case STUDENT_SEARCH_LOADED:\n      return { ...state, courses: action.payload.courses, pageLoaded: false }\n    case COURSES_PAGE_UNLOADED:\n    case STUDENT_SEARCH_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter(\n              (course) => course.slug !== action.payload.course.slug\n            ),\n      }\n    case DELETE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.payload.course._id.toString()) {\n          courseCopy.students = course.students.filter(\n            (student) => student.username !== action.payload.user.username\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case IMPORT_STUDENTS:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload.course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) =>\n              course._id === action.payload.course._id\n                ? action.payload.course\n                : course\n            ),\n        errors: action.error ? action.payload.errors : null,\n        importCount: action.error ? null : action.payload.count,\n        inProgress: false,\n      }\n    case RESET_STUDENT_PASSWORD:\n      return { ...state }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      const updatedUser = action.payload.user\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students\n            .map((student) =>\n              student._id.toString() === updatedUser._id.toString()\n                ? updatedUser\n                : student\n            )\n            .sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_PRODUCT,\n  ADD_STUDENT,\n  ADD_TEACHER,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  DELETE_COURSE,\n  DELETE_PRODUCT,\n  DELETE_SONG_REQUEST,\n  DELETE_STUDENT,\n  DELETE_TASK,\n  DELETE_TEACHER,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  SUBMIT_SONG_REQUEST,\n  UPDATE_COURSE,\n  UPDATE_PRODUCT,\n  UPDATE_STUDENT,\n  UPDATE_TASK,\n  UPDATE_TEACHER,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n    case ADD_PRODUCT:\n    case ADD_STUDENT:\n    case ADD_TEACHER:\n    case ADD_TRANSACTION:\n    case ADD_TRANSACTIONS:\n    case DELETE_COURSE:\n    case DELETE_PRODUCT:\n    case DELETE_SONG_REQUEST:\n    case DELETE_STUDENT:\n    case DELETE_TASK:\n    case DELETE_TEACHER:\n    case DELETE_TRANSACTION:\n    case IMPORT_SCORES:\n    case IMPORT_STUDENTS:\n    case RESET_STUDENT_PASSWORD:\n    case SETTINGS_SAVED:\n    case SUBMIT_SONG_REQUEST:\n    case UPDATE_COURSE:\n    case UPDATE_PRODUCT:\n    case UPDATE_STUDENT:\n    case UPDATE_TASK:\n    case UPDATE_TEACHER:\n    case UPDATE_TRANSACTION:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_PRODUCT,\n  ASYNC_START,\n  PRODUCT_DIALOG_UNLOADED,\n  PRODUCTS_PAGE_LOADED,\n  PRODUCTS_PAGE_UNLOADED,\n  DELETE_PRODUCT,\n  UPDATE_PRODUCT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  products: [],\n  errors: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByCost = (a, b) => a.cost - b.cost\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        products: action.error\n          ? state.products\n          : [...state.products, action.payload.product].sort((a, b) =>\n              sortByCost(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_PRODUCT || action.subtype === UPDATE_PRODUCT) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === PRODUCTS_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      }\n      break\n    case DELETE_PRODUCT:\n      return {\n        ...state,\n        products: action.error\n          ? state.products\n          : state.products.filter(\n              (product) => product.slug !== action.payload.product.slug\n            ),\n      }\n    case PRODUCT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case PRODUCTS_PAGE_LOADED:\n      return {\n        ...state,\n        products: action.payload.products,\n        pageLoaded: false,\n      }\n    case PRODUCTS_PAGE_UNLOADED:\n      return defaultState\n    case UPDATE_PRODUCT:\n      return {\n        ...state,\n        products: action.error\n          ? state.products\n          : state.products\n              .map((product) =>\n                product._id === action.payload.product._id\n                  ? action.payload.product\n                  : product\n              )\n              .sort((a, b) => sortByCost(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import { unionBy } from 'lodash'\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  ACCOUNTS_PAGE_UNLOADED,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  ALERT_CLOSED,\n  ASYNC_START,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n  TRANSACTION_DIALOG_UNLOADED,\n  TRANSACTIONS_DIALOG_UNLOADED,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\nimport convertScore from '../converter'\n\nconst defaultState = {\n  conversions: null,\n  errors: null,\n  importSummary: null,\n  inProgress: false,\n  total: null,\n  transactions: null,\n}\n\nconst getTotals = (transactions, conversions) => {\n  const sumTransactions = (total, transaction) => total + transaction.amount\n  const sumScores = (total, score) => total + convertScore(score, conversions)\n\n  const bonuses = transactions.bonuses.reduce(sumTransactions, 0)\n  const purchases = transactions.purchases.reduce(sumTransactions, 0)\n  const scores = transactions.scores.reduce(sumScores, 0)\n\n  const balance = bonuses + purchases + scores\n\n  return { balance, bonuses, purchases, scores }\n}\n\nconst addScores = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.filter(\n      (score) => score.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) {\n      transactions.scores = unionBy(usersAdded, [...transactions.scores], '_id')\n    }\n\n    return transactions\n  }\n\n  return null\n}\n\nconst addTransaction = (added, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(added.type)) {\n      transactions[type] = [added, ...transactions[type]]\n    }\n  }\n  return transactions\n}\n\nconst addBulkTransaction = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.find(\n      (transaction) => transaction.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) return addTransaction(usersAdded, transactions)\n  }\n\n  return null\n}\n\nconst deleteTransaction = (deleted, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(deleted.type)) {\n      transactions[type] = transactions[type].filter(\n        (transaction) => transaction._id !== deleted._id\n      )\n    }\n  }\n  return transactions\n}\n\nconst updateTransaction = (updated, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(updated.type)) {\n      transactions[type] = transactions[type].map((transaction) =>\n        transaction._id === updated._id ? updated : transaction\n      )\n    }\n  }\n  return transactions\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_VIEW_LOADED:\n      return {\n        ...state,\n        conversions: action.error ? null : action.payload.scoreConverter,\n        total: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n        transactions: action.error ? null : action.payload.transactions,\n      }\n    case ACCOUNT_VIEW_UNLOADED:\n      return { ...state, conversions: null, total: null, transactions: null }\n    case ACCOUNTS_PAGE_UNLOADED:\n    case ALERT_CLOSED:\n      return { ...state, importSummary: null }\n    case ADD_TRANSACTION:\n      const addedTransactions = !action.error\n        ? addTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(addedTransactions, state.conversions),\n      }\n    case ADD_TRANSACTIONS:\n      const addedBulkTransactions = !action.error\n        ? addBulkTransaction(\n            action.payload.transactions,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : null\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedBulkTransactions,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(addedBulkTransactions, state.conversions),\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_TRANSACTION ||\n        action.subtype === ADD_TRANSACTIONS ||\n        action.subtype === DELETE_TRANSACTION ||\n        action.subtype === UPDATE_TRANSACTION\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === IMPORT_SCORES) {\n        return { ...state, errors: null, importSummary: null, inProgress: true }\n      }\n      break\n    case DELETE_TRANSACTION:\n      const deletedTransactions = !action.error\n        ? deleteTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : deletedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(deletedTransactions, state.conversions),\n      }\n    case IMPORT_SCORES:\n      const addedScores = !action.error\n        ? addScores(\n            action.payload.scores,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : null\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        importSummary: action.error ? null : action.payload.results,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedScores,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(addedScores, state.conversions),\n      }\n    case IMPORT_SCORES_DIALOG_UNLOADED:\n    case TRANSACTION_DIALOG_UNLOADED:\n    case TRANSACTIONS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TRANSACTION:\n      const updatedTransactions = !action.error\n        ? updateTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : updatedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(updatedTransactions, state.conversions),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SPOTIFY_LINKER_LOADED,\n  SPOTIFY_LINKER_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  spotifyAuthUrl: null,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SPOTIFY_LINKER_LOADED:\n      return { ...state, spotifyAuthUrl: action.payload.spotifyAuthUrl }\n    case SETTINGS_PAGE_UNLOADED:\n    case SPOTIFY_LINKER_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  TASKS_DIALOG_UNLOADED,\n  UPDATE_TASK,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  tasks: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === TASKS_DIALOG_LOADED) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.filter(\n              (task) => task.slug !== action.payload.task.slug\n            ),\n      }\n    case TASKS_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        tasks: action.error ? [] : action.payload.tasks,\n      }\n    case TASKS_DIALOG_UNLOADED:\n      return defaultState\n    case UPDATE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.map((task) =>\n              task.slug === action.payload.task.slug\n                ? action.payload.task\n                : task\n            ),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_TEACHER,\n  ASYNC_START,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [...state.teachers, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.payload.user.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_SONG_REQUEST,\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n  UPDATE_SONG_REQUEST,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  course: null,\n  courses: [],\n  courseSongs: [],\n  errors: null,\n  inProgress: false,\n  userSongs: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === UPDATE_SONG_REQUEST) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.songs = courseCopy.songs.filter(\n          (song) => song._id.toString() !== action.payload.song._id.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case SONG_REQUESTS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case SONGS_PAGE_UNLOADED:\n      return defaultState\n    case STUDENT_SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case TEACHER_SONGS_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses }\n    case UPDATE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.songs = courseCopy.songs.map((song) =>\n            song._id.toString() === action.payload.song._id.toString()\n              ? action.payload.song\n              : song\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport products from './reducers/products'\nimport scores from './reducers/scores'\nimport settings from './reducers/settings'\nimport tasks from './reducers/tasks'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    common,\n    courses,\n    nav,\n    notifier,\n    products,\n    scores,\n    settings,\n    tasks,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport ChemCashTheme from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={ChemCashTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/about' component={Login} />\n              <Route path='/' component={Home} />\n            </Switch>\n          </Suspense>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={ChemCashTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}