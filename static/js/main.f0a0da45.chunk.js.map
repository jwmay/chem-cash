{"version":3,"sources":["agent.js","images/chemistry-background.jpg","images/chem-cash-logo.png","images/songs-background.jpg","images/doc-may-profile.jpg","components/Theme.js","components/Logo.js","constants/actionTypes.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ListErrors.js","components/PageHeader.js","components/Settings.js","components/ActionButton.js","components/Teacher/ResetStudentPasswordAlert.js","components/Teacher/TransactionDialog.js","converter.js","components/AccountView.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/Alert.js","components/Teacher/StudentSearch.js","components/Teacher/CourseSelector.js","components/Teacher/StudentsTable.js","components/Teacher/BulkTransactionsDialog.js","components/Filedrop.js","components/Spinner.js","components/Teacher/ImportScoresDialog.js","components/Teacher/UpdateAccountsMenu.js","components/Teacher/TeacherAccounts.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteStudentAlert.js","components/Teacher/StudentDialog.js","components/Teacher/CourseStudentList.js","components/Teacher/DeleteCourseAlert.js","components/Teacher/ImportStudentsDialog.js","components/Teacher/TasksTable.js","components/Teacher/TasksDialog.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/Teacher/ProcessSongRequestsDialog.js","components/Teacher/TeacherSongs.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/Home.js","components/Loading.js","components/About.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","reducers/auth.js","reducers/common.js","reducers/courses.js","reducers/nav.js","reducers/notifier.js","reducers/scores.js","reducers/settings.js","reducers/tasks.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","encode","encodeURIComponent","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Courses","add","course","delete","slug","getAll","update","Scores","import","data","Settings","settings","Songs","id","forStudent","forTeacher","request","song","Spotify","getAuthUrl","removeAuth","Students","courseId","users","Tasks","task","Teachers","Transactions","transaction","addMany","transactions","_id","setToken","_token","module","exports","ChemCashTheme","createMuiTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","Logo","props","alt","src","logo","ASYNC_START","LOGIN","useStyles","makeStyles","theme","title","color","flexGrow","height","marginTop","spacing","marginRight","marginBottom","connect","state","navTabValue","nav","dispatch","onClickLogout","type","classes","currentUser","AppBar","position","Container","Toolbar","className","Typography","variant","align","charAt","toUpperCase","slice","Button","onClick","bottom","width","zIndex","path","router","location","pathname","common","onTabChange","tabValue","redirectTo","value","onLoad","onUnload","userRole","role","songsEnabled","songRequestEnabled","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","People","SupervisorAccount","wrapper","PageWrapper","children","NotFound","exact","component","to","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","severity","headerLeft","alignItems","display","headerRight","justifyContent","pageHeader","PageHeader","Grid","container","item","xs","paper","onSubmitForm","payload","all","agent","snackbar","message","inProgress","enableReinitialize","initialValues","defaultStudentPassword","songRequestPurchaseAmount","firstName","lastName","score100","scoreConverter","score90","score80","score70","score60","score50","validationSchema","Yup","typeError","onSubmit","form","a","userSettings","100","90","80","70","60","50","40","30","20","10","0","resetForm","Fab","disabled","SaveAlt","Paper","gutterBottom","TextField","name","fullWidth","Switch","actionButton","text","ActionButton","Tooltip","arrow","enterTouchDelay","action","IconButton","aria-label","ev","stopPropagation","onFocus","size","btnSize","student","useState","open","setOpen","handleClose","LockOpen","fontSize","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","scores","onAdd","typeTitle","onExit","useTheme","fullScreen","useMediaQuery","down","handleSubmitAdd","Grade","ShoppingCart","amount","description","required","convertScore","score","conversions","total","totalPoints","nonZeroTotal","percent","Math","round","floor","actions","balance","borderTop","fontStyle","textTransform","edit","backgroundColor","main","subtotal","typography","pxToRem","unit","AccountHeader","canEdit","doEdit","onEditClick","period","bonuses","purchases","Close","Edit","TransactionList","onDelete","onUpdate","setData","mapTransaction","createdAt","Date","toDateString","mappedData","mapped","bonus","purchase","mapScore","field","editable","defaultSort","columns","localization","emptyDataSourceMessage","editRow","deleteText","options","actionsColumnIndex","paging","toolbar","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","onRowDelete","index","splice","setDoEdit","button","dialog","backgroundImage","background","backgroundPosition","backgroundSize","input","inputLabel","handleSubmit","Add","artist","InputLabelProps","marginLeft","paddingLeft","status","DataRow","showStudent","TableRow","TableCell","statusDescription","InfoOutlined","CourseSongs","songs","length","colSpan","UserSongs","courseSongs","userSongs","mySongsOnly","setMySongsOnly","grid","FormControlLabel","control","Checkbox","checked","target","TableContainer","Table","TableHead","TableBody","Collapse","in","search","courses","setMappedData","students","flat","Autocomplete","autoHighlight","getOptionLabel","option","groupBy","noOptionsText","renderInput","params","placeholder","renderOption","inputValue","matches","match","parts","parse","part","style","fontWeight","highlight","shadows","boxShadow","light","onSelect","tabIndex","StudentsTable","fullName","nRowsSelected","onSelectionChange","rows","selection","up","curStudent","isClosed","isOpen","setCourse","setStudents","filedrop","grey","borderRadius","flexDirection","outline","transition","filedropActive","contrastText","filedropReject","Filedrop","onFiledrop","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","parsedFile","result","skip_empty_lines","readAsBinaryString","useDropzone","accept","multiple","onDropAccepted","getRootProps","getInputProps","isDragActive","isDragReject","minWidth","spinner","Spinner","CircularProgress","ScoreImportStepper","onDataChange","onShowImport","setFile","tasks","setTasks","handleTaskChange","tasksSelected","some","el","FormControl","FormGroup","onImport","ready","setReady","importData","selected","usernames","pop","filter","parsed","taskName","find","row","endsWith","push","UpdateAccountsMenu","menuAnchorEl","setMenuAnchorEl","menuSelection","setMenuSelection","handleMenuSelect","currentTarget","dataset","handleDialogClose","Money","Menu","anchorEl","Boolean","MenuItem","data-type","ListItemIcon","Publish","ListItemText","importSummary","setStudent","plural","qty","tasksCreated","scoresImported","scoresUpdated","handleClickOpen","handleSubmitUpdate","Delete","PersonAdd","borderBottomColor","rowHeader","studentUsername","StudentListRow","Chip","CourseStudentList","column","trim","element","minHeight","Assignment","courseDetails","courseHeader","coursePeriod","courseTitle","CourseList","expanded","setExpanded","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","Avatar","ExpansionPanelDetails","importCount","pageLoaded","maxWidth","songInfo","statusButton","studentInfo","borderTopColor","borderTopStyle","borderTopWidth","paddingTop","setSong","setStatus","setStatusDescription","handleStatusButtonClick","handleStatusDescriptionChange","nextSong","getNextSong","PlaylistAddCheck","ButtonGroup","href","getSpotifySearchUrl","ThumbUp","ThumbDown","RadioGroup","Radio","AlertTitle","purchasedBy","render","rowData","renderType","lookup","approved","pending","rejected","removed","grouping","dataDelete","teachers","teacher","teacherDetails","teacherHeader","teacherUsername","teacherName","TeacherList","StudentAccount","StudentSongs","TeacherAccounts","TeacherCourses","TeacherSongs","ManageTeachers","flexFlow","overflowY","Loading","elevation","page","profile","float","About","Link","auth","submitForm","aboutLink","right","loginLink","textDecoration","margin","maxHeight","progress","left","top","AboutLink","LoginLink","startIcon","ArrowBackIos","LinearProgress","includes","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","React","createRef","onSnackbarDismiss","closeSnackbar","maxSnack","ref","subtype","error","defaultState","appName","viewChangeCounter","appLoaded","spotifyTokens","undefined","sortByLastName","b","localeCompare","sortByPeriod","sort","courseCopy","toString","count","updatedUser","getTotals","sumTransactions","reduce","addScores","added","curUser","curUserId","usersAdded","unionBy","addTransaction","startsWith","addBulkTransaction","deleteTransaction","deleted","updateTransaction","updated","addedTransactions","addedBulkTransactions","deletedTransactions","addedScores","results","updatedTransactions","spotifyAuthUrl","songsByUser","songsByCourse","promiseMiddleware","store","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.f0a0da45.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://chem-cash.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst encode = encodeURIComponent\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  del: (url) =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  getAll: () => requests.get('/courses'),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Scores = {\n  getAll: (username) => requests.get(`/scores?username=${username}`),\n  import: (data) => requests.post('/scores/import', { data }),\n}\n\nconst Settings = {\n  // get: () => requests.get('/user/settings'),\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Songs = {\n  delete: (id) => requests.del(`/songs/${id}`),\n  forStudent: () => requests.get('/songs/student'),\n  forTeacher: () => requests.get('/songs/teacher'),\n  request: (song) => requests.post('/songs', { song }),\n  update: (song) => requests.put(`/songs/${song.id}`, { song }),\n}\n\nconst Spotify = {\n  getAuthUrl: () => requests.get('/spotify/auth'),\n  removeAuth: () => requests.del('/spotify/auth'),\n}\n\nconst Students = {\n  add: (user, courseId) =>\n    requests.post(`/users?courseId=${encode(courseId)}`, { user }),\n  delete: (user) => requests.del(`/users/student/${user.username}`),\n  import: (users, courseId) =>\n    requests.post(`/users/import?courseId=${encode(courseId)}`, { users }),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Tasks = {\n  getAll: (courseId) => requests.get(`/tasks?courseId=${courseId}`),\n  delete: (task) => requests.del(`/tasks/${task.slug}`),\n  update: (task) => requests.put(`/tasks/${task.slug}`, { task }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (user) => requests.del(`/users/teacher/${user.username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Transactions = {\n  add: (transaction) => requests.post('/transactions', { transaction }),\n  addMany: (transactions) =>\n    requests.post('/transactions/bulk', { transactions }),\n  delete: (transaction) => requests.del(`/transactions/${transaction._id}`),\n  update: (transaction) =>\n    requests.put(`/transactions/${transaction._id}`, { transaction }),\n}\n\nexport default {\n  Auth,\n  Courses,\n  Scores,\n  Settings,\n  Songs,\n  Spotify,\n  Students,\n  Tasks,\n  Teachers,\n  Transactions,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/chemistry-background.11d1d297.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.30174016.png\";","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doc-may-profile.f927335d.jpg\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = createMuiTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n})\n\nexport default ChemCashTheme\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const DELETE_SONG_REQUEST = 'DELETE_SONG_REQUEST'\nexport const SONG_REQUESTS_DIALOG_UNLOADED = 'SONG_REQUESTS_DIALOG_UNLOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const STUDENT_SONGS_PAGE_LOADED = 'STUDENT_SONGS_PAGE_LOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\nexport const TEACHER_SONGS_PAGE_LOADED = 'TEACHER_SONGS_PAGE_LOADED'\nexport const UPDATE_SONG_REQUEST = 'UPDATE_SONG_REQUEST'\n\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const COURSE_DIALOG_UNLOADED = 'COURSE_DIALOG_UNLOADED'\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const DELETE_COURSE = 'DELETE_COURSE'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\n\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const DELETE_STUDENT = 'DELETE_STUDENT'\nexport const IMPORT_STUDENTS = 'IMPORT_STUDENTS'\nexport const RESET_STUDENT_PASSWORD = 'RESET_STUDENT_PASSWORD'\nexport const STUDENT_DIALOG_UNLOADED = 'STUDENT_DIALOG_UNLOADED'\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT'\n\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\n\nexport const SPOTIFY_REMOVE_AUTH = 'SPOTIFY_REMOVE_AUTH'\nexport const SPOTIFY_LINKER_LOADED = 'SPOTIFY_LINKER_LOADED'\nexport const SPOTIFY_LINKER_UNLOADED = 'SPOTIFY_LINKER_UNLOADED'\n\nexport const IMPORT_SCORES = 'IMPORT_SCORES'\nexport const IMPORT_SCORES_DIALOG_UNLOADED = 'IMPORT_SCORES_DIALOG_UNLOADED'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const TASKS_DIALOG_LOADED = 'TASKS_DIALOG_LOADED'\nexport const TASKS_DIALOG_UNLOADED = 'TASKS_DIALOG_UNLOADED'\nexport const UPDATE_TASK = 'UPDATE_TASK'\n\nexport const ACCOUNT_VIEW_LOADED = 'ACCOUNT_VIEW_LOADED'\nexport const ACCOUNT_VIEW_UNLOADED = 'ACCOUNT_VIEW_UNLOADED'\nexport const ACCOUNTS_PAGE_UNLOADED = 'ACCOUNTS_PAGE_UNLOADED'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const ADD_TRANSACTIONS = 'ADD_TRANSACTIONS'\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION'\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION'\nexport const TRANSACTION_DIALOG_UNLOADED = 'TRANSACTION_DIALOG_UNLOADED'\nexport const TRANSACTIONS_DIALOG_UNLOADED = 'TRANSACTIONS_DIALOG_UNLOADED'\n\nexport const STUDENT_SEARCH_LOADED = 'STUDENT_SEARCH_LOADED'\nexport const STUDENT_SEARCH_UNLOADED = 'STUDENT_SEARCH_UNLOADED'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  People,\n  QueueMusic,\n  Settings,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  path: state.router.location.pathname,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n  const songsEnabled = props.settings.songRequestEnabled\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ?? (userRole === 'student' ? 'account' : 'accounts')\n    const redirectTo = `/${userRole}/${tabValue}`\n    props.onLoad(tabValue, redirectTo)\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        {songsEnabled && (\n          <BottomNavigationAction\n            label='Songs'\n            icon={<QueueMusic />}\n            value='songs'\n          />\n        )}\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalAtm />}\n        value='accounts'\n      />\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      {songsEnabled && (\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n      )}\n      {userRole === 'admin' && (\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n      )}\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  headerLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  headerRight: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  pageHeader: {\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = ({ children, title }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={2} className={classes.pageHeader}>\n      <Grid item xs={12} md={6} className={classes.headerLeft}>\n        <Typography variant='h4'>{title}</Typography>\n      </Grid>\n      <Grid item xs={12} md={6} className={classes.headerRight}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PageHeader\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { Switch, TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\n// import SpotifyLinker from './Teacher/SpotifyLinker'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        defaultStudentPassword: settings?.defaultStudentPassword || '',\n        songRequestEnabled: settings?.songRequestEnabled || false,\n        songRequestPurchaseAmount: settings?.songRequestPurchaseAmount || 0,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n        score100: settings?.scoreConverter?.[100] || 1200,\n        score90: settings?.scoreConverter?.[90] || 1000,\n        score80: settings?.scoreConverter?.[80] || 800,\n        score70: settings?.scoreConverter?.[70] || 600,\n        score60: settings?.scoreConverter?.[60] || 0,\n        score50: settings?.scoreConverter?.[50] || 0,\n      }}\n      validationSchema={Yup.object({\n        defaultStudentPassword: Yup.string(),\n        songRequestEnabled: Yup.boolean(),\n        songRequestPurchaseAmount: Yup.number().typeError('Numbers only'),\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n        score100: Yup.number().typeError('Numbers only'),\n        score90: Yup.number().typeError('Numbers only'),\n        score80: Yup.number().typeError('Numbers only'),\n        score70: Yup.number().typeError('Numbers only'),\n        score60: Yup.number().typeError('Numbers only'),\n        score50: Yup.number().typeError('Numbers only'),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password && currentUser.role !== 'student')\n          delete userSettings.password\n\n        if (currentUser.role !== 'student')\n          userSettings.scoreConverter = {\n            100: values.score100,\n            90: values.score90,\n            80: values.score80,\n            70: values.score70,\n            60: values.score60,\n            50: values.score50,\n            40: 0,\n            30: 0,\n            20: 0,\n            10: 0,\n            0: 0,\n          }\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={errors} />\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Song Requests\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Song request purchase amount'\n                  name='songRequestPurchaseAmount'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <label>\n                  <Field\n                    component={Switch}\n                    label='Allow song requests'\n                    name='songRequestEnabled'\n                    type='checkbox'\n                  />\n                  Allow song purchases\n                </label>\n              </Grid>\n              {/* <Grid item xs={12} md={6}>\n                <SpotifyLinker />\n              </Grid> */}\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Student Accounts\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Default student password'\n                  name='defaultStudentPassword'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Score Conversions\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='100% and up'\n                  name='score100'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='90% and up'\n                  name='score90'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='80% and up'\n                  name='score80'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='70% and up'\n                  name='score70'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='60% and up'\n                  name='score60'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='50% and up'\n                  name='score50'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Account Details\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='First name'\n                  name='firstName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Last name'\n                  name='lastName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip arrow enterTouchDelay={0} title={props.action}>\n      <IconButton\n        aria-label={props.action}\n        className={`${classes.actionButton} ${props.className}`}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { LockOpen } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { RESET_STUDENT_PASSWORD } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  defaultStudentPassword: state.common.settings.defaultStudentPassword,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (user) =>\n    dispatch({\n      type: RESET_STUDENT_PASSWORD,\n      payload: agent.Students.update(user),\n      snackbar: { message: 'Password reset', variant: 'success' },\n    }),\n})\n\nconst ResetStudentPasswordAlert = ({\n  btnSize,\n  defaultStudentPassword,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    const user = { ...student, password: defaultStudentPassword }\n    onSubmit(user)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Reset password'\n        onClick={handleClickOpen}\n        size={btnSize ?? 'small'}\n      >\n        <LockOpen fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset Password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you want to reset{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            's password to <strong>{defaultStudentPassword}</strong>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='primary'\n            variant='contained'\n            autoFocus\n          >\n            Reset\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetStudentPasswordAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Grade, ShoppingCart } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n  TRANSACTION_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transaction) =>\n    dispatch({\n      type: ADD_TRANSACTION,\n      payload: agent.Transactions.add(transaction),\n      snackbar: {\n        message: `${transaction.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTION_DIALOG_UNLOADED }),\n})\n\nconst TransactionDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  student,\n  transaction,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, student, type: type.toLowerCase(), typeTitle: type })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    // onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton\n        action={`Add ${type.toLowerCase()}`}\n        onClick={handleClickOpen}\n      >\n        {type === 'Bonus' && <Grade />}\n        {type === 'Purchase' && <ShoppingCart />}\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            amount: transaction?.amount || '',\n            description: transaction?.description || '',\n          }}\n          validationSchema={Yup.object({\n            amount: Yup.number().typeError('Numbers only').required('Required'),\n            description: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            transaction ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {`${transaction ? 'Edit' : 'Add'} ${type}`}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={transaction ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {transaction\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDialog)\n","// Convert the given score to points using the given conversions\nconst convertScore = (score, conversions) => {\n  const total = score.task.totalPoints\n  const nonZeroTotal = total === 0 ? 1 : total\n  const percent = Math.round((score.value / nonZeroTotal) * 100)\n  const conversionKey = Math.floor((percent > 100 ? 100 : percent) / 10) * 10\n  return conversions[conversionKey]\n}\n\nexport default convertScore\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { Close, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../components/ActionButton'\nimport ResetStudentPasswordAlert from './Teacher/ResetStudentPasswordAlert'\nimport TransactionDialog from './Teacher/TransactionDialog'\nimport agent from '../agent'\nimport convertScore from '../converter'\n\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  balance: {\n    'textAlign': 'center',\n    '& > h6': {\n      borderTop: '1px solid #ccc',\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  edit: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  subtotal: {\n    'position': 'relative',\n    'textAlign': 'center',\n    '& > p': {\n      position: 'relative',\n      bottom: -theme.spacing(1),\n    },\n    '& > h6': {\n      fontSize: theme.typography.pxToRem(12),\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  unit: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  conversions: state.scores.conversions,\n  total: state.scores.total,\n  transactions: state.scores.transactions,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (transaction) =>\n    dispatch({\n      type: DELETE_TRANSACTION,\n      payload: agent.Transactions.delete(transaction),\n      snackbar: { message: 'Transaction deleted', variant: 'success' },\n    }),\n  onLoad: (username) =>\n    dispatch({\n      type: ACCOUNT_VIEW_LOADED,\n      payload: agent.Scores.getAll(username),\n    }),\n  onUnload: () => dispatch({ type: ACCOUNT_VIEW_UNLOADED }),\n  onUpdate: (transaction) =>\n    dispatch({\n      type: UPDATE_TRANSACTION,\n      payload: agent.Transactions.update(transaction),\n      snackbar: { message: 'Transaction updated', variant: 'success' },\n    }),\n})\n\nconst AccountHeader = ({ canEdit, doEdit, onEditClick, student, total }) => {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <Typography gutterBottom variant='h5'>\n            {student.firstName} {student.lastName}\n          </Typography>\n          {student.course && (\n            <Typography color='textSecondary' variant='subtitle1'>\n              {student.course} &middot; Period {student.period}\n            </Typography>\n          )}\n        </Grid>\n        <Grid item xs={12} md={4} container>\n          <Grid item xs={12} className={classes.balance}>\n            <Typography\n              color={total?.balance >= 0 ? 'primary' : 'secondary'}\n              variant='h4'\n            >\n              {total?.balance} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='textSecondary' variant='subtitle2'>\n              Balance\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.bonuses} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Bonuses\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='secondary' variant='body1'>\n              {total?.purchases} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='secondary' variant='subtitle2'>\n              Purchases\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.scores} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Assessments\n            </Typography>\n          </Grid>\n        </Grid>\n        {canEdit && (\n          <Grid item xs={12} md={4} className={classes.actions}>\n            <TransactionDialog student={student} type='Bonus' />\n            <TransactionDialog student={student} type='Purchase' />\n            <ActionButton\n              action={doEdit ? 'Finish editing' : 'Edit transactions'}\n              className={doEdit && classes.edit}\n              onClick={onEditClick}\n            >\n              {doEdit ? <Close /> : <Edit />}\n            </ActionButton>\n            <ResetStudentPasswordAlert btnSize='medium' student={student} />\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  )\n}\n\nconst TransactionList = ({\n  conversions,\n  doEdit,\n  onDelete,\n  onUpdate,\n  transactions,\n}) => {\n  const [data, setData] = useState([])\n\n  const mapTransaction = (transaction) => ({\n    amount: transaction.amount,\n    createdAt: new Date(transaction.createdAt).toDateString(),\n    description: transaction.description,\n    type: transaction.type,\n    _id: transaction._id,\n  })\n\n  const mapScore = (score) => ({\n    amount: convertScore(score, conversions),\n    createdAt: new Date(score.createdAt).toDateString(),\n    description: score.task.title,\n    type: 'assessment',\n  })\n\n  // @todo: sort by date?\n  const mappedData = (transactions) => {\n    const { bonuses, purchases, scores } = transactions\n    const mapped = [\n      ...bonuses.map((bonus) => mapTransaction(bonus)),\n      ...purchases.map((purchase) => mapTransaction(purchase)),\n    ]\n    if (doEdit) {\n      return mapped\n    } else {\n      return [...mapped, ...scores.map((score) => mapScore(score))]\n    }\n  }\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      defaultSort: 'desc',\n    },\n    { title: 'Description', field: 'description' },\n    { title: 'Amount', field: 'amount' },\n    { title: 'Type', field: 'type', editable: 'never' },\n  ])\n\n  useEffect(() => {\n    transactions && setData(mappedData(transactions))\n  }, [doEdit, transactions])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No activity to report',\n          editRow: {\n            deleteText: 'Delete this transaction?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={\n        doEdit\n          ? {\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  const dataUpdate = [...data]\n                  const index = oldData.tableData.id\n                  dataUpdate[index] = newData\n                  setData([...dataUpdate])\n                  onUpdate(newData)\n                  resolve()\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  const newData = [...data]\n                  const index = oldData.tableData.id\n                  newData.splice(index, 1)\n                  setData([...newData])\n                  onDelete(oldData)\n                  resolve()\n                }),\n            }\n          : {}\n      }\n    />\n  )\n}\n\nconst AccountView = ({\n  canEdit,\n  conversions,\n  onDelete,\n  onLoad,\n  onUnload,\n  onUpdate,\n  student,\n  total,\n  transactions,\n}) => {\n  const [doEdit, setDoEdit] = useState(false)\n\n  const handleEditClick = () => {\n    setDoEdit(!doEdit)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    onLoad(student.username)\n  }, [student])\n\n  return (\n    <>\n      {transactions && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountHeader\n              canEdit={canEdit}\n              doEdit={doEdit}\n              onEditClick={handleEditClick}\n              student={student}\n              total={total}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TransactionList\n              conversions={conversions}\n              doEdit={doEdit}\n              onDelete={onDelete}\n              onUpdate={onUpdate}\n              transactions={transactions}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountView)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AccountView from '../AccountView'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst StudentAccount = ({ currentUser }) => {\n  return <AccountView student={currentUser} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(StudentAccount)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport agent from '../../agent'\nimport background from './../../images/songs-background.jpg'\n\nimport { SUBMIT_SONG_REQUEST } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n})\n\nconst SongRequestDialog = ({ onSubmit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit(values)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  autoFocus\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(SongRequestDialog)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  paper: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n  status: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload) => dispatch({ type: STUDENT_SONGS_PAGE_LOADED, payload }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst DataRow = ({ song, showStudent }) => {\n  const classes = useStyles()\n\n  return (\n    <TableRow>\n      <TableCell>{new Date(song.createdAt).toDateString()}</TableCell>\n      <TableCell>{song.title}</TableCell>\n      <TableCell>{song.artist}</TableCell>\n      {showStudent && (\n        <TableCell>\n          {song.student.firstName} {song.student.lastName}\n        </TableCell>\n      )}\n      <TableCell>\n        <span className={classes.status}>\n          {song.statusDescription ? (\n            <>\n              {song.status}\n              <Tooltip\n                arrow\n                color='primary'\n                enterTouchDelay={0}\n                title={song.statusDescription}\n              >\n                <InfoOutlined className={classes.icon} />\n              </Tooltip>\n            </>\n          ) : (\n            song.status\n          )}\n        </span>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst CourseSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={true} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='5'>\n        <Typography align='center'>\n          No songs have been requested for your period\n        </Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst UserSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={false} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='4'>\n        <Typography align='center'>You have not requested any songs</Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst StudentSongs = ({\n  course,\n  courseSongs,\n  currentUser,\n  onLoad,\n  onUnload,\n  userSongs,\n}) => {\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  const classes = useStyles()\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  useEffect(() => {\n    onLoad(agent.Songs.forStudent())\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          'Songs for ' +\n          (mySongsOnly ? currentUser.firstName : 'Period ' + course.period)\n        }\n      >\n        <SongRequestDialog />\n      </PageHeader>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Request Date</TableCell>\n              <TableCell>Song Title</TableCell>\n              <TableCell>Song Artist</TableCell>\n              {!mySongsOnly && <TableCell>Purchased by</TableCell>}\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mySongsOnly ? (\n              <UserSongs songs={userSongs} />\n            ) : (\n              <CourseSongs songs={courseSongs} />\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Collapse, IconButton, makeStyles } from '@material-ui/core'\nimport { Alert as MuiAlert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\n\nimport { ALERT_CLOSED } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch({ type: ALERT_CLOSED }),\n})\n\nconst Alert = ({ children, onClose, severity, variant }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div className={classes.alert}>\n      <Collapse in={open}>\n        <MuiAlert\n          action={\n            <IconButton\n              aria-label='close'\n              color='inherit'\n              size='small'\n              onClick={() => {\n                setOpen(false)\n                onClose()\n              }}\n            >\n              <Close fontSize='inherit' />\n            </IconButton>\n          }\n          severity={severity || 'info'}\n          variant={variant || 'outlined'}\n        >\n          {children}\n        </MuiAlert>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Alert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Paper, TextField, makeStyles } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: STUDENT_SEARCH_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: STUDENT_SEARCH_UNLOADED }),\n})\n\nconst StudentSearch = ({ courses, onChange, onLoad, onUnload }) => {\n  const [mappedData, setMappedData] = useState([])\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const mapped = courses\n      .map((course) =>\n        course.students.map((student) => ({\n          ...student,\n          course: course.name,\n          period: course.period,\n          name: `${student.firstName} ${student.lastName}`,\n        }))\n      )\n      .flat()\n    setMappedData(mapped)\n  }, [courses])\n\n  return (\n    <Paper className={classes.search}>\n      <Autocomplete\n        autoHighlight\n        getOptionLabel={(option) => option.name}\n        groupBy={(option) => `${option.course} | Period ${option.period}`}\n        noOptionsText='No students have been added'\n        onChange={(ev, value) => onChange(value)}\n        options={mappedData}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Student'\n            placeholder='Type or select a name'\n          />\n        )}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n    </Paper>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSearch)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nconst useStyles = makeStyles((theme) => ({\n  courses: {\n    '& div': {\n      'boxShadow': theme.shadows[4],\n      'cursor': 'pointer',\n      'marginBottom': theme.spacing(1),\n      'padding': `${theme.spacing(3)}px ${theme.spacing(4)}px`,\n      'transition': 'all 0.15s ease-in-out',\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: theme.shadows[1],\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[1],\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst CourseSelector = ({ courses, onSelect }) => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Typography gutterBottom variant='h6'>\n        Select a course\n      </Typography>\n      {courses.length > 0 ? (\n        <div className={classes.courses}>\n          {courses.map((course) => (\n            <div\n              key={course.slug}\n              onClick={() => {\n                onSelect(course)\n              }}\n              tabIndex='0'\n            >\n              <Typography variant='body1'>\n                <b>{course.name}</b> &middot; Period {course.period}\n              </Typography>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <Alert severity='info'>\n          You must create a course before continuing\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(CourseSelector)\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table'\n\nconst StudentsTable = ({ course, onSelect }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = course.students.map((student) => ({\n    username: student.username,\n    firstName: student.firstName,\n    lastName: student.lastName,\n    fullName: `${student.firstName} ${student.lastName}`,\n    role: student.role,\n    _id: student._id,\n  }))\n\n  const [columns] = useState([{ title: 'Students', field: 'fullName' }])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [course])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No students found for this course',\n        },\n        toolbar: {\n          nRowsSelected: '{0} student(s) selected',\n        },\n      }}\n      onSelectionChange={(rows) => onSelect(rows)}\n      options={{ paging: false, selection: true, toolbar: true }}\n      title={`${course.name} | Period ${course.period}`}\n    />\n  )\n}\n\nexport default StudentsTable\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport ListErrors from '../ListErrors'\nimport StudentsTable from './StudentsTable'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTIONS,\n  TRANSACTIONS_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(80),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transactions, curStudent) =>\n    dispatch({\n      type: ADD_TRANSACTIONS,\n      payload: agent.Transactions.addMany(transactions),\n      curStudent,\n      snackbar: {\n        message: `${transactions.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTIONS_DIALOG_UNLOADED }),\n})\n\nconst BulkTransactionsDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onAdd,\n  onExit,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [course, setCourse] = useState(null)\n  const [students, setStudents] = useState([])\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    setCourse(null)\n    isClosed()\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd(\n      {\n        ...values,\n        students: students.map((student) => student._id),\n        type: type === 'Bonuses' ? 'bonus' : 'purchase',\n        typeTitle: type,\n      },\n      curStudent\n    )\n  }\n\n  const handleCourseSelect = (slug) => {\n    setCourse(slug)\n  }\n\n  const handleStudentSelect = (rows) => {\n    setStudents(rows)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <Formik\n        initialValues={{\n          amount: '',\n          description: '',\n        }}\n        validationSchema={Yup.object({\n          amount: Yup.number().typeError('Numbers only').required('Required'),\n          description: Yup.string().required('Required'),\n        })}\n        onSubmit={async (values) => {\n          handleSubmitAdd(values)\n        }}\n      >\n        <Form>\n          <DialogTitle>Add {type}</DialogTitle>\n          <DialogContent>\n            <ListErrors errors={errors} />\n            {!course && <CourseSelector onSelect={handleCourseSelect} />}\n            {course && (\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <StudentsTable\n                    course={course}\n                    onSelect={handleStudentSelect}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              disabled={inProgress || students.length === 0}\n              color='primary'\n              type='submit'\n              variant='contained'\n            >\n              {inProgress ? 'Adding...' : 'Add'}\n            </Button>\n            <Button\n              disabled={inProgress}\n              onClick={handleClose}\n              variant='contained'\n            >\n              Cancel\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BulkTransactionsDialog)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport parse from 'csv-parse/lib/sync'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  filedrop: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[300],\n    borderRadius: theme.spacing(1),\n    color: theme.palette.grey[600],\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: '20px',\n    transition: 'all 0.25s ease-in-out',\n  },\n  filedropActive: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  filedropReject: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nfunction Filedrop({ onFiledrop }) {\n  const classes = useStyles()\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Due to {multiple: false} in useDropzone(), only one file will be received\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const parsedFile = parse(reader.result, {\n          columns: true,\n          skip_empty_lines: true,\n        })\n        onFiledrop(parsedFile)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    accept: 'text/csv, text/plain',\n    multiple: false,\n    onDropAccepted: onDrop,\n  })\n\n  return (\n    <div\n      {...getRootProps({\n        className: `${classes.filedrop} ${\n          isDragActive ? classes.filedropActive : ''\n        } ${isDragReject ? classes.filedropReject : ''}`,\n      })}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive && (\n        <Typography>\n          Drop a .csv file here or click to select a .csv file\n        </Typography>\n      )}\n      {isDragActive && !isDragReject && (\n        <Typography>Drop .csv file here</Typography>\n      )}\n      {isDragReject && <Typography>File type not accepted</Typography>}\n    </div>\n  )\n}\n\nexport default Filedrop\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Working...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport Filedrop from '../Filedrop'\nimport ListErrors from '../ListErrors'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onImport: (data, curStudent) =>\n    dispatch({\n      type: IMPORT_SCORES,\n      payload: agent.Scores.import(data),\n      curStudent,\n      snackbar: { message: 'Scores imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: IMPORT_SCORES_DIALOG_UNLOADED }),\n})\n\nconst ScoreImportStepper = ({ onDataChange, onShowImport }) => {\n  const [file, setFile] = useState(null)\n  const [course, setCourse] = useState(null)\n  const [tasks, setTasks] = useState(null)\n\n  const handleCourseSelect = (course) => {\n    setCourse(course)\n  }\n\n  const handleFiledrop = (file) => {\n    const tasks = {}\n    Object.keys(file[0])\n      .slice(1)\n      .forEach((task) => {\n        tasks[task] = false\n      })\n    setFile(file)\n    setTasks(tasks)\n  }\n\n  const handleTaskChange = (ev) => {\n    setTasks({ ...tasks, [ev.target.name]: ev.target.checked })\n  }\n\n  // Determine if any tasks have been checked/selected\n  useEffect(() => {\n    const tasksSelected = tasks\n      ? Object.values(tasks).some((el) => el === true)\n      : false\n    onShowImport(tasksSelected)\n  }, [tasks])\n\n  // Keep the imported data object current\n  useEffect(() => {\n    onDataChange({ file, course, tasks })\n  }, [file, course, tasks])\n\n  return (\n    <>\n      {!file && !course && !tasks && (\n        <CourseSelector onSelect={handleCourseSelect} />\n      )}\n\n      {!file && course && !tasks && (\n        <div>\n          <Typography gutterBottom>\n            Scores must be imported from a .csv file exported from Infinite\n            Campus\n          </Typography>\n          <Filedrop onFiledrop={handleFiledrop} />\n        </div>\n      )}\n\n      {file &&\n      course &&\n      tasks && ( // @todo: use material-table here?\n          <FormControl component='fieldset'>\n            <Typography gutterBottom variant='body1'>\n              Select the assignments to import\n            </Typography>\n            <FormGroup>\n              {Object.keys(tasks).map((task) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={tasks[task]}\n                      onChange={handleTaskChange}\n                      name={task}\n                    />\n                  }\n                  key={task}\n                  label={task}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        )}\n    </>\n  )\n}\n\nconst ImportScoresDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onExit,\n  onImport,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [ready, setReady] = useState(false)\n  const [data, setData] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    isClosed()\n  }\n\n  const handleDataChange = (importData) => {\n    setData(importData)\n  }\n\n  const handleShowImport = (selected) => {\n    setReady(selected)\n  }\n\n  const handleClickImport = () => {\n    // Get student usernames (student numbers)\n    const usernames = data.file\n      .map(\n        (student, index) =>\n          index > 1 && student['Assignment Name'].split('#').pop()\n      )\n      .filter((username) => username !== false)\n\n    // Prepare data to send to server\n    const parsed = { course: data.course, tasks: [] }\n    for (const taskName in data.tasks) {\n      const selected = data.tasks[taskName]\n      if (selected) {\n        const task = {\n          title: taskName,\n          totalPoints: data.file[1][taskName],\n          scores: {},\n        }\n\n        for (const username of usernames) {\n          const student = data.file.find((row) =>\n            row['Assignment Name'].endsWith(username)\n          )\n          if (student) task.scores[username] = student[taskName]\n        }\n\n        parsed.tasks.push(task)\n      }\n    }\n\n    onImport(parsed, curStudent)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <DialogTitle>Import Scores</DialogTitle>\n      <DialogContent>\n        <ListErrors errors={errors} />\n        {inProgress ? (\n          <Spinner message='Importing...' />\n        ) : (\n          <ScoreImportStepper\n            onDataChange={handleDataChange}\n            onShowImport={handleShowImport}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        {ready && (\n          <Button\n            color='primary'\n            disabled={inProgress}\n            onClick={handleClickImport}\n            variant='contained'\n          >\n            {inProgress ? 'Importing...' : 'Import'}\n          </Button>\n        )}\n        <Button disabled={inProgress} onClick={handleClose} variant='contained'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportScoresDialog)\n","import React, { useState } from 'react'\nimport {\n  Fab,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core'\nimport { Grade, Money, Publish, ShoppingCart } from '@material-ui/icons'\n\nimport BulkTransactionsDialog from './BulkTransactionsDialog'\nimport ImportScoresDialog from '../Teacher/ImportScoresDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst UpdateAccountsMenu = ({ curStudent }) => {\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null)\n  const [menuSelection, setMenuSelection] = useState(null)\n\n  const classes = useStyles()\n\n  const handleMenuOpen = (ev) => {\n    setMenuAnchorEl(ev.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null)\n  }\n\n  const handleMenuSelect = (ev) => {\n    setMenuSelection(ev.currentTarget.dataset.type)\n    setMenuAnchorEl(null)\n  }\n\n  const handleDialogClose = () => {\n    setMenuSelection(null)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleMenuOpen} variant='extended'>\n        <Money className={classes.icon} />\n        Update Accounts\n      </Fab>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem data-type='scores' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Publish />\n          </ListItemIcon>\n          <ListItemText>Import scores</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='bonuses' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Grade />\n          </ListItemIcon>\n          <ListItemText>Add Bonuses</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='purchases' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <ShoppingCart />\n          </ListItemIcon>\n          <ListItemText>Add Purchases</ListItemText>\n        </MenuItem>\n      </Menu>\n      <ImportScoresDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'scores'}\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'bonuses'}\n        type='Bonuses'\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'purchases'}\n        type='Purchases'\n      />\n    </>\n  )\n}\n\nexport default UpdateAccountsMenu\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport AccountView from '../AccountView'\nimport Alert from '../Alert'\nimport PageHeader from '../PageHeader'\nimport StudentSearch from './StudentSearch'\nimport UpdateAccountsMenu from './UpdateAccountsMenu'\n\nimport { ACCOUNTS_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  importSummary: state.scores.importSummary,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: ACCOUNTS_PAGE_UNLOADED }),\n})\n\nconst TeacherAccounts = ({ importSummary, onUnload }) => {\n  const [student, setStudent] = useState(null)\n\n  const plural = (qty, unit) => `${qty} ${unit}${qty !== 1 ? 's' : ''}`\n\n  const handleStudentSelect = (student) => {\n    setStudent(student)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Accounts'>\n        <UpdateAccountsMenu curStudent={student} />\n      </PageHeader>\n\n      {importSummary && (\n        <Alert>\n          Created {plural(importSummary.tasksCreated, 'assignment')}, imported{' '}\n          {plural(importSummary.scoresImported, 'score')}, and updated{' '}\n          {plural(importSummary.scoresUpdated, 'score')}\n        </Alert>\n      )}\n\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <StudentSearch onChange={handleStudentSelect} />\n        </Grid>\n        <Grid item xs={12}>\n          {student && <AccountView canEdit={true} student={student} />}\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherAccounts)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSE_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: COURSE_DIALOG_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst CourseDialog = ({\n  course,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {course ? (\n        <ActionButton action='Edit course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Create course\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: course?.name || '',\n            period: course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.number().typeError('Numbers only').required('Required'),\n          })}\n          onSubmit={async (values) => {\n            course ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {course ? 'Edit Course' : 'Create Course'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={course ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {course\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_STUDENT } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_STUDENT,\n      payload: agent.Students.delete(user),\n      snackbar: { message: 'Student deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteStudentAlert = ({ course, onDelete, student }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(student)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Delete student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Delete fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Student</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>the student's account, and</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this student. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteStudentAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Edit, PersonAdd } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_STUDENT,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_STUDENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user, courseId) =>\n    dispatch({\n      type: ADD_STUDENT,\n      payload: agent.Students.add(user, courseId),\n      courseId,\n      snackbar: { message: 'Student added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n  onUpdate: (user, courseId) =>\n    dispatch({\n      type: UPDATE_STUDENT,\n      payload: agent.Students.update(user),\n      courseId,\n      snackbar: { message: 'Student updated', variant: 'success' },\n    }),\n})\n\nconst StudentDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    const user = { ...values }\n    const courseId = course._id\n    user.role = 'student'\n    onAdd(user, courseId)\n  }\n\n  const handleSubmitUpdate = (values) => {\n    const user = { ...student, ...values }\n    const courseId = course._id\n    onUpdate(user, courseId)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {student ? (\n        <ActionButton\n          action='Edit student'\n          onClick={handleClickOpen}\n          size='small'\n        >\n          <Edit fontSize='inherit' />\n        </ActionButton>\n      ) : (\n        <ActionButton action='Add student' onClick={handleClickOpen}>\n          <PersonAdd />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            firstName: student?.firstName || '',\n            lastName: student?.lastName || '',\n            username: student?.username || '',\n            password: !student ? defaultStudentPassword : '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            password: Yup.string().required(!student ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            student ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {student ? 'Edit Student' : 'Add Student'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={student ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!student || inProgress}\n                    label='Student Number'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {student\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDialog)\n","import React from 'react'\nimport { Chip, Typography, makeStyles } from '@material-ui/core'\n\nimport DeleteStudentAlert from './DeleteStudentAlert'\nimport ResetStudentPasswordAlert from './ResetStudentPasswordAlert'\nimport StudentDialog from './StudentDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    'alignItems': 'center',\n    'borderBottom': 'solid 2px white',\n    'display': 'flex',\n    'height': theme.spacing(5),\n    'justifyContent': 'space-between',\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderBottomColor: theme.palette.secondary.main,\n    },\n  },\n  rowHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  studentUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n}))\n\nconst StudentListRow = ({ course, student }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.row}>\n      <div className={classes.rowHeader}>\n        <Chip\n          color='primary'\n          label={student.username}\n          className={classes.studentUsername}\n        />\n        <Typography>\n          {student.lastName}, {student.firstName}\n        </Typography>\n      </div>\n      <div>\n        <ResetStudentPasswordAlert student={student} />\n        <StudentDialog course={course} student={student} />\n        <DeleteStudentAlert course={course} student={student} />\n      </div>\n    </div>\n  )\n}\n\nconst CourseStudentList = ({ course }) => {\n  return (\n    <>\n      <Typography variant='h6'>Students</Typography>{' '}\n      {course.students && course.students.length > 0 ? (\n        course.students.map((student) => {\n          return (\n            <StudentListRow\n              key={student._id}\n              course={course}\n              student={student}\n            />\n          )\n        })\n      ) : (\n        <div>\n          <Typography>No students have been added to this course</Typography>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CourseStudentList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_COURSE } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteCourseAlert = ({ course, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(course.slug)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {course.name} Period {course.period}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this course. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteCourseAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Publish } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Filedrop from '../Filedrop'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_STUDENTS,\n  STUDENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrop: (users, courseId) =>\n    dispatch({\n      type: IMPORT_STUDENTS,\n      payload: agent.Students.import(users, courseId),\n      snackbar: { message: 'Students imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n})\n\nconst ImportStudentsDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onDrop,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleFiledrop = (file) => {\n    const column = Object.keys(file[0])\n    const users = file\n      .map((row, index) => {\n        // Parse csv data for Infinite Campus grade book export\n        if (index < 2) return null\n        const student = row[column[0]]\n        const user = {\n          firstName: student\n            .split(',')[1]\n            .split(/(\\s\\w)*\\s#/)[0]\n            .trim(),\n          lastName: student.split(',')[0],\n          username: student.split('#')[1],\n          password: defaultStudentPassword,\n          role: 'student',\n        }\n        return user\n      })\n      .filter((element) => element !== null)\n    onDrop(users, course._id)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action='Import students' onClick={handleClickOpen}>\n        <Publish />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Students</DialogTitle>\n        <DialogContent>\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <>\n              <Typography gutterBottom>\n                Students can be imported from a .csv file exported from Infinite\n                Campus\n              </Typography>\n              <Filedrop onFiledrop={handleFiledrop} />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportStudentsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  UPDATE_TASK,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (task) =>\n    dispatch({\n      type: DELETE_TASK,\n      payload: agent.Tasks.delete(task),\n      snackbar: { message: 'Assignment removed', variant: 'success' },\n    }),\n  onLoad: (courseId) =>\n    dispatch({\n      type: TASKS_DIALOG_LOADED,\n      payload: agent.Tasks.getAll(courseId),\n    }),\n  onUpdate: (task) =>\n    dispatch({\n      type: UPDATE_TASK,\n      payload: agent.Tasks.update(task),\n      snackbar: { message: 'Assignment updated', variant: 'success' },\n    }),\n})\n\nconst TasksTable = ({ course, onDelete, onLoad, onUpdate, tasks }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = tasks.map((task) => ({\n    createdAt: new Date(task.createdAt).toDateString(),\n    title: task.title,\n    totalPoints: task.totalPoints,\n    slug: task.slug,\n  }))\n\n  const [columns] = useState([\n    { title: 'Date', field: 'createdAt', editable: 'never' },\n    { title: 'Title', field: 'title', editable: 'never' },\n    { title: 'Total Points', field: 'totalPoints' },\n  ])\n\n  useEffect(() => {\n    onLoad(course._id)\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [tasks])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No assignments found for this course',\n          editRow: {\n            deleteText:\n              'Delete assignment? This will delete all scores for this assignment.',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksTable)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Assignment } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport TasksTable from './TasksTable'\n\nimport { TASKS_DIALOG_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: TASKS_DIALOG_UNLOADED }),\n})\n\nconst TasksDialog = ({ course, errors, inProgress, onExit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton action='Manage assignments' onClick={handleClickOpen}>\n        <Assignment />\n      </ActionButton>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Manage Assignments</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          <TasksTable course={course} />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDialog)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport CourseStudentList from './CourseStudentList'\nimport DeleteCourseAlert from './DeleteCourseAlert'\nimport ImportStudentsDialog from './ImportStudentsDialog'\nimport StudentDialog from './StudentDialog'\nimport TasksDialog from './TasksDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = ({ courses }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <TasksDialog course={course} />\n                  <StudentDialog course={course} />\n                  <ImportStudentsDialog course={course} />\n                  <CourseDialog course={course} />\n                  <DeleteCourseAlert course={course} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <CourseStudentList course={course} />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Alert from '../Alert'\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n})\n\nconst TeacherCourses = ({\n  courses,\n  importCount,\n  onLoad,\n  onUnload,\n  pageLoaded,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Courses'>\n        <CourseDialog />\n      </PageHeader>\n      {importCount !== null && <Alert>{importCount} students imported</Alert>}\n      {pageLoaded ? (\n        <Spinner message='Loading...' />\n      ) : (\n        <CourseList courses={courses} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  ButtonGroup,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { PlaylistAddCheck, ThumbDown, ThumbUp } from '@material-ui/icons'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  UPDATE_SONG_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  panel: {\n    minWidth: theme.spacing(40),\n    maxWidth: theme.spacing(60),\n  },\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  songInfo: {\n    marginBottom: theme.spacing(4),\n  },\n  statusButton: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  statusDescription: {\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  studentInfo: {\n    'alignItems': 'center',\n    'display': 'flex',\n    'marginTop': theme.spacing(4),\n    '& > div': {\n      marginRight: theme.spacing(1),\n    },\n    [theme.breakpoints.up('md')]: {\n      borderTopColor: theme.palette.primary.main,\n      borderTopStyle: 'dotted',\n      borderTopWidth: '4px',\n      paddingTop: theme.spacing(2),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  songRequestPurchaseAmount: state.common.settings.songRequestPurchaseAmount,\n  // spotifyTokens: state.common.settings.spotifyTokens,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: SONG_REQUESTS_DIALOG_UNLOADED }),\n  onSubmit: (song) =>\n    dispatch({\n      type: UPDATE_SONG_REQUEST,\n      payload: agent.Songs.update(song),\n    }),\n})\n\nconst ProcessSongRequestsDialog = ({\n  courses,\n  errors,\n  inProgress,\n  onExit,\n  onSubmit,\n  songRequestPurchaseAmount,\n  // spotifyTokens,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [song, setSong] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [statusDescription, setStatusDescription] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getLyricSearchUrl = (artist, title) => {\n    const url = `http://www.google.com/search?q=${encodeURIComponent(\n      'lyrics: ' + title + ' by ' + artist\n    )}`\n    return url\n  }\n\n  const getSpotifySearchUrl = (artist, title) => {\n    const url = `https://open.spotify.com/search/${encodeURIComponent(\n      title + ' ' + artist\n    )}`\n    return url\n  }\n\n  const getNextSong = () => {\n    setSong(null)\n    if (courses.length > 0) {\n      for (const course of courses) {\n        if (course.songs.length > 0) {\n          const nextSong = course.songs.find(\n            (song) => song.status === 'pending'\n          )\n          if (nextSong) {\n            nextSong.period = course.period\n            setSong(nextSong)\n            break\n          }\n        }\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  const handleStatusButtonClick = (status) => {\n    setStatus(status)\n  }\n\n  const handleStatusDescriptionChange = (ev) => {\n    setStatusDescription(ev.target.value)\n  }\n\n  const handleSubmit = async () => {\n    onSubmit({\n      amount: songRequestPurchaseAmount,\n      id: song._id,\n      status,\n      statusDescription,\n    })\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  useEffect(() => {\n    getNextSong()\n  }, [courses])\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <PlaylistAddCheck className={classes.icon} />\n        Process requests\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Process Song Requests</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {song ? (\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <div className={classes.songInfo}>\n                    <Typography variant='h6'>{song.title}</Typography>\n                    <Typography\n                      color='textSecondary'\n                      variant='body1'\n                      gutterBottom\n                    >\n                      Song\n                    </Typography>\n                    <Typography variant='h6'>{song.artist}</Typography>\n                    <Typography color='textSecondary' variant='body1'>\n                      Artist\n                    </Typography>\n                  </div>\n\n                  <ButtonGroup>\n                    <Button\n                      href={getLyricSearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Lyrics\n                    </Button>\n                    <Button\n                      href={getSpotifySearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Spotify\n                    </Button>\n                  </ButtonGroup>\n\n                  <div className={classes.studentInfo}>\n                    <Chip color='secondary' label={song.period} />\n                    <Typography>\n                      {song.student.firstName} {song.student.lastName}\n                    </Typography>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <Typography variant='h6'>Status</Typography>\n\n                  <ButtonGroup fullWidth size='large'>\n                    <Tooltip arrow enterTouchDelay={0} title='Approve'>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'approved' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('approved')}\n                      >\n                        <ThumbUp />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip arrow enterTouchDelay={0} title='Reject'>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'rejected' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('rejected')}\n                      >\n                        <ThumbDown />\n                      </Button>\n                    </Tooltip>\n                  </ButtonGroup>\n                  {status === 'approved' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Condition for Approval</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Clean version'\n                            control={<Radio />}\n                            label='Clean version'\n                          />\n                          <FormControlLabel\n                            value='Instrumental version'\n                            control={<Radio />}\n                            label='Instrumental version'\n                          />\n                          <FormControlLabel\n                            value='Picked my best guess'\n                            control={<Radio />}\n                            label='Picked my best guess'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                  {status === 'rejected' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Reason for Rejection</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Inappropriate content (language, drugs, sex, and/or violence)'\n                            control={<Radio />}\n                            label='Inappropriate content (language, drugs, sex, and/or violence)'\n                          />\n                          <FormControlLabel\n                            value='Not available on Spotify'\n                            control={<Radio />}\n                            label='Not available on Spotify'\n                          />\n                          <FormControlLabel\n                            value='other'\n                            control={<Radio />}\n                            label='Other'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Alert severity='info'>\n              <AlertTitle>All caught up!</AlertTitle>\n              There are no songs to process at this time\n            </Alert>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          {song && (\n            <Button\n              color='primary'\n              disabled={inProgress}\n              onClick={handleSubmit}\n              variant='contained'\n            >\n              {inProgress ? 'Saving...' : 'Save & Continue'}\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {song ? 'Cancel' : 'Close'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProcessSongRequestsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Chip, Tooltip } from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport ProcessSongRequestsDialog from './ProcessSongRequestsDialog'\nimport agent from '../../agent'\n\nimport {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.songs })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_SONG_REQUEST,\n      payload: agent.Songs.delete(id),\n      snackbar: { message: 'Song request removed', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forTeacher(),\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst TeacherSongs = ({ courses, onDelete, onLoad, onUnload }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = courses\n    .map((course) =>\n      course.songs.map((song) => ({\n        createdAt: new Date(song.createdAt).toDateString(),\n        title: song.title,\n        artist: song.artist,\n        purchasedBy: `${song.student.firstName} ${song.student.lastName}`,\n        period: course.period,\n        status: song.status,\n        statusDescription: song.statusDescription,\n        _id: song._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    { title: 'Request Date', field: 'createdAt', editable: 'never' },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    { title: 'Purchased by', field: 'purchasedBy', editable: 'never' },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        approved: 'approved',\n        pending: 'pending',\n        rejected: 'rejected',\n        removed: 'removed',\n      },\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <span style={{ alignItems: 'center', display: 'flex' }}>\n            {rowData.statusDescription ? (\n              <>\n                {rowData.status}\n                <Tooltip\n                  arrow\n                  color='primary'\n                  enterTouchDelay={0}\n                  title={rowData.statusDescription}\n                >\n                  <InfoOutlined style={{ marginLeft: '8px' }} />\n                </Tooltip>\n              </>\n            ) : (\n              rowData.status\n            )}\n          </span>\n        ) : (\n          <span>{rowData}</span>\n        ),\n    },\n  ])\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <>\n      <PageHeader title='Manage Song Requests'>\n        <ProcessSongRequestsDialog />\n      </PageHeader>\n\n      <MaterialTable\n        title='Song Requests'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No song requests have been submitted',\n            editRow: {\n              deleteText: 'Delete song request?',\n            },\n          },\n        }}\n        options={{ actionsColumnIndex: -1, paging: false, grouping: true }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const dataDelete = [...data]\n              const index = oldData.tableData.id\n              dataDelete.splice(index, 1)\n              setData([...dataDelete])\n              onDelete(oldData._id)\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSongs)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst TeacherDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'teacher' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            teacher ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={teacher ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {teacher\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_TEACHER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (user) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(user),\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteTeacherAlert = ({ onDelete, teacher }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(teacher)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {teacher.firstName} {teacher.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this teacher. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteTeacherAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherList = ({ teachers }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog teacher={teacher} />\n                  <DeleteTeacherAlert teacher={teacher} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Typography variant='h6'>Courses</Typography>\n                {teacher.courses && teacher.courses.length > 0 ? (\n                  teacher.courses.map((course) => {\n                    return (\n                      <div key={course._id}>\n                        <Typography>\n                          Period {course.period} | {course.name} |{' '}\n                          {course.students.length} students\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No courses have been created</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from './../PageHeader'\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n})\n\nconst ManageTeachers = ({ onLoad, onUnload, teachers }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Teachers'}>\n        <TeacherDialog />\n      </PageHeader>\n      <TeacherList teachers={teachers} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherAccounts from './Teacher/TeacherAccounts'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport TeacherSongs from './Teacher/TeacherSongs'\nimport ManageTeachers from './Admin/ManageTeachers'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n\n            <ProtectedRoute\n              path='/teacher/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/teacher/songs' component={TeacherSongs} />\n\n            <ProtectedRoute\n              path='/admin/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute path='/admin/courses' component={TeacherCourses} />\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <ProtectedRoute path='/admin/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Grid, Link, Typography, makeStyles } from '@material-ui/core'\n\nimport profile from '../images/doc-may-profile.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    '& p:not(:last-of-type)': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  profile: {\n    borderRadius: '100%',\n    boxShadow: theme.shadows[10],\n    float: 'right',\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    width: '120px',\n  },\n}))\n\nconst About = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid className={classes.page} container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align='center' gutterBottom variant='h5'>\n          What is Chem Cash?\n        </Typography>\n        <img className={classes.profile} src={profile} />\n        <Typography variant='body2'>\n          Hi! I'm Joseph May, a high school chemistry teacher from Las Vegas.\n          While I love teaching chemistry, I also love programming for the web,\n          so why not combine the two.\n        </Typography>\n        <Typography variant='body2'>\n          Chem Cash is a points-based rewards system I use in my classroom. The\n          idea for this site came from a colleage who was inspired by one of his\n          own high school science teachers.\n        </Typography>\n        <Typography variant='body2'>\n          Students earn points in two ways: (1) through payouts based on their\n          assessment scores and (2) with bonus points earned for anything I deam\n          worthy of reward such as winning in-class competitions or going above\n          and beyond to help me or a student.\n        </Typography>\n        <Typography variant='body2'>\n          These points can be used to \"purchase\" goods such as school supplies,\n          electronics, and anything I can find for cheap or get for free.\n        </Typography>\n        <Typography variant='body2'>\n          However, the hottest-selling item is song requests. During work time\n          in my class I play music for my students. Each class period has its\n          own playlist and students can only add songs to the playlist by\n          spending their Chem Cash points.\n        </Typography>\n        <Typography variant='body2'>\n          I created this program to help manage all of the logistics behind this\n          system of incentives. While it can support multiple teachers, I am\n          running it on no-cost servers, so it was not intended to be a public\n          program. Although, if you are interested in learning more, please\n          reach out to me{' '}\n          <Link href='mailto:jwmay87+chemcash@gmail.com'>here</Link>.\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport Div100vh from 'react-div-100vh'\nimport {\n  Button,\n  Grid,\n  LinearProgress,\n  Paper,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport { ArrowBackIos, InfoOutlined } from '@material-ui/icons'\n\nimport About from '../About'\nimport Logo from '../Logo'\nimport LoginForm from './LoginForm'\nimport background from '../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  aboutLink: {\n    bottom: theme.spacing(2),\n    position: 'absolute',\n    right: theme.spacing(4),\n  },\n  loginLink: {\n    'marginBottom': theme.spacing(2),\n    '& > a': {\n      textDecoration: 'none',\n    },\n  },\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    maxHeight: '90%',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      maxHeight: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n  pathname: state.router.location.pathname,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst AboutLink = () => {\n  const classes = useStyles()\n  return (\n    <span className={classes.aboutLink}>\n      <Tooltip arrow enterTouchDelay={0} title='Learn more'>\n        <Link to='/about'>\n          <InfoOutlined color='secondary' fontSize='small' />\n        </Link>\n      </Tooltip>\n    </span>\n  )\n}\n\nconst LoginLink = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.loginLink}>\n      <Link to='/login'>\n        <Button color='secondary' startIcon={<ArrowBackIos />}>\n          Login\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nconst Login = ({ currentUser, inProgress, onUnload, pathname }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => onUnload()\n  }, [])\n\n  if (currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              {pathname.includes('about') ? (\n                <>\n                  <LoginLink />\n                  <About />\n                </>\n              ) : (\n                <>\n                  <AboutLink />\n                  <LoginForm />\n                </>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  SPOTIFY_REMOVE_AUTH,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    case SPOTIFY_REMOVE_AUTH:\n      return {\n        ...state,\n        settings: action.error\n          ? state.settings\n          : { ...state.settings, spotifyTokens: undefined },\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ALERT_CLOSED,\n  ASYNC_START,\n  COURSE_DIALOG_UNLOADED,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  DELETE_STUDENT,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  STUDENT_DIALOG_UNLOADED,\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  importCount: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId) {\n          courseCopy.students = [\n            ...course.students,\n            action.payload.user,\n          ].sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ALERT_CLOSED:\n      return { ...state, importCount: null }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_STUDENT ||\n        action.subtype === ADD_COURSE ||\n        action.subtype === UPDATE_COURSE ||\n        action.subtype === UPDATE_STUDENT\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === COURSES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      } else if (action.subtype === IMPORT_STUDENTS) {\n        return { ...state, errors: null, importCount: null, inProgress: true }\n      }\n      break\n    case COURSE_DIALOG_UNLOADED:\n    case STUDENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case COURSES_PAGE_LOADED:\n    case STUDENT_SEARCH_LOADED:\n      return { ...state, courses: action.payload.courses, pageLoaded: false }\n    case COURSES_PAGE_UNLOADED:\n    case STUDENT_SEARCH_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter(\n              (course) => course.slug !== action.payload.course.slug\n            ),\n      }\n    case DELETE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.payload.course._id.toString()) {\n          courseCopy.students = course.students.filter(\n            (student) => student.username !== action.payload.user.username\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case IMPORT_STUDENTS:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload.course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) =>\n              course._id === action.payload.course._id\n                ? action.payload.course\n                : course\n            ),\n        errors: action.error ? action.payload.errors : null,\n        importCount: action.error ? null : action.payload.count,\n        inProgress: false,\n      }\n    case RESET_STUDENT_PASSWORD:\n      return { ...state }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      const updatedUser = action.payload.user\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students\n            .map((student) =>\n              student._id.toString() === updatedUser._id.toString()\n                ? updatedUser\n                : student\n            )\n            .sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ADD_TEACHER,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  DELETE_COURSE,\n  DELETE_SONG_REQUEST,\n  DELETE_STUDENT,\n  DELETE_TASK,\n  DELETE_TEACHER,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  SUBMIT_SONG_REQUEST,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n  UPDATE_TASK,\n  UPDATE_TEACHER,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n    case ADD_STUDENT:\n    case ADD_TEACHER:\n    case ADD_TRANSACTION:\n    case ADD_TRANSACTIONS:\n    case DELETE_COURSE:\n    case DELETE_SONG_REQUEST:\n    case DELETE_STUDENT:\n    case DELETE_TASK:\n    case DELETE_TEACHER:\n    case DELETE_TRANSACTION:\n    case IMPORT_SCORES:\n    case IMPORT_STUDENTS:\n    case RESET_STUDENT_PASSWORD:\n    case SETTINGS_SAVED:\n    case SUBMIT_SONG_REQUEST:\n    case UPDATE_COURSE:\n    case UPDATE_STUDENT:\n    case UPDATE_TASK:\n    case UPDATE_TEACHER:\n    case UPDATE_TRANSACTION:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import { unionBy } from 'lodash'\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  ACCOUNTS_PAGE_UNLOADED,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  ALERT_CLOSED,\n  ASYNC_START,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n  TRANSACTION_DIALOG_UNLOADED,\n  TRANSACTIONS_DIALOG_UNLOADED,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\nimport convertScore from '../converter'\n\nconst defaultState = {\n  conversions: null,\n  errors: null,\n  importSummary: null,\n  inProgress: false,\n  total: null,\n  transactions: null,\n}\n\nconst getTotals = (transactions, conversions) => {\n  const sumTransactions = (total, transaction) => total + transaction.amount\n  const sumScores = (total, score) => total + convertScore(score, conversions)\n\n  const bonuses = transactions.bonuses.reduce(sumTransactions, 0)\n  const purchases = transactions.purchases.reduce(sumTransactions, 0)\n  const scores = transactions.scores.reduce(sumScores, 0)\n\n  const balance = bonuses + purchases + scores\n\n  return { balance, bonuses, purchases, scores }\n}\n\nconst addScores = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.filter(\n      (score) => score.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) {\n      transactions.scores = unionBy(usersAdded, [...transactions.scores], '_id')\n    }\n\n    return transactions\n  }\n\n  return null\n}\n\nconst addTransaction = (added, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(added.type)) {\n      transactions[type] = [added, ...transactions[type]]\n    }\n  }\n  return transactions\n}\n\nconst addBulkTransaction = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.find(\n      (transaction) => transaction.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) return addTransaction(usersAdded, transactions)\n  }\n\n  return null\n}\n\nconst deleteTransaction = (deleted, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(deleted.type)) {\n      transactions[type] = transactions[type].filter(\n        (transaction) => transaction._id !== deleted._id\n      )\n    }\n  }\n  return transactions\n}\n\nconst updateTransaction = (updated, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(updated.type)) {\n      transactions[type] = transactions[type].map((transaction) =>\n        transaction._id === updated._id ? updated : transaction\n      )\n    }\n  }\n  return transactions\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_VIEW_LOADED:\n      return {\n        ...state,\n        conversions: action.error ? null : action.payload.scoreConverter,\n        total: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n        transactions: action.error ? null : action.payload.transactions,\n      }\n    case ACCOUNT_VIEW_UNLOADED:\n      return { ...state, conversions: null, total: null, transactions: null }\n    case ACCOUNTS_PAGE_UNLOADED:\n    case ALERT_CLOSED:\n      return { ...state, importSummary: null }\n    case ADD_TRANSACTION:\n      const addedTransactions = !action.error\n        ? addTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(addedTransactions, state.conversions),\n      }\n    case ADD_TRANSACTIONS:\n      const addedBulkTransactions = !action.error\n        ? addBulkTransaction(\n            action.payload.transactions,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : null\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedBulkTransactions,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(addedBulkTransactions, state.conversions),\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_TRANSACTION ||\n        action.subtype === ADD_TRANSACTIONS ||\n        action.subtype === DELETE_TRANSACTION ||\n        action.subtype === UPDATE_TRANSACTION\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === IMPORT_SCORES) {\n        return { ...state, errors: null, importSummary: null, inProgress: true }\n      }\n      break\n    case DELETE_TRANSACTION:\n      const deletedTransactions = !action.error\n        ? deleteTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : deletedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(deletedTransactions, state.conversions),\n      }\n    case IMPORT_SCORES:\n      const addedScores = !action.error\n        ? addScores(\n            action.payload.scores,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : null\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        importSummary: action.error ? null : action.payload.results,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedScores,\n        total:\n          action.error || !state.transactions\n            ? state.total\n            : getTotals(addedScores, state.conversions),\n      }\n    case IMPORT_SCORES_DIALOG_UNLOADED:\n    case TRANSACTION_DIALOG_UNLOADED:\n    case TRANSACTIONS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TRANSACTION:\n      const updatedTransactions = !action.error\n        ? updateTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : updatedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(updatedTransactions, state.conversions),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SPOTIFY_LINKER_LOADED,\n  SPOTIFY_LINKER_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  spotifyAuthUrl: null,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SPOTIFY_LINKER_LOADED:\n      return { ...state, spotifyAuthUrl: action.payload.spotifyAuthUrl }\n    case SETTINGS_PAGE_UNLOADED:\n    case SPOTIFY_LINKER_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  TASKS_DIALOG_UNLOADED,\n  UPDATE_TASK,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  tasks: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === TASKS_DIALOG_LOADED) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.filter(\n              (task) => task.slug !== action.payload.task.slug\n            ),\n      }\n    case TASKS_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        tasks: action.error ? [] : action.payload.tasks,\n      }\n    case TASKS_DIALOG_UNLOADED:\n      return defaultState\n    case UPDATE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.map((task) =>\n              task.slug === action.payload.task.slug\n                ? action.payload.task\n                : task\n            ),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_TEACHER,\n  ASYNC_START,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [...state.teachers, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.payload.user.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_SONG_REQUEST,\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n  UPDATE_SONG_REQUEST,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  course: null,\n  courses: [],\n  courseSongs: [],\n  errors: null,\n  inProgress: false,\n  userSongs: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === UPDATE_SONG_REQUEST) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.songs = courseCopy.songs.filter(\n          (song) => song._id.toString() !== action.payload.song._id.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case SONG_REQUESTS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case SONGS_PAGE_UNLOADED:\n      return defaultState\n    case STUDENT_SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case TEACHER_SONGS_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses }\n    case UPDATE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.songs = courseCopy.songs.map((song) =>\n            song._id.toString() === action.payload.song._id.toString()\n              ? action.payload.song\n              : song\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport scores from './reducers/scores'\nimport settings from './reducers/settings'\nimport tasks from './reducers/tasks'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    common,\n    courses,\n    nav,\n    notifier,\n    scores,\n    settings,\n    tasks,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport ChemCashTheme from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={ChemCashTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/about' component={Login} />\n              <Route path='/' component={Home} />\n            </Switch>\n          </Suspense>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={ChemCashTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}