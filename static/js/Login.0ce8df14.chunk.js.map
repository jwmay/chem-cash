{"version":3,"sources":["components/ListErrors.js","components/Login.js"],"names":["ListErrors","errors","this","props","className","Object","keys","map","key","React","PureComponent","Login","changeEmail","ev","onChangeEmail","target","value","changePassword","onChangePassword","submitForm","email","password","preventDefault","onSubmit","onUnload","to","autoComplete","type","placeholder","onChange","disabled","inProgress","connect","state","auth","dispatch","UPDATE_FIELD_AUTH","LOGIN","payload","agent","Auth","login","LOGIN_PAGE_UNLOADED"],"mappings":"iKAEMA,E,uKAEF,IAAMC,EAASC,KAAKC,MAAMF,OAC1B,OAAIA,EAEA,wBAAIG,UAAU,kBACXC,OAAOC,KAAKL,GAAQM,KAAI,SAACC,GACxB,OACE,wBAAIA,IAAKA,GACNA,EADH,IACSP,EAAOO,QAOjB,S,GAhBYC,IAAMC,eAqBhBV,O,kICCTW,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,YAAc,SAACC,GAAD,OAAQ,EAAKV,MAAMW,cAAcD,EAAGE,OAAOC,QAC9D,EAAKC,eAAiB,SAACJ,GAAD,OAAQ,EAAKV,MAAMe,iBAAiBL,EAAGE,OAAOC,QACpE,EAAKG,WAAa,SAACC,EAAOC,GAAR,OAAqB,SAACR,GACtCA,EAAGS,iBACH,EAAKnB,MAAMoB,SAASH,EAAOC,KANjB,E,mEAWZnB,KAAKC,MAAMqB,a,+BAIX,IAAMJ,EAAQlB,KAAKC,MAAMiB,MACnBC,EAAWnB,KAAKC,MAAMkB,SAC5B,OACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,kBAAd,WACA,uBAAGA,UAAU,kBACX,kBAAC,IAAD,CAAMqB,GAAG,aAAT,qBAGF,kBAAC,IAAD,CAAYxB,OAAQC,KAAKC,MAAMF,SAE/B,0BAAMsB,SAAUrB,KAAKiB,WAAWC,EAAOC,IACrC,kCACE,8BAAUjB,UAAU,cAClB,2BACEA,UAAU,+BACVsB,aAAa,WACbC,KAAK,QACLC,YAAY,QACZZ,MAAOI,GAAS,GAChBS,SAAU3B,KAAKU,eAInB,8BAAUR,UAAU,cAClB,2BACEA,UAAU,+BACVuB,KAAK,WACLD,aAAa,mBACbE,YAAY,WACZZ,MAAOK,GAAY,GACnBQ,SAAU3B,KAAKe,kBAInB,4BACEb,UAAU,uCACVuB,KAAK,SACLG,SAAU5B,KAAKC,MAAM4B,YAHvB,qB,GAtDEtB,IAAMC,eAuEXsB,uBAnFS,SAACC,GAAD,OAAWA,EAAMC,QAEd,SAACC,GAAD,MAAe,CACxCrB,cAAe,SAACE,GAAD,OACbmB,EAAS,CAAER,KAAMS,IAAmB5B,IAAK,QAASQ,WACpDE,iBAAkB,SAACF,GAAD,OAChBmB,EAAS,CAAER,KAAMS,IAAmB5B,IAAK,WAAYQ,WACvDO,SAAU,SAACH,EAAOC,GAAR,OACRc,EAAS,CAAER,KAAMU,IAAOC,QAASC,IAAMC,KAAKC,MAAMrB,EAAOC,MAC3DG,SAAU,kBAAMW,EAAS,CAAER,KAAMe,UA0EpBV,CAA6CrB","file":"static/js/Login.0ce8df14.chunk.js","sourcesContent":["import React from 'react'\n\nclass ListErrors extends React.PureComponent {\n  render() {\n    const errors = this.props.errors\n    if (errors) {\n      return (\n        <ul className='error-messages'>\n          {Object.keys(errors).map((key) => {\n            return (\n              <li key={key}>\n                {key} {errors[key]}\n              </li>\n            )\n          })}\n        </ul>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default ListErrors\n","import { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport ListErrors from './ListErrors'\nimport React from 'react'\n\nimport agent from '../agent'\nimport {\n  UPDATE_FIELD_AUTH,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => state.auth\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeEmail: (value) =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n  onChangePassword: (value) =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n  onSubmit: (email, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(email, password) }),\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nclass Login extends React.PureComponent {\n  constructor() {\n    super()\n    this.changeEmail = (ev) => this.props.onChangeEmail(ev.target.value)\n    this.changePassword = (ev) => this.props.onChangePassword(ev.target.value)\n    this.submitForm = (email, password) => (ev) => {\n      ev.preventDefault()\n      this.props.onSubmit(email, password)\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onUnload()\n  }\n\n  render() {\n    const email = this.props.email\n    const password = this.props.password\n    return (\n      <div className='auth-page'>\n        <div className='container page'>\n          <div className='row'>\n            <div className='col-md-6 offset-md-3 col-xs-12'>\n              <h1 className='text-xs-center'>Sign In</h1>\n              <p className='text-xs-center'>\n                <Link to='/register'>Need an account?</Link>\n              </p>\n\n              <ListErrors errors={this.props.errors} />\n\n              <form onSubmit={this.submitForm(email, password)}>\n                <fieldset>\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      autoComplete='username'\n                      type='email'\n                      placeholder='Email'\n                      value={email || ''}\n                      onChange={this.changeEmail}\n                    />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='password'\n                      autoComplete='current-password'\n                      placeholder='Password'\n                      value={password || ''}\n                      onChange={this.changePassword}\n                    />\n                  </fieldset>\n\n                  <button\n                    className='btn btn-lg btn-primary pull-xs-right'\n                    type='submit'\n                    disabled={this.props.inProgress}\n                  >\n                    Sign in\n                  </button>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"],"sourceRoot":""}