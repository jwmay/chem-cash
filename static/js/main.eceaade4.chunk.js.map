{"version":3,"sources":["images/chemistry-background.jpg","images/chem-cash-logo.png","images/songs-background.jpg","agent.js","components/Theme.js","components/Logo.js","constants/actionTypes.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ListErrors.js","components/Settings.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/ActionButton.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteCourseAlert.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/Home.js","components/Loading.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","reducers/auth.js","reducers/common.js","reducers/courses.js","reducers/nav.js","reducers/notifier.js","reducers/settings.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["module","exports","superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Courses","add","course","delete","slug","getAll","update","Songs","forStudent","request","song","Teachers","setToken","_token","ChemCashTheme","createMuiTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","Logo","props","alt","src","logo","LOGIN","useStyles","makeStyles","theme","title","color","flexGrow","height","marginTop","spacing","marginRight","marginBottom","connect","state","navTabValue","nav","dispatch","onClickLogout","type","classes","currentUser","AppBar","position","Container","Toolbar","className","Typography","variant","align","charAt","toUpperCase","slice","Button","onClick","bottom","width","path","router","location","pathname","common","onTabChange","tabValue","redirectTo","value","onLoad","onUnload","userRole","role","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","LocalGroceryStore","People","SupervisorAccount","wrapper","PageWrapper","children","NotFound","exact","component","to","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","Alert","severity","paper","settings","onSubmitForm","payload","agent","snackbar","message","initialValues","firstName","lastName","validationSchema","Yup","onSubmit","form","a","resetForm","Paper","Grid","container","item","xs","gutterBottom","TextField","name","fullWidth","disabled","inProgress","size","StudentAccount","button","dialog","backgroundImage","background","backgroundPosition","backgroundSize","input","main","inputLabel","SongRequestDialog","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","down","handleClose","handleSubmit","Fab","Add","Dialog","onClose","artist","required","InputLabelProps","buttonCell","alignItems","display","justifyContent","songs","onSubmitSong","userSongs","courseSongs","mySongsOnly","setMySongsOnly","grid","period","FormControlLabel","control","Checkbox","checked","target","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","_id","Date","createdAt","toDateString","status","student","actionButton","text","ActionButton","Tooltip","action","arrow","IconButton","aria-label","ev","stopPropagation","onFocus","CourseDialog","handleClickOpen","Edit","DialogTitle","DialogContent","DialogActions","DeleteCourseAlert","Delete","DialogContentText","autoFocus","courseDetails","courseHeader","coursePeriod","backgroundColor","courseTitle","CourseList","courses","expanded","setExpanded","handleSubmitUpdateCourse","onUpdate","handleSubmitDeleteCourse","onDelete","length","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","Avatar","ExpansionPanelDetails","students","pageHeader","TeacherCoursesHeader","onAdd","TeacherDialog","onDialogClose","teacher","onExit","DeleteTeacherAlert","teacherDetails","teacherHeader","teacherUsername","minWidth","teacherName","TeacherList","teachers","handleSubmitUpdateTeacher","handleSubmitDeleteTeacher","Chip","ManageTeachersHeader","StudentSongs","Settings","TeacherCourses","ManageTeachers","borderRadius","flexFlow","overflowY","fontStyle","Loading","elevation","auth","submitForm","margin","page","up","progress","left","top","LinearProgress","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","React","createRef","onSnackbarDismiss","closeSnackbar","maxSnack","ref","subtype","error","defaultState","appName","viewChangeCounter","appLoaded","sortByPeriod","b","sort","filter","sortByLastName","localeCompare","users","songsByUser","songsByCourse","promiseMiddleware","store","next","v","currentView","getState","skipTracking","currentState","promise","console","log","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","push","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.eceaade4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chemistry-background.58b9362d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.30174016.png\";","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\nimport request from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT = 'http://localhost:4000/api'\n// const API_ROOT = 'https://chem-cash.herokuapp.com/api'\n\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  del: (url) =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  getAll: () => requests.get('/courses'),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Songs = {\n  forStudent: () => requests.get('/songs/student'),\n  request: (song) => requests.post('/songs', { song }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (username) => requests.del(`/users/${username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nexport default {\n  Auth,\n  Courses,\n  Songs,\n  Teachers,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = createMuiTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n})\n\nexport default ChemCashTheme\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH' //@deprecated?\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const SONGS_PAGE_LOADED = 'SONGS_PAGE_LOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\n\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\nexport const DELETE_COURSE = 'DELETE_COURSE'\n\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  LocalGroceryStore,\n  People,\n  QueueMusic,\n  Settings,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  path: state.router.location.pathname,\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ?? (userRole === 'student' ? 'account' : 'courses')\n    const redirectTo = `/${userRole}/${tabValue}`\n    props.onLoad(tabValue, redirectTo)\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalGroceryStore />}\n        value='accounts'\n      />\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      <BottomNavigationAction\n        label='Songs'\n        icon={<QueueMusic />}\n        value='songs'\n      />\n      {userRole === 'admin' && (\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n      )}\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = (props) => {\n  const classes = useStyles()\n\n  const errors = props.errors\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from './ListErrors'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n  onSubmitForm: (user) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: agent.Auth.save(user),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n})\n\nconst Settings = (props) => {\n  const currentUser = props.currentUser\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n      })}\n      onSubmit={async (values, form) => {\n        const user = { ...values }\n        if (!user.password && props.currentUser.role !== 'student') {\n          delete user.password\n        }\n        props.onSubmitForm(user)\n        form.resetForm({\n          values: { ...user, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <ListErrors errors={props.errors} />\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Change your name\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='First name'\n                  name='firstName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Last name'\n                  name='lastName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Change your password\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Button\n                color='primary'\n                disabled={props.inProgress}\n                size='large'\n                type='submit'\n                variant='contained'\n              >\n                {props.inProgress ? 'Saving...' : 'Save'}\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\n// import SongRequestDialog from './SongRequestDialog'\n// import agent from '../../agent'\n\n// import {\n//   SONGS_PAGE_LOADED,\n//   SONGS_PAGE_UNLOADED,\n// } from '../../constants/actionTypes'\n\n// const useStyles = makeStyles((theme) => ({\n//   buttonCell: {\n//     alignItems: 'center',\n//     display: 'flex',\n//     justifyContent: 'center',\n//   },\n//   paper: {\n//     padding: theme.spacing(4),\n//   },\n// }))\n\n// const mapStateToProps = (state) => ({\n//   ...state.songs,\n//   currentUser: state.common.currentUser,\n// })\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onLoad: (payload) => dispatch({ type: SONGS_PAGE_LOADED, payload }),\n//   onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n// })\n\nconst StudentAccount = (props) => {\n  // const { currentUser, userSongs, courseSongs } = props\n\n  // const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  // const classes = useStyles()\n\n  // const handleMySongsOnlyClick = (event) => {\n  //   setMySongsOnly(event.target.checked)\n  // }\n\n  // useEffect(() => {\n  //   props.onLoad(agent.Songs.forStudent())\n\n  //   return () => {\n  //     return props.onUnload()\n  //   }\n  // }, [])\n\n  return <div>Student Account</div>\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\nexport default StudentAccount\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport background from './../../images/songs-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst SongRequestDialog = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = async (values) => {\n    setOpen(false)\n    await props.onSubmit(values)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            await handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default SongRequestDialog\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport {\n  SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n  SUBMIT_SONG_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  buttonCell: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(4),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload) => dispatch({ type: SONGS_PAGE_LOADED, payload }),\n  onSubmitSong: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst StudentSongs = (props) => {\n  const { currentUser, userSongs, courseSongs, course } = props\n\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  const classes = useStyles()\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  const handleSubmitSongRequest = (values) => {\n    props.onSubmitSong(values)\n  }\n\n  useEffect(() => {\n    props.onLoad(agent.Songs.forStudent())\n\n    return () => {\n      return props.onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} md={6} className={classes.grid}>\n            <Typography variant='h5'>\n              Songs for{' '}\n              {mySongsOnly ? currentUser.firstName : 'Period ' + course.period}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6} className={classes.buttonCell}>\n            <SongRequestDialog onSubmit={handleSubmitSongRequest} />\n          </Grid>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Request Date</TableCell>\n              <TableCell>Song Title</TableCell>\n              <TableCell>Song Artist</TableCell>\n              {!mySongsOnly && <TableCell>Purchased by</TableCell>}\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mySongsOnly\n              ? userSongs &&\n                userSongs.map((song) => (\n                  <TableRow key={song._id}>\n                    <TableCell>\n                      {new Date(song.createdAt).toDateString()}\n                    </TableCell>\n                    <TableCell>{song.title}</TableCell>\n                    <TableCell>{song.artist}</TableCell>\n                    <TableCell>{song.status}</TableCell>\n                  </TableRow>\n                ))\n              : courseSongs &&\n                courseSongs.map((song) => (\n                  <TableRow key={song._id}>\n                    <TableCell>\n                      {new Date(song.createdAt).toDateString()}\n                    </TableCell>\n                    <TableCell>{song.title}</TableCell>\n                    <TableCell>{song.artist}</TableCell>\n                    <TableCell>\n                      {song.student.firstName} {song.student.lastName}\n                    </TableCell>\n                    <TableCell>{song.status}</TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip title={props.action} arrow>\n      <IconButton\n        aria-label={props.action}\n        className={classes.actionButton}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst CourseDialog = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    setOpen(false)\n    props.onSubmit({ ...props.course, ...values })\n  }\n\n  return (\n    <>\n      {props.course ? (\n        <ActionButton action='Update course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add course\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            name: props.course?.name || '',\n            period: props.course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.string().required('Required'),\n          })}\n          onSubmit={(values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {props.course ? 'Edit Course' : 'Add Course'}\n            </DialogTitle>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button color='primary' type='submit' variant='contained'>\n                {props.course ? 'Update' : 'Add'}\n              </Button>\n              <Button onClick={handleClose} variant='contained'>\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default CourseDialog\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\n\nconst DeleteCourseAlert = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    props.onSubmit(props.course)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete course?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this course? This action cannot be\n            undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='outlined' color='primary'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default DeleteCourseAlert\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport DeleteCourseAlert from './DeleteCourseAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = (props) => {\n  const { courses } = props\n\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  const handleSubmitUpdateCourse = (course) => {\n    props.onUpdate(course)\n  }\n\n  const handleSubmitDeleteCourse = (course) => {\n    props.onDelete(course.slug)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <CourseDialog\n                    course={course}\n                    onSubmit={handleSubmitUpdateCourse}\n                  />\n                  <DeleteCourseAlert\n                    course={course}\n                    onSubmit={handleSubmitDeleteCourse}\n                  />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <Typography variant='h6'>Students</Typography>\n                {course.students && course.students.length > 0 ? (\n                  course.students.map((student) => {\n                    return (\n                      <div key={student._id}>\n                        <Typography>\n                          {student.lastName}, {student.firstName}\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No students have been added</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses yet</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  pageHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      slug,\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst TeacherCoursesHeader = (props) => {\n  const classes = useStyles()\n\n  const handleSubmitAddCourse = (values) => {\n    props.onAdd(values)\n  }\n\n  return (\n    <div className={classes.pageHeader}>\n      <Typography variant='h4'>My Courses</Typography>\n      <CourseDialog onSubmit={handleSubmitAddCourse} />\n    </div>\n  )\n}\n\nconst TeacherCourses = (props) => {\n  useEffect(() => {\n    props.onLoad()\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <TeacherCoursesHeader {...props} />\n      <CourseList {...props} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React, { useState, useEffect } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst TeacherDialog = (props) => {\n  const { errors, inProgress, onDialogClose, onSubmit, teacher } = props\n\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onDialogClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={props.errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button color='primary' type='submit' variant='contained'>\n                {teacher\n                  ? inProgress\n                    ? 'Updating'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding'\n                  : 'Add'}\n              </Button>\n              <Button onClick={handleClose} variant='contained'>\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default TeacherDialog\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\n\nconst DeleteTeacherAlert = (props) => {\n  const { onSubmit, teacher } = props\n\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onSubmit(teacher)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete teacher?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this teacher? This action cannot be\n            undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='outlined' color='primary'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default DeleteTeacherAlert\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherList = (props) => {\n  const { onDelete, onUpdate, teachers } = props\n\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  const handleSubmitUpdateTeacher = (teacher) => {\n    onUpdate(teacher)\n  }\n\n  const handleSubmitDeleteTeacher = (teacher) => {\n    onDelete(teacher.username)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog\n                    teacher={teacher}\n                    onSubmit={handleSubmitUpdateTeacher}\n                    {...props}\n                  />\n                  <DeleteTeacherAlert\n                    teacher={teacher}\n                    onSubmit={handleSubmitDeleteTeacher}\n                  />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Typography variant='h6'>Courses</Typography>\n                {teacher.courses && teacher.courses.length > 0 ? (\n                  teacher.courses.map((course) => {\n                    return (\n                      <div key={course._id}>\n                        <Typography>\n                          Period {course.period} | {course.name} |{' '}\n                          {course.students.length} students\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No courses have been created</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles, Typography } from '@material-ui/core'\n\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  pageHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onDelete: (username) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(username),\n      username,\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n  onDialogClose: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst ManageTeachersHeader = (props) => {\n  const classes = useStyles()\n\n  const handleSubmitAddTeacher = (user) => {\n    user.role = 'teacher'\n    props.onAdd(user)\n  }\n\n  return (\n    <div className={classes.pageHeader}>\n      <Typography variant='h4'>Manage Teachers</Typography>\n      <TeacherDialog onSubmit={handleSubmitAddTeacher} {...props} />\n    </div>\n  )\n}\n\nconst ManageTeachers = (props) => {\n  useEffect(() => {\n    props.onLoad()\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <ManageTeachersHeader {...props} />\n      <TeacherList {...props} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport ManageTeachers from './Admin/ManageTeachers'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/admin/courses' component={TeacherCourses} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: 'teacher',\n        password: 'teacher',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Grid, LinearProgress, Paper, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './../Logo'\nimport LoginForm from './LoginForm'\nimport background from './../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst Login = (props) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => props.onUnload()\n  }, [])\n\n  if (props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {props.inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              <LoginForm />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload.user,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  UPDATE_COURSE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n}\n\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n      }\n    case COURSES_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses }\n    case COURSES_PAGE_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter((course) => course.slug !== action.slug),\n      }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n      }\n    default:\n      return state\n  }\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_TEACHER,\n  DELETE_COURSE,\n  DELETE_TEACHER,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  SUBMIT_SONG_REQUEST,\n  UPDATE_COURSE,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n    case ADD_TEACHER:\n    case DELETE_COURSE:\n    case DELETE_TEACHER:\n    case SETTINGS_SAVED:\n    case SUBMIT_SONG_REQUEST:\n    case UPDATE_COURSE:\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SETTINGS_PAGE_UNLOADED:\n      return {}\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  ADD_TEACHER,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [...state.teachers, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n  SUBMIT_SONG_REQUEST,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case SONGS_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport settings from './reducers/settings'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    common,\n    courses,\n    nav,\n    notifier,\n    settings,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport ChemCashTheme from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={ChemCashTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Div100vh>\n            <Suspense fallback={<p>Loading...</p>}>\n              <Switch>\n                <Route exact path='/login' component={Login} />\n                <Route path='/' component={Home} />\n              </Switch>\n            </Suspense>\n          </Div100vh>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={ChemCashTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}