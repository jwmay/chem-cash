{"version":3,"sources":["agent.js","images/chemistry-background.jpg","images/chem-cash-logo.png","images/songs-background.jpg","components/Theme.js","components/Logo.js","constants/actionTypes.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ListErrors.js","components/PageHeader.js","components/Settings.js","components/ActionButton.js","components/Teacher/ResetStudentPasswordAlert.js","components/Teacher/TransactionDialog.js","converter.js","components/AccountView.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/Alert.js","components/Filedrop.js","components/Spinner.js","components/Teacher/ImportScoresDialog.js","components/Teacher/StudentSearch.js","components/Teacher/TeacherAccounts.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteStudentAlert.js","components/Teacher/StudentDialog.js","components/Teacher/CourseStudentList.js","components/Teacher/DeleteCourseAlert.js","components/Teacher/ImportStudentsDialog.js","components/Teacher/TasksTable.js","components/Teacher/TasksDialog.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/Teacher/ProcessSongRequestsDialog.js","components/Teacher/TeacherSongs.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/Home.js","components/Loading.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","reducers/auth.js","reducers/common.js","reducers/courses.js","reducers/nav.js","reducers/notifier.js","reducers/scores.js","reducers/settings.js","reducers/tasks.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","encode","encodeURIComponent","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Courses","add","course","delete","slug","getAll","update","Scores","import","data","Settings","settings","Songs","id","forStudent","forTeacher","request","song","Spotify","getAuthUrl","removeAuth","Students","courseId","users","Tasks","task","Teachers","Transactions","transaction","_id","setToken","_token","module","exports","ChemCashTheme","createMuiTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","Logo","props","alt","src","logo","ASYNC_START","LOGIN","useStyles","makeStyles","theme","title","color","flexGrow","height","marginTop","spacing","marginRight","marginBottom","connect","state","navTabValue","nav","dispatch","onClickLogout","type","classes","currentUser","AppBar","position","Container","Toolbar","className","Typography","variant","align","charAt","toUpperCase","slice","Button","onClick","bottom","width","zIndex","path","router","location","pathname","common","onTabChange","tabValue","redirectTo","value","onLoad","onUnload","userRole","role","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","People","SupervisorAccount","wrapper","PageWrapper","children","NotFound","exact","component","to","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","severity","pageHeader","alignItems","display","justifyContent","PageHeader","paper","onSubmitForm","payload","all","agent","snackbar","message","inProgress","enableReinitialize","initialValues","defaultStudentPassword","songRequestPurchaseAmount","firstName","lastName","score100","scoreConverter","score90","score80","score70","score60","score50","validationSchema","Yup","typeError","onSubmit","form","a","userSettings","100","90","80","70","60","50","40","30","20","10","0","resetForm","Fab","disabled","SaveAlt","Paper","Grid","container","item","xs","gutterBottom","TextField","name","fullWidth","actionButton","text","ActionButton","Tooltip","action","arrow","IconButton","aria-label","ev","stopPropagation","onFocus","size","btnSize","student","useState","open","setOpen","handleClose","LockOpen","fontSize","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","scores","onAdd","typeTitle","onExit","useTheme","fullScreen","useMediaQuery","down","handleSubmitAdd","Grade","ShoppingCart","amount","description","required","convertScore","score","conversions","total","totalPoints","noZeroTotal","Math","floor","round","actions","balance","borderTop","fontStyle","textTransform","edit","backgroundColor","main","subtotal","typography","pxToRem","unit","AccountHeader","canEdit","doEdit","onEditClick","period","bonuses","purchases","Close","Edit","TransactionList","onDelete","onUpdate","transactions","setData","mapTransaction","createdAt","Date","toDateString","mappedData","mapped","bonus","purchase","mapScore","field","editable","defaultSort","columns","localization","emptyDataSourceMessage","editRow","deleteText","options","actionsColumnIndex","paging","toolbar","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","onRowDelete","index","splice","deleted","setDoEdit","button","dialog","backgroundImage","background","backgroundPosition","backgroundSize","input","inputLabel","handleSubmit","Add","artist","InputLabelProps","marginLeft","paddingLeft","status","DataRow","showStudent","TableRow","TableCell","statusDescription","InfoOutlined","CourseSongs","songs","length","colSpan","UserSongs","courseSongs","userSongs","mySongsOnly","setMySongsOnly","grid","FormControlLabel","control","Checkbox","checked","target","TableContainer","Table","TableHead","TableBody","Collapse","in","filedrop","grey","borderRadius","flexDirection","outline","transition","filedropActive","light","contrastText","filedropReject","Filedrop","onFiledrop","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","parsedFile","parse","result","skip_empty_lines","readAsBinaryString","useDropzone","accept","multiple","onDropAccepted","getRootProps","getInputProps","isDragActive","isDragReject","minWidth","spinner","Spinner","CircularProgress","courses","shadows","boxShadow","up","ScoreImportStepper","onDataChange","onShowImport","setFile","setCourse","tasks","setTasks","handleTaskChange","tasksSelected","some","el","tabIndex","FormControl","FormGroup","onImport","ready","setReady","Publish","importData","selected","usernames","pop","filter","parsed","taskName","find","row","endsWith","push","search","setMappedData","students","flat","Autocomplete","autoHighlight","getOptionLabel","option","groupBy","noOptionsText","renderInput","params","placeholder","renderOption","inputValue","matches","match","parts","part","style","fontWeight","highlight","importSummary","setStudent","plural","qty","tasksCreated","scoresImported","scoresUpdated","handleClickOpen","handleSubmitUpdate","Delete","PersonAdd","borderBottomColor","rowHeader","studentUsername","StudentListRow","Chip","CourseStudentList","column","trim","element","minHeight","Assignment","courseDetails","courseHeader","coursePeriod","courseTitle","CourseList","expanded","setExpanded","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","Avatar","ExpansionPanelDetails","importCount","pageLoaded","maxWidth","songInfo","statusButton","studentInfo","borderTopColor","borderTopStyle","borderTopWidth","paddingTop","setSong","setStatus","setStatusDescription","handleStatusButtonClick","handleStatusDescriptionChange","nextSong","getNextSong","PlaylistAddCheck","ButtonGroup","href","getSpotifySearchUrl","ThumbUp","ThumbDown","RadioGroup","Radio","AlertTitle","songId","purchasedBy","render","rowData","renderType","lookup","approved","pending","rejected","removed","grouping","dataDelete","teachers","teacher","teacherDetails","teacherHeader","teacherUsername","teacherName","TeacherList","StudentAccount","StudentSongs","TeacherAccounts","TeacherCourses","TeacherSongs","ManageTeachers","flexFlow","overflowY","Loading","elevation","auth","submitForm","margin","page","progress","left","top","LinearProgress","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","React","createRef","onSnackbarDismiss","closeSnackbar","maxSnack","ref","subtype","error","defaultState","appName","viewChangeCounter","appLoaded","spotifyTokens","undefined","sortByLastName","b","localeCompare","sortByPeriod","sort","courseCopy","toString","count","updatedUser","getTotals","sumTransactions","reduce","updateTransaction","updated","startsWith","addTransaction","added","deleteTransaction","addedTransactions","deletedTransactions","results","updatedTransactions","spotifyAuthUrl","songsByUser","songsByCourse","promiseMiddleware","store","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.5af7c897.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://chem-cash.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst encode = encodeURIComponent\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  del: (url) =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  getAll: () => requests.get('/courses'),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Scores = {\n  getAll: (username) => requests.get(`/scores?username=${username}`),\n  import: (data) => requests.post('/scores/import', { data }),\n}\n\nconst Settings = {\n  // get: () => requests.get('/user/settings'),\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Songs = {\n  delete: (id) => requests.del(`/songs/${id}`),\n  forStudent: () => requests.get('/songs/student'),\n  forTeacher: () => requests.get('/songs/teacher'),\n  request: (song) => requests.post('/songs', { song }),\n  update: (song) => requests.put(`/songs/${song.id}`, { song }),\n}\n\nconst Spotify = {\n  getAuthUrl: () => requests.get('/spotify/auth'),\n  removeAuth: () => requests.del('/spotify/auth'),\n}\n\nconst Students = {\n  add: (user, courseId) =>\n    requests.post(`/users?courseId=${encode(courseId)}`, { user }),\n  delete: (username) => requests.del(`/users/student/${username}`),\n  import: (users, courseId) =>\n    requests.post(`/users/import?courseId=${encode(courseId)}`, { users }),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Tasks = {\n  getAll: (courseId) => requests.get(`/tasks?courseId=${courseId}`),\n  delete: (slug) => requests.del(`/tasks/${slug}`),\n  update: (task) => requests.put(`/tasks/${task.slug}`, { task }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (username) => requests.del(`/users/teacher/${username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Transactions = {\n  add: (transaction) => requests.post('/transactions', { transaction }),\n  delete: (transaction) => requests.del(`/transactions/${transaction._id}`),\n  update: (transaction) =>\n    requests.put(`/transactions/${transaction._id}`, { transaction }),\n}\n\nexport default {\n  Auth,\n  Courses,\n  Scores,\n  Settings,\n  Songs,\n  Spotify,\n  Students,\n  Tasks,\n  Teachers,\n  Transactions,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/chemistry-background.58b9362d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.30174016.png\";","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = createMuiTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n})\n\nexport default ChemCashTheme\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const DELETE_SONG_REQUEST = 'DELETE_SONG_REQUEST'\nexport const SONG_REQUESTS_DIALOG_UNLOADED = 'SONG_REQUESTS_DIALOG_UNLOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const STUDENT_SONGS_PAGE_LOADED = 'STUDENT_SONGS_PAGE_LOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\nexport const TEACHER_SONGS_PAGE_LOADED = 'TEACHER_SONGS_PAGE_LOADED'\nexport const UPDATE_SONG_REQUEST = 'UPDATE_SONG_REQUEST'\n\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const COURSE_DIALOG_UNLOADED = 'COURSE_DIALOG_UNLOADED'\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const DELETE_COURSE = 'DELETE_COURSE'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\n\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const DELETE_STUDENT = 'DELETE_STUDENT'\nexport const IMPORT_STUDENTS = 'IMPORT_STUDENTS'\nexport const RESET_STUDENT_PASSWORD = 'RESET_STUDENT_PASSWORD'\nexport const STUDENT_DIALOG_UNLOADED = 'STUDENT_DIALOG_UNLOADED'\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT'\n\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\n\nexport const SPOTIFY_REMOVE_AUTH = 'SPOTIFY_REMOVE_AUTH'\nexport const SPOTIFY_LINKER_LOADED = 'SPOTIFY_LINKER_LOADED'\nexport const SPOTIFY_LINKER_UNLOADED = 'SPOTIFY_LINKER_UNLOADED'\n\nexport const IMPORT_SCORES = 'IMPORT_SCORES'\nexport const IMPORT_SCORES_DIALOG_UNLOADED = 'IMPORT_SCORES_DIALOG_UNLOADED'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const TASKS_DIALOG_LOADED = 'TASKS_DIALOG_LOADED'\nexport const TASKS_DIALOG_UNLOADED = 'TASKS_DIALOG_UNLOADED'\nexport const UPDATE_TASK = 'UPDATE_TASK'\n\nexport const ACCOUNT_VIEW_LOADED = 'ACCOUNT_VIEW_LOADED'\nexport const ACCOUNT_VIEW_UNLOADED = 'ACCOUNT_VIEW_UNLOADED'\nexport const ACCOUNTS_PAGE_UNLOADED = 'ACCOUNTS_PAGE_UNLOADED'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION'\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION'\nexport const TRANSACTION_DIALOG_UNLOADED = 'TRANSACTION_DIALOG_UNLOADED'\n\nexport const STUDENT_SEARCH_LOADED = 'STUDENT_SEARCH_LOADED'\nexport const STUDENT_SEARCH_UNLOADED = 'STUDENT_SEARCH_UNLOADED'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  People,\n  QueueMusic,\n  Settings,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  path: state.router.location.pathname,\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ?? (userRole === 'student' ? 'account' : 'accounts')\n    const redirectTo = `/${userRole}/${tabValue}`\n    props.onLoad(tabValue, redirectTo)\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalAtm />}\n        value='accounts'\n      />\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      <BottomNavigationAction\n        label='Songs'\n        icon={<QueueMusic />}\n        value='songs'\n      />\n      {userRole === 'admin' && (\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n      )}\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  pageHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = (props) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.pageHeader}>\n      <Typography variant='h4'>{props.title}</Typography>\n      {props.children}\n    </div>\n  )\n}\n\nexport default PageHeader\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\n// import SpotifyLinker from './Teacher/SpotifyLinker'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        defaultStudentPassword: settings?.defaultStudentPassword || '',\n        songRequestPurchaseAmount: settings?.songRequestPurchaseAmount || 0,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n        score100: settings?.scoreConverter?.[100] || 1200,\n        score90: settings?.scoreConverter?.[90] || 1000,\n        score80: settings?.scoreConverter?.[80] || 800,\n        score70: settings?.scoreConverter?.[70] || 600,\n        score60: settings?.scoreConverter?.[60] || 0,\n        score50: settings?.scoreConverter?.[50] || 0,\n      }}\n      validationSchema={Yup.object({\n        defaultStudentPassword: Yup.string(),\n        songRequestPurchaseAmount: Yup.number().typeError('Numbers only'),\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n        score100: Yup.number().typeError('Numbers only'),\n        score90: Yup.number().typeError('Numbers only'),\n        score80: Yup.number().typeError('Numbers only'),\n        score70: Yup.number().typeError('Numbers only'),\n        score60: Yup.number().typeError('Numbers only'),\n        score50: Yup.number().typeError('Numbers only'),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password && currentUser.role !== 'student')\n          delete userSettings.password\n\n        if (currentUser.role !== 'student')\n          userSettings.scoreConverter = {\n            100: values.score100,\n            90: values.score90,\n            80: values.score80,\n            70: values.score70,\n            60: values.score60,\n            50: values.score50,\n            40: 0,\n            30: 0,\n            20: 0,\n            10: 0,\n            0: 0,\n          }\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={errors} />\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Song Requests\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Song request purchase amount'\n                  name='songRequestPurchaseAmount'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              {/* <Grid item xs={12} md={6}>\n                <SpotifyLinker />\n              </Grid> */}\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Student Accounts\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Default student password'\n                  name='defaultStudentPassword'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Score Conversions\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='100% and up'\n                  name='score100'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='90% and up'\n                  name='score90'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='80% and up'\n                  name='score80'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='70% and up'\n                  name='score70'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='60% and up'\n                  name='score60'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='50% and up'\n                  name='score50'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Account Details\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='First name'\n                  name='firstName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Last name'\n                  name='lastName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip title={props.action} arrow>\n      <IconButton\n        aria-label={props.action}\n        className={`${classes.actionButton} ${props.className}`}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { LockOpen } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { RESET_STUDENT_PASSWORD } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  defaultStudentPassword: state.common.settings.defaultStudentPassword,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (user) =>\n    dispatch({\n      type: RESET_STUDENT_PASSWORD,\n      payload: agent.Students.update(user),\n      snackbar: { message: 'Password reset', variant: 'success' },\n    }),\n})\n\nconst ResetStudentPasswordAlert = ({\n  btnSize,\n  defaultStudentPassword,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    const user = { ...student, password: defaultStudentPassword }\n    onSubmit(user)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Reset password'\n        onClick={handleClickOpen}\n        size={btnSize ?? 'small'}\n      >\n        <LockOpen fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset Password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you want to reset{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            's password to <strong>{defaultStudentPassword}</strong>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='primary'\n            variant='contained'\n            autoFocus\n          >\n            Reset\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetStudentPasswordAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Grade, ShoppingCart } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n  TRANSACTION_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transaction) =>\n    dispatch({\n      type: ADD_TRANSACTION,\n      payload: agent.Transactions.add(transaction),\n      snackbar: {\n        message: `${transaction.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTION_DIALOG_UNLOADED }),\n})\n\nconst TransactionDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  student,\n  transaction,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, student, type: type.toLowerCase(), typeTitle: type })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    // onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton\n        action={`Add ${type.toLowerCase()}`}\n        onClick={handleClickOpen}\n      >\n        {type === 'Bonus' && <Grade />}\n        {type === 'Purchase' && <ShoppingCart />}\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            amount: transaction?.amount || '',\n            description: transaction?.description || '',\n          }}\n          validationSchema={Yup.object({\n            amount: Yup.number().typeError('Numbers only').required('Required'),\n            description: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            transaction ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {`${transaction ? 'Edit' : 'Add'} ${type}`}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={transaction ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {transaction\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDialog)\n","// @todo: do score->points conversion here?\nconst convertScore = (score, conversions) => {\n  const total = score.task.totalPoints\n  const noZeroTotal = total !== 0 ? total : 1\n  return conversions[\n    Math.floor(Math.round((score.value / noZeroTotal) * 100) / 10) * 10\n  ]\n}\n\nexport default convertScore\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { Close, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../components/ActionButton'\nimport ResetStudentPasswordAlert from './Teacher/ResetStudentPasswordAlert'\nimport TransactionDialog from './Teacher/TransactionDialog'\nimport agent from '../agent'\nimport convertScore from '../converter'\n\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  balance: {\n    'textAlign': 'center',\n    '& > h6': {\n      borderTop: '1px solid #ccc',\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  edit: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  subtotal: {\n    'position': 'relative',\n    'textAlign': 'center',\n    '& > p': {\n      position: 'relative',\n      bottom: -theme.spacing(1),\n    },\n    '& > h6': {\n      fontSize: theme.typography.pxToRem(12),\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  unit: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  conversions: state.scores.conversions,\n  total: state.scores.total,\n  transactions: state.scores.transactions,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (transaction) =>\n    dispatch({\n      type: DELETE_TRANSACTION,\n      payload: agent.Transactions.delete(transaction),\n      deleted: transaction, //@todo: have server return deleted item to make reducing require less actions (refactor all delete controllers?)\n      snackbar: { message: 'Transaction deleted', variant: 'success' },\n    }),\n  onLoad: (username) =>\n    dispatch({\n      type: ACCOUNT_VIEW_LOADED,\n      payload: agent.Scores.getAll(username),\n    }),\n  onUnload: () => dispatch({ type: ACCOUNT_VIEW_UNLOADED }),\n  onUpdate: (transaction) =>\n    dispatch({\n      type: UPDATE_TRANSACTION,\n      payload: agent.Transactions.update(transaction),\n      snackbar: { message: 'Transaction updated', variant: 'success' },\n    }),\n})\n\nconst AccountHeader = ({ canEdit, doEdit, onEditClick, student, total }) => {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <Typography gutterBottom variant='h5'>\n            {student.firstName} {student.lastName}\n          </Typography>\n          {student.course && (\n            <Typography color='textSecondary' variant='subtitle1'>\n              {student.course} &middot; Period {student.period}\n            </Typography>\n          )}\n        </Grid>\n        <Grid item xs={12} md={4} container>\n          <Grid item xs={12} className={classes.balance}>\n            <Typography\n              color={total?.balance >= 0 ? 'primary' : 'secondary'}\n              variant='h4'\n            >\n              {total?.balance} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='textSecondary' variant='subtitle2'>\n              Balance\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.bonuses} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Bonuses\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='secondary' variant='body1'>\n              {total?.purchases} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='secondary' variant='subtitle2'>\n              Purchases\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.scores} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Assessments\n            </Typography>\n          </Grid>\n        </Grid>\n        {canEdit && (\n          <Grid item xs={12} md={4} className={classes.actions}>\n            <TransactionDialog student={student} type='Bonus' />\n            <TransactionDialog student={student} type='Purchase' />\n            <ActionButton\n              action={doEdit ? 'Finish editing' : 'Edit transactions'}\n              className={doEdit && classes.edit}\n              onClick={onEditClick}\n            >\n              {doEdit ? <Close /> : <Edit />}\n            </ActionButton>\n            <ResetStudentPasswordAlert btnSize='medium' student={student} />\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  )\n}\n\nconst TransactionList = ({\n  conversions,\n  doEdit,\n  onDelete,\n  onUpdate,\n  transactions,\n}) => {\n  const [data, setData] = useState([])\n\n  const mapTransaction = (transaction) => ({\n    amount: transaction.amount,\n    createdAt: new Date(transaction.createdAt).toDateString(),\n    description: transaction.description,\n    type: transaction.type,\n    _id: transaction._id,\n  })\n\n  const mapScore = (score) => ({\n    amount: convertScore(score, conversions),\n    createdAt: new Date().toDateString(),\n    description: score.task.title,\n    type: 'assessment',\n  })\n\n  // @todo: sort by date?\n  const mappedData = (transactions) => {\n    const { bonuses, purchases, scores } = transactions\n    const mapped = [\n      ...bonuses.map((bonus) => mapTransaction(bonus)),\n      ...purchases.map((purchase) => mapTransaction(purchase)),\n    ]\n    if (doEdit) {\n      return mapped\n    } else {\n      return [...mapped, ...scores.map((score) => mapScore(score))]\n    }\n  }\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      defaultSort: 'desc',\n    },\n    { title: 'Description', field: 'description' },\n    { title: 'Type', field: 'type', editable: 'never' },\n    { title: 'Amount', field: 'amount' },\n  ])\n\n  useEffect(() => {\n    transactions && setData(mappedData(transactions))\n  }, [doEdit, transactions])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No activity to report',\n          editRow: {\n            deleteText: 'Delete this transaction?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={\n        doEdit\n          ? {\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  const dataUpdate = [...data]\n                  const index = oldData.tableData.id\n                  dataUpdate[index] = newData\n                  setData([...dataUpdate])\n                  onUpdate(newData)\n                  resolve()\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  const newData = [...data]\n                  const index = oldData.tableData.id\n                  newData.splice(index, 1)\n                  setData([...newData])\n                  onDelete(oldData)\n                  resolve()\n                }),\n            }\n          : {}\n      }\n    />\n  )\n}\n\nconst AccountView = ({\n  canEdit,\n  conversions,\n  onDelete,\n  onLoad,\n  onUnload,\n  onUpdate,\n  student,\n  total,\n  transactions,\n}) => {\n  const [doEdit, setDoEdit] = useState(false)\n\n  const handleEditClick = () => {\n    setDoEdit(!doEdit)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    onLoad(student.username)\n  }, [student])\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <AccountHeader\n          canEdit={canEdit}\n          doEdit={doEdit}\n          onEditClick={handleEditClick}\n          student={student}\n          total={total}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TransactionList\n          conversions={conversions}\n          doEdit={doEdit}\n          onDelete={onDelete}\n          onUpdate={onUpdate}\n          transactions={transactions}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountView)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AccountView from '../AccountView'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst StudentAccount = ({ currentUser }) => {\n  return <AccountView student={currentUser} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(StudentAccount)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport agent from '../../agent'\nimport background from './../../images/songs-background.jpg'\n\nimport { SUBMIT_SONG_REQUEST } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n})\n\nconst SongRequestDialog = ({ onSubmit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit(values)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  autoFocus\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(SongRequestDialog)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  paper: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n  status: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload) => dispatch({ type: STUDENT_SONGS_PAGE_LOADED, payload }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst DataRow = ({ song, showStudent }) => {\n  const classes = useStyles()\n\n  return (\n    <TableRow>\n      <TableCell>{new Date(song.createdAt).toDateString()}</TableCell>\n      <TableCell>{song.title}</TableCell>\n      <TableCell>{song.artist}</TableCell>\n      {showStudent && (\n        <TableCell>\n          {song.student.firstName} {song.student.lastName}\n        </TableCell>\n      )}\n      <TableCell>\n        <span className={classes.status}>\n          {song.statusDescription ? (\n            <>\n              {song.status}\n              <Tooltip arrow color='primary' title={song.statusDescription}>\n                <InfoOutlined className={classes.icon} />\n              </Tooltip>\n            </>\n          ) : (\n            song.status\n          )}\n        </span>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst CourseSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={true} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='5'>\n        <Typography align='center'>\n          No songs have been requested for your period\n        </Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst UserSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={false} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='4'>\n        <Typography align='center'>You have not requested any songs</Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst StudentSongs = ({\n  course,\n  courseSongs,\n  currentUser,\n  onLoad,\n  onUnload,\n  userSongs,\n}) => {\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  const classes = useStyles()\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  useEffect(() => {\n    onLoad(agent.Songs.forStudent())\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          'Songs for ' +\n          (mySongsOnly ? currentUser.firstName : 'Period ' + course.period)\n        }\n      >\n        <SongRequestDialog />\n      </PageHeader>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Request Date</TableCell>\n              <TableCell>Song Title</TableCell>\n              <TableCell>Song Artist</TableCell>\n              {!mySongsOnly && <TableCell>Purchased by</TableCell>}\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mySongsOnly ? (\n              <UserSongs songs={userSongs} />\n            ) : (\n              <CourseSongs songs={courseSongs} />\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Collapse, IconButton, makeStyles } from '@material-ui/core'\nimport { Alert as MuiAlert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\n\nimport { ALERT_CLOSED } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch({ type: ALERT_CLOSED }),\n})\n\nconst Alert = ({ children, onClose, severity, variant }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div className={classes.alert}>\n      <Collapse in={open}>\n        <MuiAlert\n          action={\n            <IconButton\n              aria-label='close'\n              color='inherit'\n              size='small'\n              onClick={() => {\n                setOpen(false)\n                onClose()\n              }}\n            >\n              <Close fontSize='inherit' />\n            </IconButton>\n          }\n          severity={severity || 'info'}\n          variant={variant || 'outlined'}\n        >\n          {children}\n        </MuiAlert>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Alert)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport parse from 'csv-parse/lib/sync'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  filedrop: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[300],\n    borderRadius: theme.spacing(1),\n    color: theme.palette.grey[600],\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: '20px',\n    transition: 'all 0.25s ease-in-out',\n  },\n  filedropActive: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  filedropReject: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nfunction Filedrop({ onFiledrop }) {\n  const classes = useStyles()\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Due to {multiple: false} in useDropzone(), only one file will be received\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const parsedFile = parse(reader.result, {\n          columns: true,\n          skip_empty_lines: true,\n        })\n        onFiledrop(parsedFile)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    accept: 'text/csv, text/plain',\n    multiple: false,\n    onDropAccepted: onDrop,\n  })\n\n  return (\n    <div\n      {...getRootProps({\n        className: `${classes.filedrop} ${\n          isDragActive ? classes.filedropActive : ''\n        } ${isDragReject ? classes.filedropReject : ''}`,\n      })}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive && (\n        <Typography>\n          Drop a .csv file here or click to select a .csv file\n        </Typography>\n      )}\n      {isDragActive && !isDragReject && (\n        <Typography>Drop .csv file here</Typography>\n      )}\n      {isDragReject && <Typography>File type not accepted</Typography>}\n    </div>\n  )\n}\n\nexport default Filedrop\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Working...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { Publish } from '@material-ui/icons'\n\nimport Filedrop from '../Filedrop'\nimport ListErrors from '../ListErrors'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  courses: {\n    '& div': {\n      'boxShadow': theme.shadows[4],\n      'cursor': 'pointer',\n      'marginBottom': theme.spacing(1),\n      'padding': `${theme.spacing(3)}px ${theme.spacing(4)}px`,\n      'transition': 'all 0.15s ease-in-out',\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: theme.shadows[1],\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[1],\n      },\n    },\n  },\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n  courses: state.courses.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onImport: (data) =>\n    dispatch({\n      type: IMPORT_SCORES,\n      payload: agent.Scores.import(data),\n      snackbar: { message: 'Scores imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: IMPORT_SCORES_DIALOG_UNLOADED }),\n})\n\nconst ScoreImportStepper = ({ courses, onDataChange, onShowImport }) => {\n  const [file, setFile] = useState(null)\n  const [course, setCourse] = useState(null)\n  const [tasks, setTasks] = useState(null)\n\n  const classes = useStyles()\n\n  const handleCourseSelect = (slug) => {\n    setCourse(slug)\n  }\n\n  const handleFiledrop = (file) => {\n    const tasks = {}\n    Object.keys(file[0])\n      .slice(1)\n      .forEach((task) => {\n        tasks[task] = false\n      })\n    setFile(file)\n    setTasks(tasks)\n  }\n\n  const handleTaskChange = (ev) => {\n    setTasks({ ...tasks, [ev.target.name]: ev.target.checked })\n  }\n\n  // Determine if any tasks have been checked/selected\n  useEffect(() => {\n    const tasksSelected = tasks\n      ? Object.values(tasks).some((el) => el === true)\n      : false\n    onShowImport(tasksSelected)\n  }, [tasks])\n\n  // Keep the imported data object current\n  useEffect(() => {\n    onDataChange({ file, course, tasks })\n  }, [file, course, tasks])\n\n  return (\n    <>\n      {!file && !course && !tasks && (\n        <div>\n          <Typography gutterBottom>\n            Scores must be imported from a .csv file exported from Infinite\n            Campus\n          </Typography>\n          <Filedrop onFiledrop={handleFiledrop} />\n        </div>\n      )}\n\n      {file && !course && tasks && (\n        <div>\n          <Typography gutterBottom variant='body1'>\n            Select the course into which you would like to import\n          </Typography>\n          {courses.length > 0 ? (\n            <div className={classes.courses}>\n              {courses.map((course) => (\n                <div\n                  key={course.slug}\n                  onClick={() => {\n                    handleCourseSelect(course.slug)\n                  }}\n                  tabIndex='0'\n                >\n                  <Typography variant='body1'>\n                    <b>{course.name}</b> &middot; Period {course.period}\n                  </Typography>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <Alert severity='info'>\n              Please create a course before importing scores\n            </Alert>\n          )}\n        </div>\n      )}\n\n      {file && course && tasks && (\n        <FormControl component='fieldset'>\n          <Typography gutterBottom variant='body1'>\n            Select the assignments to import\n          </Typography>\n          <FormGroup>\n            {Object.keys(tasks).map((task) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={tasks[task]}\n                    onChange={handleTaskChange}\n                    name={task}\n                  />\n                }\n                key={task}\n                label={task}\n              />\n            ))}\n          </FormGroup>\n        </FormControl>\n      )}\n    </>\n  )\n}\n\nconst ImportScoresDialog = ({\n  courses,\n  errors,\n  inProgress,\n  onExit,\n  onImport,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [ready, setReady] = useState(false)\n  const [data, setData] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleDataChange = (importData) => {\n    setData(importData)\n  }\n\n  const handleShowImport = (selected) => {\n    setReady(selected)\n  }\n\n  const handleClickImport = () => {\n    // Get student usernames (student numbers)\n    const usernames = data.file\n      .map(\n        (student, index) =>\n          index > 1 && student['Assignment Name'].split('#').pop()\n      )\n      .filter((username) => username !== false)\n\n    // Prepare data to send to server\n    const parsed = { course: data.course, tasks: [] }\n    for (const taskName in data.tasks) {\n      const selected = data.tasks[taskName]\n      if (selected) {\n        const task = {\n          title: taskName,\n          totalPoints: data.file[1][taskName],\n          scores: {},\n        }\n\n        for (const username of usernames) {\n          const student = data.file.find((row) =>\n            row['Assignment Name'].endsWith(username)\n          )\n          if (student) task.scores[username] = student[taskName]\n        }\n\n        parsed.tasks.push(task)\n      }\n    }\n\n    onImport(parsed)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Publish className={classes.icon} />\n        Import scores\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Scores</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <ScoreImportStepper\n              courses={courses}\n              onDataChange={handleDataChange}\n              onShowImport={handleShowImport}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          {ready && (\n            <Button\n              color='primary'\n              disabled={inProgress}\n              onClick={handleClickImport}\n              variant='contained'\n            >\n              {inProgress ? 'Importing...' : 'Import'}\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportScoresDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Paper, TextField, makeStyles } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: STUDENT_SEARCH_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: STUDENT_SEARCH_UNLOADED }),\n})\n\nconst StudentSearch = ({ courses, onChange, onLoad, onUnload }) => {\n  const [mappedData, setMappedData] = useState([])\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const mapped = courses\n      .map((course) =>\n        course.students.map((student) => ({\n          ...student,\n          course: course.name,\n          period: course.period,\n          name: `${student.firstName} ${student.lastName}`,\n        }))\n      )\n      .flat()\n    setMappedData(mapped)\n  }, [courses])\n\n  return (\n    <Paper className={classes.search}>\n      <Autocomplete\n        autoHighlight\n        getOptionLabel={(option) => option.name}\n        groupBy={(option) => `${option.course} | Period ${option.period}`}\n        noOptionsText='No students have been added'\n        onChange={(ev, value) => onChange(value)}\n        options={mappedData}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Student'\n            placeholder='Type or select a name'\n          />\n        )}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n    </Paper>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSearch)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport AccountView from '../AccountView'\nimport Alert from '../Alert'\nimport ImportScoresDialog from '../Teacher/ImportScoresDialog'\nimport PageHeader from '../PageHeader'\nimport StudentSearch from './StudentSearch'\n\nimport { ACCOUNTS_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  importSummary: state.scores.importSummary,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: ACCOUNTS_PAGE_UNLOADED }),\n})\n\nconst TeacherAccounts = ({ importSummary, onUnload }) => {\n  const [student, setStudent] = useState(null)\n\n  const plural = (qty, unit) => `${qty} ${unit}${qty !== 1 ? 's' : ''}`\n\n  const handleStudentSelect = (student) => {\n    setStudent(student)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Accounts'>\n        <ImportScoresDialog />\n      </PageHeader>\n      {importSummary && (\n        <Alert>\n          Created {plural(importSummary.tasksCreated, 'assignment')}, imported{' '}\n          {plural(importSummary.scoresImported, 'score')}, and updated{' '}\n          {plural(importSummary.scoresUpdated, 'score')}\n        </Alert>\n      )}\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <StudentSearch onChange={handleStudentSelect} />\n        </Grid>\n        <Grid item xs={12}>\n          {student && <AccountView canEdit={true} student={student} />}\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherAccounts)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSE_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: COURSE_DIALOG_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst CourseDialog = ({\n  course,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {course ? (\n        <ActionButton action='Edit course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Create course\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: course?.name || '',\n            period: course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.number().typeError('Numbers only').required('Required'),\n          })}\n          onSubmit={async (values) => {\n            course ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {course ? 'Edit Course' : 'Create Course'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={course ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {course\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_STUDENT } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (username, courseId) =>\n    dispatch({\n      type: DELETE_STUDENT,\n      payload: agent.Students.delete(username),\n      username,\n      courseId,\n      snackbar: { message: 'Student deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteStudentAlert = ({ course, onDelete, student }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(student.username, course._id)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Delete student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Delete fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Student</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>the student's account, and</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this student. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteStudentAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Edit, PersonAdd } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_STUDENT,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_STUDENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user, courseId) =>\n    dispatch({\n      type: ADD_STUDENT,\n      payload: agent.Students.add(user, courseId),\n      courseId,\n      snackbar: { message: 'Student added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n  onUpdate: (user, courseId) =>\n    dispatch({\n      type: UPDATE_STUDENT,\n      payload: agent.Students.update(user),\n      courseId,\n      snackbar: { message: 'Student updated', variant: 'success' },\n    }),\n})\n\nconst StudentDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    const user = { ...values }\n    const courseId = course._id\n    user.role = 'student'\n    onAdd(user, courseId)\n  }\n\n  const handleSubmitUpdate = (values) => {\n    const user = { ...student, ...values }\n    const courseId = course._id\n    onUpdate(user, courseId)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {student ? (\n        <ActionButton\n          action='Edit student'\n          onClick={handleClickOpen}\n          size='small'\n        >\n          <Edit fontSize='inherit' />\n        </ActionButton>\n      ) : (\n        <ActionButton action='Add student' onClick={handleClickOpen}>\n          <PersonAdd />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            firstName: student?.firstName || '',\n            lastName: student?.lastName || '',\n            username: student?.username || '',\n            password: !student ? defaultStudentPassword : '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            password: Yup.string().required(!student ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            student ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {student ? 'Edit Student' : 'Add Student'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={student ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!student || inProgress}\n                    label='Student Number'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {student\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDialog)\n","import React from 'react'\nimport { Chip, Typography, makeStyles } from '@material-ui/core'\n\nimport DeleteStudentAlert from './DeleteStudentAlert'\nimport ResetStudentPasswordAlert from './ResetStudentPasswordAlert'\nimport StudentDialog from './StudentDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    'alignItems': 'center',\n    'borderBottom': 'solid 2px white',\n    'display': 'flex',\n    'height': theme.spacing(5),\n    'justifyContent': 'space-between',\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderBottomColor: theme.palette.secondary.main,\n    },\n  },\n  rowHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  studentUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n}))\n\nconst StudentListRow = ({ course, student }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.row}>\n      <div className={classes.rowHeader}>\n        <Chip\n          color='primary'\n          label={student.username}\n          className={classes.studentUsername}\n        />\n        <Typography>\n          {student.lastName}, {student.firstName}\n        </Typography>\n      </div>\n      <div>\n        <ResetStudentPasswordAlert student={student} />\n        <StudentDialog course={course} student={student} />\n        <DeleteStudentAlert course={course} student={student} />\n      </div>\n    </div>\n  )\n}\n\nconst CourseStudentList = ({ course }) => {\n  return (\n    <>\n      <Typography variant='h6'>Students</Typography>{' '}\n      {course.students && course.students.length > 0 ? (\n        course.students.map((student) => {\n          return (\n            <StudentListRow\n              key={student._id}\n              course={course}\n              student={student}\n            />\n          )\n        })\n      ) : (\n        <div>\n          <Typography>No students have been added to this course</Typography>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CourseStudentList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_COURSE } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      slug,\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteCourseAlert = ({ course, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(course.slug)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {course.name} Period {course.period}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this course. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteCourseAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Publish } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Filedrop from '../Filedrop'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_STUDENTS,\n  STUDENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrop: (users, courseId) =>\n    dispatch({\n      type: IMPORT_STUDENTS,\n      payload: agent.Students.import(users, courseId),\n      snackbar: { message: 'Students imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n})\n\nconst ImportStudentsDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onDrop,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleFiledrop = (file) => {\n    const column = Object.keys(file[0])\n    const users = file\n      .map((row, index) => {\n        // Parse csv data for Infinite Campus grade book export\n        if (index < 2) return null\n        const student = row[column[0]]\n        const user = {\n          firstName: student.split(',')[1].split('#')[0].trim(),\n          lastName: student.split(',')[0],\n          username: student.split('#')[1],\n          password: defaultStudentPassword,\n          role: 'student',\n        }\n        return user\n      })\n      .filter((element) => element !== null)\n    onDrop(users, course._id)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action='Import students' onClick={handleClickOpen}>\n        <Publish />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Students</DialogTitle>\n        <DialogContent>\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <>\n              <Typography gutterBottom>\n                Students can be imported from a .csv file exported from Infinite\n                Campus\n              </Typography>\n              <Filedrop onFiledrop={handleFiledrop} />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportStudentsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  UPDATE_TASK,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_TASK,\n      payload: agent.Tasks.delete(slug),\n      slug,\n      snackbar: { message: 'Assignment removed', variant: 'success' },\n    }),\n  onLoad: (courseId) =>\n    dispatch({\n      type: TASKS_DIALOG_LOADED,\n      payload: agent.Tasks.getAll(courseId),\n    }),\n  onUpdate: (task) =>\n    dispatch({\n      type: UPDATE_TASK,\n      payload: agent.Tasks.update(task),\n      snackbar: { message: 'Assignment updated', variant: 'success' },\n    }),\n})\n\nconst TasksTable = ({ course, onDelete, onLoad, onUpdate, tasks }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = tasks.map((task) => ({\n    createdAt: new Date(task.createdAt).toDateString(),\n    title: task.title,\n    totalPoints: task.totalPoints,\n    slug: task.slug,\n  }))\n\n  const [columns] = useState([\n    { title: 'Date', field: 'createdAt', editable: 'never' },\n    { title: 'Title', field: 'title', editable: 'never' },\n    { title: 'Total Points', field: 'totalPoints' },\n  ])\n\n  useEffect(() => {\n    onLoad(course._id)\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [tasks])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No assignments found for this course',\n          editRow: {\n            deleteText:\n              'Delete assignment? This will delete all scores for this assignment.',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData.slug)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksTable)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Assignment } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport TasksTable from './TasksTable'\n\nimport { TASKS_DIALOG_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: TASKS_DIALOG_UNLOADED }),\n})\n\nconst TasksDialog = ({ course, errors, inProgress, onExit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton action='Manage assignments' onClick={handleClickOpen}>\n        <Assignment />\n      </ActionButton>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Manage Assignments</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          <TasksTable course={course} />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDialog)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport CourseStudentList from './CourseStudentList'\nimport DeleteCourseAlert from './DeleteCourseAlert'\nimport ImportStudentsDialog from './ImportStudentsDialog'\nimport StudentDialog from './StudentDialog'\nimport TasksDialog from './TasksDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = ({ courses }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <TasksDialog course={course} />\n                  <StudentDialog course={course} />\n                  <ImportStudentsDialog course={course} />\n                  <CourseDialog course={course} />\n                  <DeleteCourseAlert course={course} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <CourseStudentList course={course} />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Alert from '../Alert'\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n})\n\nconst TeacherCourses = ({\n  courses,\n  importCount,\n  onLoad,\n  onUnload,\n  pageLoaded,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Courses'>\n        <CourseDialog />\n      </PageHeader>\n      {importCount !== null && <Alert>{importCount} students imported</Alert>}\n      {pageLoaded ? (\n        <Spinner message='Loading...' />\n      ) : (\n        <CourseList courses={courses} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  ButtonGroup,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { PlaylistAddCheck, ThumbDown, ThumbUp } from '@material-ui/icons'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  UPDATE_SONG_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  panel: {\n    minWidth: theme.spacing(40),\n    maxWidth: theme.spacing(60),\n  },\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  songInfo: {\n    marginBottom: theme.spacing(4),\n  },\n  statusButton: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  statusDescription: {\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  studentInfo: {\n    'alignItems': 'center',\n    'display': 'flex',\n    'marginTop': theme.spacing(4),\n    '& > div': {\n      marginRight: theme.spacing(1),\n    },\n    [theme.breakpoints.up('md')]: {\n      borderTopColor: theme.palette.primary.main,\n      borderTopStyle: 'dotted',\n      borderTopWidth: '4px',\n      paddingTop: theme.spacing(2),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  songRequestPurchaseAmount: state.common.settings.songRequestPurchaseAmount,\n  // spotifyTokens: state.common.settings.spotifyTokens,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: SONG_REQUESTS_DIALOG_UNLOADED }),\n  onSubmit: (song) =>\n    dispatch({\n      type: UPDATE_SONG_REQUEST,\n      payload: agent.Songs.update(song),\n    }),\n})\n\nconst ProcessSongRequestsDialog = ({\n  courses,\n  errors,\n  inProgress,\n  onExit,\n  onSubmit,\n  songRequestPurchaseAmount,\n  // spotifyTokens,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [song, setSong] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [statusDescription, setStatusDescription] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getLyricSearchUrl = (artist, title) => {\n    const url = `http://www.google.com/search?q=${encodeURIComponent(\n      'lyrics: ' + title + ' by ' + artist\n    )}`\n    return url\n  }\n\n  const getSpotifySearchUrl = (artist, title) => {\n    const url = `https://open.spotify.com/search/${encodeURIComponent(\n      title + ' ' + artist\n    )}`\n    return url\n  }\n\n  const getNextSong = () => {\n    setSong(null)\n    if (courses.length > 0) {\n      for (const course of courses) {\n        if (course.songs.length > 0) {\n          const nextSong = course.songs.find(\n            (song) => song.status === 'pending'\n          )\n          if (nextSong) {\n            nextSong.period = course.period\n            setSong(nextSong)\n            break\n          }\n        }\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  const handleStatusButtonClick = (status) => {\n    setStatus(status)\n  }\n\n  const handleStatusDescriptionChange = (ev) => {\n    setStatusDescription(ev.target.value)\n  }\n\n  const handleSubmit = async () => {\n    onSubmit({\n      amount: songRequestPurchaseAmount,\n      id: song._id,\n      status,\n      statusDescription,\n    })\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  useEffect(() => {\n    getNextSong()\n  }, [courses])\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <PlaylistAddCheck className={classes.icon} />\n        Process requests\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Process Song Requests</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {song ? (\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <div className={classes.songInfo}>\n                    <Typography variant='h6'>{song.title}</Typography>\n                    <Typography\n                      color='textSecondary'\n                      variant='body1'\n                      gutterBottom\n                    >\n                      Song\n                    </Typography>\n                    <Typography variant='h6'>{song.artist}</Typography>\n                    <Typography color='textSecondary' variant='body1'>\n                      Artist\n                    </Typography>\n                  </div>\n\n                  <ButtonGroup>\n                    <Button\n                      href={getLyricSearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Lyrics\n                    </Button>\n                    <Button\n                      href={getSpotifySearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Spotify\n                    </Button>\n                  </ButtonGroup>\n\n                  <div className={classes.studentInfo}>\n                    <Chip color='secondary' label={song.period} />\n                    <Typography>\n                      {song.student.firstName} {song.student.lastName}\n                    </Typography>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <Typography variant='h6'>Status</Typography>\n\n                  <ButtonGroup fullWidth size='large'>\n                    <Tooltip title='Approve' arrow>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'approved' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('approved')}\n                      >\n                        <ThumbUp />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip title='Reject' arrow>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'rejected' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('rejected')}\n                      >\n                        <ThumbDown />\n                      </Button>\n                    </Tooltip>\n                  </ButtonGroup>\n                  {status === 'approved' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Condition for Approval</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Clean version'\n                            control={<Radio />}\n                            label='Clean version'\n                          />\n                          <FormControlLabel\n                            value='Instrumental version'\n                            control={<Radio />}\n                            label='Instrumental version'\n                          />\n                          <FormControlLabel\n                            value='Picked my best guess'\n                            control={<Radio />}\n                            label='Picked my best guess'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                  {status === 'rejected' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Reason for Rejection</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Inappropriate content (language, drugs, sex, and/or violence)'\n                            control={<Radio />}\n                            label='Inappropriate content (language, drugs, sex, and/or violence)'\n                          />\n                          <FormControlLabel\n                            value='Not available on Spotify'\n                            control={<Radio />}\n                            label='Not available on Spotify'\n                          />\n                          <FormControlLabel\n                            value='other'\n                            control={<Radio />}\n                            label='Other'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Alert severity='info'>\n              <AlertTitle>All caught up!</AlertTitle>\n              There are no songs to process at this time\n            </Alert>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          {song && (\n            <Button\n              color='primary'\n              disabled={inProgress}\n              onClick={handleSubmit}\n              variant='contained'\n            >\n              {inProgress ? 'Saving...' : 'Save & Continue'}\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {song ? 'Cancel' : 'Close'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProcessSongRequestsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Chip, Tooltip } from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport ProcessSongRequestsDialog from './ProcessSongRequestsDialog'\nimport agent from '../../agent'\n\nimport {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.songs })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_SONG_REQUEST,\n      payload: agent.Songs.delete(id),\n      songId: id,\n      snackbar: { message: 'Song request removed', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forTeacher(),\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst TeacherSongs = ({ courses, onDelete, onLoad, onUnload }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = courses\n    .map((course) =>\n      course.songs.map((song) => ({\n        createdAt: new Date(song.createdAt).toDateString(),\n        title: song.title,\n        artist: song.artist,\n        purchasedBy: `${song.student.firstName} ${song.student.lastName}`,\n        period: course.period,\n        status: song.status,\n        statusDescription: song.statusDescription,\n        _id: song._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    { title: 'Request Date', field: 'createdAt', editable: 'never' },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    { title: 'Purchased by', field: 'purchasedBy', editable: 'never' },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        approved: 'approved',\n        pending: 'pending',\n        rejected: 'rejected',\n        removed: 'removed',\n      },\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <span style={{ alignItems: 'center', display: 'flex' }}>\n            {rowData.statusDescription ? (\n              <>\n                {rowData.status}\n                <Tooltip\n                  arrow\n                  color='primary'\n                  title={rowData.statusDescription}\n                >\n                  <InfoOutlined style={{ marginLeft: '8px' }} />\n                </Tooltip>\n              </>\n            ) : (\n              rowData.status\n            )}\n          </span>\n        ) : (\n          <span>{rowData}</span>\n        ),\n    },\n  ])\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <>\n      <PageHeader title='Manage Song Requests'>\n        <ProcessSongRequestsDialog />\n      </PageHeader>\n\n      <MaterialTable\n        title='Song Requests'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No song requests have been submitted',\n            editRow: {\n              deleteText: 'Delete song request?',\n            },\n          },\n        }}\n        options={{ actionsColumnIndex: -1, paging: false, grouping: true }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const dataDelete = [...data]\n              const index = oldData.tableData.id\n              dataDelete.splice(index, 1)\n              setData([...dataDelete])\n              onDelete(oldData._id)\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSongs)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst TeacherDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'teacher' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            teacher ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={teacher ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {teacher\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_TEACHER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (username) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(username),\n      username,\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteTeacherAlert = ({ onDelete, teacher }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(teacher.username)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {teacher.firstName} {teacher.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this teacher. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteTeacherAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherList = ({ teachers }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog teacher={teacher} />\n                  <DeleteTeacherAlert teacher={teacher} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Typography variant='h6'>Courses</Typography>\n                {teacher.courses && teacher.courses.length > 0 ? (\n                  teacher.courses.map((course) => {\n                    return (\n                      <div key={course._id}>\n                        <Typography>\n                          Period {course.period} | {course.name} |{' '}\n                          {course.students.length} students\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No courses have been created</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from './../PageHeader'\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n})\n\nconst ManageTeachers = ({ onLoad, onUnload, teachers }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Teachers'}>\n        <TeacherDialog />\n      </PageHeader>\n      <TeacherList teachers={teachers} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherAccounts from './Teacher/TeacherAccounts'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport TeacherSongs from './Teacher/TeacherSongs'\nimport ManageTeachers from './Admin/ManageTeachers'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n\n            <ProtectedRoute\n              path='/teacher/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/teacher/songs' component={TeacherSongs} />\n\n            <ProtectedRoute\n              path='/admin/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute path='/admin/courses' component={TeacherCourses} />\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <ProtectedRoute path='/admin/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Grid, LinearProgress, Paper, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './../Logo'\nimport LoginForm from './LoginForm'\nimport background from './../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst Login = (props) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => props.onUnload()\n  }, [])\n\n  if (props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {props.inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              <LoginForm />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  SPOTIFY_REMOVE_AUTH,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    case SPOTIFY_REMOVE_AUTH:\n      return {\n        ...state,\n        settings: action.error\n          ? state.settings\n          : { ...state.settings, spotifyTokens: undefined },\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ALERT_CLOSED,\n  ASYNC_START,\n  COURSE_DIALOG_UNLOADED,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  DELETE_STUDENT,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  STUDENT_DIALOG_UNLOADED,\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  importCount: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId) {\n          courseCopy.students = [\n            ...course.students,\n            action.payload.user,\n          ].sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ALERT_CLOSED:\n      return { ...state, importCount: null }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_STUDENT ||\n        action.subtype === ADD_COURSE ||\n        action.subtype === IMPORT_STUDENTS ||\n        action.subtype === UPDATE_COURSE ||\n        action.subtype === UPDATE_STUDENT\n      ) {\n        return { ...state, inProgress: true, errors: null }\n      } else if (action.subtype === COURSES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      }\n      break\n    case COURSE_DIALOG_UNLOADED:\n    case STUDENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case COURSES_PAGE_LOADED:\n    case STUDENT_SEARCH_LOADED:\n      return { ...state, courses: action.payload.courses, pageLoaded: false }\n    case COURSES_PAGE_UNLOADED:\n    case STUDENT_SEARCH_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter((course) => course.slug !== action.slug),\n      }\n    case DELETE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students.filter(\n            (student) => student.username !== action.username\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case IMPORT_STUDENTS:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload.course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) =>\n              course._id === action.payload.course._id\n                ? action.payload.course\n                : course\n            ),\n        errors: action.error ? action.payload.errors : null,\n        importCount: action.error ? null : action.payload.count,\n        inProgress: false,\n      }\n    case RESET_STUDENT_PASSWORD:\n      return { ...state }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      const updatedUser = action.payload.user\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students\n            .map((student) =>\n              student._id.toString() === updatedUser._id.toString()\n                ? updatedUser\n                : student\n            )\n            .sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ADD_TEACHER,\n  ADD_TRANSACTION,\n  DELETE_COURSE,\n  DELETE_SONG_REQUEST,\n  DELETE_STUDENT,\n  DELETE_TASK,\n  DELETE_TEACHER,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  SUBMIT_SONG_REQUEST,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n  UPDATE_TASK,\n  UPDATE_TEACHER,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n    case ADD_STUDENT:\n    case ADD_TEACHER:\n    case ADD_TRANSACTION:\n    case DELETE_COURSE:\n    case DELETE_SONG_REQUEST:\n    case DELETE_STUDENT:\n    case DELETE_TASK:\n    case DELETE_TEACHER:\n    case DELETE_TRANSACTION:\n    case IMPORT_SCORES:\n    case IMPORT_STUDENTS:\n    case RESET_STUDENT_PASSWORD:\n    case SETTINGS_SAVED:\n    case SUBMIT_SONG_REQUEST:\n    case UPDATE_COURSE:\n    case UPDATE_STUDENT:\n    case UPDATE_TASK:\n    case UPDATE_TEACHER:\n    case UPDATE_TRANSACTION:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  ACCOUNTS_PAGE_UNLOADED,\n  ADD_TRANSACTION,\n  ALERT_CLOSED,\n  ASYNC_START,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\nimport convertScore from '../converter'\n\nconst defaultState = {\n  conversions: null,\n  errors: null,\n  importSummary: null,\n  inProgress: false,\n  total: null,\n  transactions: null,\n}\n\nconst getTotals = (transactions, conversions) => {\n  const sumTransactions = (total, transaction) => total + transaction.amount\n  const sumScores = (total, score) => total + convertScore(score, conversions)\n\n  const bonuses = transactions.bonuses.reduce(sumTransactions, 0)\n  const purchases = transactions.purchases.reduce(sumTransactions, 0)\n  const scores = transactions.scores.reduce(sumScores, 0)\n\n  const balance = bonuses + purchases + scores\n\n  return { balance, bonuses, purchases, scores }\n}\n\nconst updateTransaction = (updated, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(updated.type)) {\n      transactions[type] = transactions[type].map((transaction) =>\n        transaction._id === updated._id ? updated : transaction\n      )\n    }\n  }\n  return transactions\n}\n\nconst addTransaction = (added, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(added.type)) {\n      transactions[type] = [added, ...transactions[type]]\n    }\n  }\n  return transactions\n}\n\nconst deleteTransaction = (deleted, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(deleted.type)) {\n      transactions[type] = transactions[type].filter(\n        (transaction) => transaction._id !== deleted._id\n      )\n    }\n  }\n  return transactions\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_VIEW_LOADED:\n      return {\n        ...state,\n        conversions: action.error ? null : action.payload.scoreConverter,\n        total: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n        transactions: action.error ? null : action.payload.transactions,\n      }\n    case ACCOUNT_VIEW_UNLOADED:\n      return { ...state, conversions: null, total: null, transactions: null }\n    case ACCOUNTS_PAGE_UNLOADED:\n    case ALERT_CLOSED:\n      return { ...state, importSummary: null }\n    case ADD_TRANSACTION:\n      const addedTransactions = !action.error\n        ? addTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(addedTransactions, state.conversions),\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_TRANSACTION ||\n        action.subtype === DELETE_TRANSACTION ||\n        action.subtype === IMPORT_SCORES ||\n        action.subtype === UPDATE_TRANSACTION\n      ) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_TRANSACTION:\n      //@todo: have server return deleted item to make reducing require less actions being passed\n      const deletedTransactions = !action.error\n        ? deleteTransaction(action.deleted, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : deletedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(deletedTransactions, state.conversions),\n      }\n    case IMPORT_SCORES:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        importSummary: action.error ? null : action.payload.results,\n        inProgress: false,\n      }\n    case IMPORT_SCORES_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TRANSACTION:\n      const updatedTransactions = !action.error\n        ? updateTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : updatedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(updatedTransactions, state.conversions),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SPOTIFY_LINKER_LOADED,\n  SPOTIFY_LINKER_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  spotifyAuthUrl: null,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SPOTIFY_LINKER_LOADED:\n      return { ...state, spotifyAuthUrl: action.payload.spotifyAuthUrl }\n    case SETTINGS_PAGE_UNLOADED:\n    case SPOTIFY_LINKER_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  TASKS_DIALOG_UNLOADED,\n  UPDATE_TASK,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  tasks: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === TASKS_DIALOG_LOADED) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.filter((task) => task.slug !== action.slug),\n      }\n    case TASKS_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        tasks: action.error ? [] : action.payload.tasks,\n      }\n    case TASKS_DIALOG_UNLOADED:\n      return defaultState\n    case UPDATE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.map((task) =>\n              task.slug === action.payload.task.slug\n                ? action.payload.task\n                : task\n            ),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_TEACHER,\n  ASYNC_START,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [...state.teachers, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_SONG_REQUEST,\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n  UPDATE_SONG_REQUEST,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  course: null,\n  courses: [],\n  courseSongs: [],\n  errors: null,\n  inProgress: false,\n  userSongs: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === UPDATE_SONG_REQUEST) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.songs = courseCopy.songs.filter(\n          (song) => song._id.toString() !== action.songId.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case SONG_REQUESTS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case SONGS_PAGE_UNLOADED:\n      return defaultState\n    case STUDENT_SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case TEACHER_SONGS_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses }\n    case UPDATE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.songs = courseCopy.songs.map((song) =>\n            song._id.toString() === action.payload.song._id.toString()\n              ? action.payload.song\n              : song\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport scores from './reducers/scores'\nimport settings from './reducers/settings'\nimport tasks from './reducers/tasks'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    common,\n    courses,\n    nav,\n    notifier,\n    scores,\n    settings,\n    tasks,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport ChemCashTheme from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={ChemCashTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Div100vh>\n            <Suspense fallback={<p>Loading...</p>}>\n              <Switch>\n                <Route exact path='/login' component={Login} />\n                <Route path='/' component={Home} />\n              </Switch>\n            </Suspense>\n          </Div100vh>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={ChemCashTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}