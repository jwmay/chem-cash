{"version":3,"sources":["agent.js","images/chemistry-background.jpg","images/chem-cash-logo.png","images/songs-background.jpg","components/Theme.js","components/Logo.js","constants/actionTypes.js","components/Header.js","components/Navigation.js","components/PageWrapper.js","components/NotFound.js","components/ProtectedRoute.js","components/ListErrors.js","components/PageHeader.js","components/Settings.js","components/ActionButton.js","components/Teacher/ResetStudentPasswordAlert.js","components/Teacher/TransactionDialog.js","converter.js","components/AccountView.js","components/Student/StudentAccount.js","components/Student/SongRequestDialog.js","components/Student/StudentSongs.js","components/Alert.js","components/Teacher/StudentSearch.js","components/Teacher/CourseSelector.js","components/Teacher/StudentsTable.js","components/Teacher/BulkTransactionsDialog.js","components/Filedrop.js","components/Spinner.js","components/Teacher/ImportScoresDialog.js","components/Teacher/UpdateAccountsMenu.js","components/Teacher/TeacherAccounts.js","components/Teacher/CourseDialog.js","components/Teacher/DeleteStudentAlert.js","components/Teacher/StudentDialog.js","components/Teacher/CourseStudentList.js","components/Teacher/DeleteCourseAlert.js","components/Teacher/ImportStudentsDialog.js","components/Teacher/TasksTable.js","components/Teacher/TasksDialog.js","components/Teacher/CourseList.js","components/Teacher/TeacherCourses.js","components/Teacher/ProcessSongRequestsDialog.js","components/Teacher/TeacherSongs.js","components/Admin/TeacherDialog.js","components/Admin/DeleteTeacherAlert.js","components/Admin/TeacherList.js","components/Admin/ManageTeachers.js","components/Home.js","components/Loading.js","components/Login/LoginForm.js","components/Login/index.js","components/Notifier.js","reducers/auth.js","reducers/common.js","reducers/courses.js","reducers/nav.js","reducers/notifier.js","reducers/scores.js","reducers/settings.js","reducers/tasks.js","reducers/teachers.js","reducers/songs.js","middleware.js","store.js","reducer.js","components/App.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","encode","encodeURIComponent","responseBody","res","body","token","tokenPlugin","req","set","requests","url","del","use","then","get","post","put","Auth","current","login","username","password","user","register","save","Courses","add","course","delete","slug","getAll","update","Scores","import","data","Settings","settings","Songs","id","forStudent","forTeacher","request","song","Spotify","getAuthUrl","removeAuth","Students","courseId","users","Tasks","task","Teachers","Transactions","transaction","addMany","transactions","_id","setToken","_token","module","exports","ChemCashTheme","createMuiTheme","breakpoints","values","md","lg","palette","primary","lightGreen","secondary","amber","overrides","MuiDialogActions","root","padding","Logo","props","alt","src","logo","ASYNC_START","LOGIN","useStyles","makeStyles","theme","title","color","flexGrow","height","marginTop","spacing","marginRight","marginBottom","connect","state","navTabValue","nav","dispatch","onClickLogout","type","classes","currentUser","AppBar","position","Container","Toolbar","className","Typography","variant","align","charAt","toUpperCase","slice","Button","onClick","bottom","width","zIndex","path","router","location","pathname","common","onTabChange","tabValue","redirectTo","value","onLoad","onUnload","userRole","role","handleTabChange","useEffect","tabFromPath","split","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","LocalAtm","QueueMusic","People","SupervisorAccount","wrapper","PageWrapper","children","NotFound","exact","component","to","alert","alertList","ListErrors","errors","Object","keys","map","key","readableKey","replace","toLowerCase","severity","headerLeft","alignItems","display","headerRight","justifyContent","pageHeader","PageHeader","Grid","container","item","xs","paper","onSubmitForm","payload","all","agent","snackbar","message","inProgress","enableReinitialize","initialValues","defaultStudentPassword","songRequestPurchaseAmount","firstName","lastName","score100","scoreConverter","score90","score80","score70","score60","score50","validationSchema","Yup","typeError","onSubmit","form","a","userSettings","100","90","80","70","60","50","40","30","20","10","0","resetForm","Fab","disabled","SaveAlt","Paper","gutterBottom","TextField","name","fullWidth","actionButton","text","ActionButton","Tooltip","action","arrow","IconButton","aria-label","ev","stopPropagation","onFocus","size","btnSize","student","useState","open","setOpen","handleClose","LockOpen","fontSize","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","scores","onAdd","typeTitle","onExit","useTheme","fullScreen","useMediaQuery","down","handleSubmitAdd","Grade","ShoppingCart","amount","description","required","convertScore","score","conversions","total","totalPoints","noZeroTotal","Math","floor","round","actions","balance","borderTop","fontStyle","textTransform","edit","backgroundColor","main","subtotal","typography","pxToRem","unit","AccountHeader","canEdit","doEdit","onEditClick","period","bonuses","purchases","Close","Edit","TransactionList","onDelete","onUpdate","setData","mapTransaction","createdAt","Date","toDateString","mappedData","mapped","bonus","purchase","mapScore","field","editable","defaultSort","columns","localization","emptyDataSourceMessage","editRow","deleteText","options","actionsColumnIndex","paging","toolbar","onRowUpdate","newData","oldData","resolve","reject","dataUpdate","tableData","onRowDelete","index","splice","deleted","setDoEdit","button","dialog","backgroundImage","background","backgroundPosition","backgroundSize","input","inputLabel","handleSubmit","Add","artist","InputLabelProps","marginLeft","paddingLeft","status","DataRow","showStudent","TableRow","TableCell","statusDescription","enterTouchDelay","InfoOutlined","CourseSongs","songs","length","colSpan","UserSongs","courseSongs","userSongs","mySongsOnly","setMySongsOnly","grid","FormControlLabel","control","Checkbox","checked","target","TableContainer","Table","TableHead","TableBody","Collapse","in","search","courses","setMappedData","students","flat","Autocomplete","autoHighlight","getOptionLabel","option","groupBy","noOptionsText","renderInput","params","placeholder","renderOption","inputValue","matches","match","parts","parse","part","style","fontWeight","highlight","shadows","boxShadow","light","onSelect","tabIndex","StudentsTable","fullName","nRowsSelected","onSelectionChange","rows","selection","up","curStudent","isClosed","isOpen","setCourse","setStudents","filedrop","grey","borderRadius","flexDirection","outline","transition","filedropActive","contrastText","filedropReject","Filedrop","onFiledrop","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","parsedFile","result","skip_empty_lines","readAsBinaryString","useDropzone","accept","multiple","onDropAccepted","getRootProps","getInputProps","isDragActive","isDragReject","minWidth","spinner","Spinner","CircularProgress","ScoreImportStepper","onDataChange","onShowImport","setFile","tasks","setTasks","handleTaskChange","tasksSelected","some","el","FormControl","FormGroup","onImport","ready","setReady","importData","selected","usernames","pop","filter","parsed","taskName","find","row","endsWith","push","UpdateAccountsMenu","menuAnchorEl","setMenuAnchorEl","menuSelection","setMenuSelection","handleMenuSelect","currentTarget","dataset","handleDialogClose","Money","Menu","anchorEl","Boolean","MenuItem","data-type","ListItemIcon","Publish","ListItemText","importSummary","setStudent","plural","qty","tasksCreated","scoresImported","scoresUpdated","handleClickOpen","handleSubmitUpdate","Delete","PersonAdd","borderBottomColor","rowHeader","studentUsername","StudentListRow","Chip","CourseStudentList","column","trim","element","minHeight","Assignment","courseDetails","courseHeader","coursePeriod","courseTitle","CourseList","expanded","setExpanded","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","Avatar","ExpansionPanelDetails","importCount","pageLoaded","maxWidth","songInfo","statusButton","studentInfo","borderTopColor","borderTopStyle","borderTopWidth","paddingTop","setSong","setStatus","setStatusDescription","handleStatusButtonClick","handleStatusDescriptionChange","nextSong","getNextSong","PlaylistAddCheck","ButtonGroup","href","getSpotifySearchUrl","ThumbUp","ThumbDown","RadioGroup","Radio","AlertTitle","songId","purchasedBy","render","rowData","renderType","lookup","approved","pending","rejected","removed","grouping","dataDelete","teachers","teacher","teacherDetails","teacherHeader","teacherUsername","teacherName","TeacherList","StudentAccount","StudentSongs","TeacherAccounts","TeacherCourses","TeacherSongs","ManageTeachers","flexFlow","overflowY","Loading","elevation","auth","submitForm","margin","page","progress","left","top","LinearProgress","Notification","enqueueSnackbar","useSnackbar","notifier","onSnackbarClose","notistackRef","React","createRef","onSnackbarDismiss","closeSnackbar","maxSnack","ref","subtype","error","defaultState","appName","viewChangeCounter","appLoaded","spotifyTokens","undefined","sortByLastName","b","localeCompare","sortByPeriod","sort","courseCopy","toString","count","updatedUser","getTotals","sumTransactions","reduce","addScores","added","curUser","curUserId","usersAdded","unionBy","addTransaction","startsWith","addBulkTransaction","deleteTransaction","updateTransaction","updated","addedTransactions","addedBulkTransactions","deletedTransactions","addedScores","results","updatedTransactions","spotifyAuthUrl","songsByUser","songsByCourse","promiseMiddleware","store","next","v","currentView","getState","skipTracking","currentState","promise","response","localStorageMiddleware","window","localStorage","setItem","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","createStore","combineReducers","connectRouter","composeWithDevTools","applyMiddleware","onRedirect","getItem","ThemeProvider","CssBaseline","fallback","Login","Home","ReactDOM","App","document","getElementById"],"mappings":"8GAAA,oDAGMA,EAAaC,IAAkBC,IAAaC,EAAOC,SAEnDC,EAEA,sCAGAC,EAASC,mBACTC,EAAe,SAACC,GAAD,OAASA,EAAIC,MAE9BC,EAAQ,KACRC,EAAc,SAACC,GACbF,GACFE,EAAIC,IAAI,gBAAR,gBAAkCH,KAIhCI,EACC,SAACC,GAAD,OACHhB,EAAWiB,IAAX,UAAkBZ,GAAlB,OAA6BW,IAAOE,IAAIN,GAAaO,KAAKX,IAFxDO,EAGC,SAACC,GAAD,OACHhB,EAAWoB,IAAX,UAAkBf,GAAlB,OAA6BW,IAAOE,IAAIN,GAAaO,KAAKX,IAJxDO,EAKE,SAACC,EAAKN,GAAN,OACJV,EACGqB,KADH,UACWhB,GADX,OACsBW,GAAON,GAC1BQ,IAAIN,GACJO,KAAKX,IATNO,EAUC,SAACC,EAAKN,GAAN,OACHV,EACGsB,IADH,UACUjB,GADV,OACqBW,GAAON,GACzBQ,IAAIN,GACJO,KAAKX,IAGNe,EAAO,CACXC,QAAS,kBAAMT,EAAa,UAC5BU,MAAO,SAACC,EAAUC,GAAX,OACLZ,EAAc,eAAgB,CAAEa,KAAM,CAAEF,WAAUC,eACpDE,SAAU,SAACD,GAAD,OAAUb,EAAc,SAAU,CAAEa,UAC9CE,KAAM,SAACF,GAAD,OAAUb,EAAa,QAAS,CAAEa,WAGpCG,EAAU,CACdC,IAAK,SAACC,GAAD,OAAYlB,EAAc,WAAY,CAAEkB,YAC7CC,OAAQ,SAACC,GAAD,OAAUpB,EAAA,mBAAyBoB,KAC3CC,OAAQ,kBAAMrB,EAAa,aAC3BsB,OAAQ,SAACJ,GAAD,OAAYlB,EAAA,mBAAyBkB,EAAOE,MAAQ,CAAEF,aAG1DK,EAAS,CACbF,OAAQ,SAACV,GAAD,OAAcX,EAAA,2BAAiCW,KACvDa,OAAQ,SAACC,GAAD,OAAUzB,EAAc,iBAAkB,CAAEyB,WAGhDC,EAAW,CAEfJ,OAAQ,SAACK,GAAD,OAAc3B,EAAa,iBAAkB,CAAE2B,eAGnDC,EAAQ,CACZT,OAAQ,SAACU,GAAD,OAAQ7B,EAAA,iBAAuB6B,KACvCC,WAAY,kBAAM9B,EAAa,mBAC/B+B,WAAY,kBAAM/B,EAAa,mBAC/BgC,QAAS,SAACC,GAAD,OAAUjC,EAAc,SAAU,CAAEiC,UAC7CX,OAAQ,SAACW,GAAD,OAAUjC,EAAA,iBAAuBiC,EAAKJ,IAAM,CAAEI,WAGlDC,EAAU,CACdC,WAAY,kBAAMnC,EAAa,kBAC/BoC,WAAY,kBAAMpC,EAAa,mBAG3BqC,EAAW,CACfpB,IAAK,SAACJ,EAAMyB,GAAP,OACHtC,EAAA,0BAAiCT,EAAO+C,IAAa,CAAEzB,UACzDM,OAAQ,SAACR,GAAD,OAAcX,EAAA,yBAA+BW,KACrDa,OAAQ,SAACe,EAAOD,GAAR,OACNtC,EAAA,iCAAwCT,EAAO+C,IAAa,CAAEC,WAChEjB,OAAQ,SAACT,GAAD,OAAUb,EAAA,iBAAuBa,EAAKF,UAAY,CAAEE,WAGxD2B,EAAQ,CACZnB,OAAQ,SAACiB,GAAD,OAActC,EAAA,0BAAgCsC,KACtDnB,OAAQ,SAACC,GAAD,OAAUpB,EAAA,iBAAuBoB,KACzCE,OAAQ,SAACmB,GAAD,OAAUzC,EAAA,iBAAuByC,EAAKrB,MAAQ,CAAEqB,WAGpDC,EAAW,CACfrB,OAAQ,kBAAMrB,EAAa,wBAC3BmB,OAAQ,SAACR,GAAD,OAAcX,EAAA,yBAA+BW,KACrDW,OAAQ,SAACT,GAAD,OAAUb,EAAA,iBAAuBa,EAAKF,UAAY,CAAEE,WAGxD8B,EAAe,CACnB1B,IAAK,SAAC2B,GAAD,OAAiB5C,EAAc,gBAAiB,CAAE4C,iBACvDC,QAAS,SAACC,GAAD,OACP9C,EAAc,qBAAsB,CAAE8C,kBACxC3B,OAAQ,SAACyB,GAAD,OAAiB5C,EAAA,wBAA8B4C,EAAYG,OACnEzB,OAAQ,SAACsB,GAAD,OACN5C,EAAA,wBAA8B4C,EAAYG,KAAO,CAAEH,kBAGxC,KACbpC,OACAQ,UACAO,SACAG,WACAE,QACAM,UACAG,WACAG,QACAE,WACAC,eACAK,SAAU,SAACC,GACTrD,EAAQqD,M,sCCrHZC,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,4PCIrCC,EAAgBC,YAAe,CACnCC,YAAa,CACXC,OAAQ,CACNC,GAAI,IACJC,GAAI,OAGRC,QAAS,CACPC,QAASC,IACTC,UAAWC,KAEbC,UAAW,CACTC,iBAAkB,CAChBC,KAAM,CACJC,QAAS,iBAMFd,I,uECjBAe,EAJF,SAACC,GACZ,OAAO,uCAAKC,IAAI,iBAAiBC,IAAKC,KAAUH,KCDrCI,EAAc,cAGdC,EAAQ,QCSfC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,MAAO,QACPC,SAAU,GAEZR,KAAM,CACJS,OAAQ,GACRC,UAAWL,EAAMM,QAAQ,GACzBC,YAAaP,EAAMM,QAAQ,GAC3BE,aAAcR,EAAMM,QAAQ,QAqCjBG,eAjCS,SAACC,GAAD,MAAY,CAClCC,YAAaD,EAAME,IAAID,gBAGE,SAACE,GAAD,MAAe,CACxCC,cAAe,kBAAMD,EAAS,CAAEE,KDzBZ,eCqDPN,EAzBA,SAACjB,GACd,IAAMwB,EAAUlB,IACVG,EAAQT,EAAMmB,YAEpB,OAAInB,EAAMyB,YAEN,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAMC,UAAWN,EAAQrB,OACzB,kBAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASH,UAAWN,EAAQf,OACxDA,GAASA,EAAMyB,OAAO,GAAGC,cAAgB1B,EAAM2B,MAAM,IAExD,kBAACC,EAAA,EAAD,CAAQ3B,MAAM,UAAU4B,QAAStC,EAAMsB,eAAvC,aAQD,Q,+DCpCLhB,EAAYC,YAAW,CAC3Ba,IAAK,CACHO,SAAU,QACVY,OAAQ,EACRC,MAAO,OACPC,OAAQ,UA2GGxB,eAvGS,SAACC,GAAD,MAAY,CAClCwB,KAAMxB,EAAMyB,OAAOC,SAASC,SAC5BpB,YAAaP,EAAM4B,OAAOrB,YAC1BN,YAAaD,EAAME,IAAID,gBAGE,SAACE,GAAD,MAAe,CACxC0B,YAAa,SAACC,EAAUC,GAAX,OACX5B,EAAS,CAAEE,KFpBe,iBEoBO2B,MAAOF,EAAUC,WAAYA,KAChEE,OAAQ,SAACH,EAAUC,GAAX,OACN5B,EAAS,CAAEE,KFxBW,aEwBO2B,MAAOF,EAAUC,WAAYA,KAC5DG,SAAU,kBAAM/B,EAAS,CAAEE,KFxBD,qBEoHbN,EAzFI,SAACjB,GAClB,IAAMwB,EAAUlB,IACV+C,EAAWrD,EAAMyB,YAAY6B,KAE7BC,EAAkB,SAACP,GACvBhD,EAAM+C,YAAYC,EAAlB,WAAgCK,EAAhC,YAA4CL,KAe9C,OAZAQ,qBAAU,WACR,IAAMC,EAAczD,EAAM0C,KAAKgB,MAAM,KAAK,GACpCV,EAAQ,OACZS,QADY,IACZA,IAA6B,YAAbJ,EAAyB,UAAY,WACjDJ,EAAU,WAAOI,EAAP,YAAmBL,GAGnC,OAFAhD,EAAMmD,OAAOH,EAAUC,GAEhB,WACLjD,EAAMoD,cAEP,IAEc,YAAbC,EAEA,kBAACM,EAAA,EAAD,CACE7B,UAAWN,EAAQJ,IACnBwC,SAAU,SAACC,EAAOC,GAChBP,EAAgBO,IAElBC,YAAU,EACVb,MAAOlD,EAAMmB,aAEb,kBAAC6C,EAAA,EAAD,CACEC,MAAM,UACNC,KAAM,kBAACC,EAAA,EAAD,MACNjB,MAAM,YAER,kBAACc,EAAA,EAAD,CACEC,MAAM,QACNC,KAAM,kBAACE,EAAA,EAAD,MACNlB,MAAM,UAER,kBAACc,EAAA,EAAD,CACEC,MAAM,WACNC,KAAM,kBAAC,IAAD,MACNhB,MAAM,cAOZ,kBAACS,EAAA,EAAD,CACE7B,UAAWN,EAAQJ,IACnBwC,SAAU,SAACC,EAAOC,GAChBP,EAAgBO,IAElBC,YAAU,EACVb,MAAOlD,EAAMmB,aAEb,kBAAC6C,EAAA,EAAD,CACEC,MAAM,WACNC,KAAM,kBAACC,EAAA,EAAD,MACNjB,MAAM,aAER,kBAACc,EAAA,EAAD,CACEC,MAAM,UACNC,KAAM,kBAACG,EAAA,EAAD,MACNnB,MAAM,YAER,kBAACc,EAAA,EAAD,CACEC,MAAM,QACNC,KAAM,kBAACE,EAAA,EAAD,MACNlB,MAAM,UAEM,UAAbG,GACC,kBAACW,EAAA,EAAD,CACEC,MAAM,WACNC,KAAM,kBAACI,EAAA,EAAD,MACNpB,MAAM,aAGV,kBAACc,EAAA,EAAD,CACEC,MAAM,WACNC,KAAM,kBAAC,IAAD,MACNhB,MAAM,iBC5HR5C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+D,QAAS,CACP1D,UAAWL,EAAMM,QAAQ,GACzBE,aAAcR,EAAMM,QAAQ,SAUjB0D,EANK,SAACxE,GACnB,IAAMwB,EAAUlB,IAEhB,OAAO,yBAAKwB,UAAWN,EAAQ+C,SAAUvE,EAAMyE,WCClCC,EAVE,SAAC1E,GAChB,OACE,kBAAC,EAAD,KACE,kBAAC4B,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAApB,gCCMOf,eAVS,SAACC,GAAD,MAAY,CAAEO,YAAaP,EAAM4B,OAAOrB,gBAUxB,iBAAO,KAAhCR,EARQ,SAACjB,GACtB,OAAKA,EAAMyB,YAIJ,kBAAC,IAAD,CAAOkD,OAAK,EAACjC,KAAM1C,EAAM0C,KAAMkC,UAAW5E,EAAM4E,YAH9C,kBAAC,IAAD,CAAUC,GAAG,S,yGCJlBvE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsE,MAAO,CACL,MAAS,OACT,uBAAwB,CACtB9D,aAAcR,EAAMM,QAAQ,KAGhCiE,UAAW,CACT/D,aAAcR,EAAMM,QAAQ,QA2BjBkE,GAvBI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdzD,EAAUlB,KAEhB,OAAI2E,EAEA,yBAAKnD,UAAWN,EAAQuD,WACrBG,OAAOC,KAAKF,GAAQG,KAAI,SAACC,GACxB,IAAMC,EAAcD,EACjBE,QAAQ,qBAAsB,SAC9BC,cACH,OACE,kBAAC,KAAD,CAAO1D,UAAWN,EAAQsD,MAAOW,SAAS,QAAQJ,IAAKA,GACpDC,EADH,IACiBL,EAAOI,QAQ3B,MCjCH/E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkF,WAAY,CACVC,WAAY,SACZC,QAAS,QAEXC,YAAa,CACXF,WAAY,SACZC,QAAS,OACTE,eAAgB,YAElBC,WAAY,CACV/E,aAAcR,EAAMM,QAAQ,QAmBjBkF,GAfI,SAAC,GAAyB,IAAvBvB,EAAsB,EAAtBA,SAAUhE,EAAY,EAAZA,MACxBe,EAAUlB,KAEhB,OACE,kBAAC2F,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,EAAGgB,UAAWN,EAAQuE,YAC7C,kBAACE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,EAAG0C,UAAWN,EAAQkE,YAC3C,kBAAC3D,EAAA,EAAD,CAAYC,QAAQ,MAAMvB,IAE5B,kBAACwF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,EAAG0C,UAAWN,EAAQqE,aAC1CpB,K,SCTHnE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0D,KAAM,CACJnD,YAAaP,EAAMM,QAAQ,IAE7BuF,MAAO,CACLvG,QAASU,EAAMM,QAAQ,GACvBE,aAAcR,EAAMM,QAAQ,QA6RjBG,gBAzRS,SAACC,GAAD,mBAAC,eACpBA,EAAM3D,UADa,IAEtBkE,YAAaP,EAAM4B,OAAOrB,YAC1BlE,SAAU2D,EAAM4B,OAAOvF,cAGE,SAAC8D,GAAD,MAAe,CACxCiF,aAAc,SAAC/I,GAAD,OACZ8D,EAAS,CACPE,KRvBwB,iBQwBxBgF,QAAStL,QAAQuL,IAAI,CACnBC,KAAMrK,KAAKO,KAAKY,GAChBkJ,KAAMnJ,SAASJ,OAAOK,KAExBmJ,SAAU,CAAEC,QAAS,iBAAkB3E,QAAS,cAEpDoB,SAAU,kBAAM/B,EAAS,CAAEE,KR/BS,+BQwSvBN,EAtQE,SAAC,GAOX,IAAD,YANJQ,EAMI,EANJA,YACAwD,EAKI,EALJA,OACA2B,EAII,EAJJA,WACAN,EAGI,EAHJA,aACAlD,EAEI,EAFJA,SACA7F,EACI,EADJA,SAEMiE,EAAUlB,KAQhB,OANAkD,qBAAU,WACR,OAAO,WACLJ,OAED,IAGD,kBAAC,IAAD,CACEyD,oBAAoB,EACpBC,cAAe,CACbC,wBAAgC,OAARxJ,QAAQ,IAARA,OAAA,EAAAA,EAAUwJ,yBAA0B,GAC5DC,2BAAmC,OAARzJ,QAAQ,IAARA,OAAA,EAAAA,EAAUyJ,4BAA6B,EAClEC,UAAWxF,EAAYwF,UACvBC,SAAUzF,EAAYyF,SACtB1K,SAAU,GACV2K,UAAkB,OAAR5J,QAAQ,IAARA,GAAA,UAAAA,EAAU6J,sBAAV,eAA2B,OAAQ,KAC7CC,SAAiB,OAAR9J,QAAQ,IAARA,GAAA,UAAAA,EAAU6J,sBAAV,eAA2B,MAAO,IAC3CE,SAAiB,OAAR/J,QAAQ,IAARA,GAAA,UAAAA,EAAU6J,sBAAV,eAA2B,MAAO,IAC3CG,SAAiB,OAARhK,QAAQ,IAARA,GAAA,UAAAA,EAAU6J,sBAAV,eAA2B,MAAO,IAC3CI,SAAiB,OAARjK,QAAQ,IAARA,GAAA,UAAAA,EAAU6J,sBAAV,eAA2B,MAAO,EAC3CK,SAAiB,OAARlK,QAAQ,IAARA,GAAA,UAAAA,EAAU6J,sBAAV,eAA2B,MAAO,GAE7CM,iBAAkBC,IAAW,CAC3BZ,uBAAwBY,MACxBX,0BAA2BW,MAAaC,UAAU,gBAClDX,UAAWU,MACXT,SAAUS,MACVnL,SAAUmL,MACVR,SAAUQ,MAAaC,UAAU,gBACjCP,QAASM,MAAaC,UAAU,gBAChCN,QAASK,MAAaC,UAAU,gBAChCL,QAASI,MAAaC,UAAU,gBAChCJ,QAASG,MAAaC,UAAU,gBAChCH,QAASE,MAAaC,UAAU,kBAElCC,SAAQ,uCAAE,WAAO1I,EAAQ2I,GAAf,eAAAC,EAAA,uDACFC,EADE,eACkB7I,IAER3C,UAAiC,YAArBiF,EAAY6B,aACjC0E,EAAaxL,SAEG,YAArBiF,EAAY6B,OACd0E,EAAaZ,eAAiB,CAC5Ba,IAAK9I,EAAOgI,SACZe,GAAI/I,EAAOkI,QACXc,GAAIhJ,EAAOmI,QACXc,GAAIjJ,EAAOoI,QACXc,GAAIlJ,EAAOqI,QACXc,GAAInJ,EAAOsI,QACXc,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,EAAG,IAGPrC,EAAa0B,GAEbF,EAAKc,UAAU,CACbzJ,OAAO,2BAAM6I,GAAP,IAAqBxL,SAAU,OAxB/B,2CAAF,yDA4BR,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYiE,MAAM,kBAChB,kBAACoI,EAAA,EAAD,CACEnI,MAAM,UACNoI,SAAUlC,EACVrF,KAAK,SACLS,QAAQ,YAER,kBAAC+G,GAAA,EAAD,CAASjH,UAAWN,EAAQ0C,OAC3B0C,EAAa,YAAc,kBAGhC,kBAAC,GAAD,CAAY3B,OAAQA,IAEE,YAArBxD,EAAY6B,MACX,kBAAC0F,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrE,EAAA,EAAD,CAAYC,QAAQ,KAAKiH,cAAY,GAArC,kBAIF,kBAAChD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,+BACNkF,KAAK,4BACL5H,KAAK,OACLS,QAAQ,WACRoH,WAAS,OAUG,YAArB3H,EAAY6B,MACX,kBAAC0F,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrE,EAAA,EAAD,CAAYC,QAAQ,KAAKiH,cAAY,GAArC,qBAIF,kBAAChD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,2BACNkF,KAAK,yBACL5H,KAAK,OACLS,QAAQ,WACRoH,WAAS,OAOG,YAArB3H,EAAY6B,MACX,kBAAC0F,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrE,EAAA,EAAD,CAAYC,QAAQ,KAAKiH,cAAY,GAArC,sBAIF,kBAAChD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,cACNkF,KAAK,WACL5H,KAAK,SACLS,QAAQ,WACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,aACNkF,KAAK,UACL5H,KAAK,SACLS,QAAQ,WACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,aACNkF,KAAK,UACL5H,KAAK,SACLS,QAAQ,WACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,aACNkF,KAAK,UACL5H,KAAK,SACLS,QAAQ,WACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,aACNkF,KAAK,UACL5H,KAAK,SACLS,QAAQ,WACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,aACNkF,KAAK,UACL5H,KAAK,SACLS,QAAQ,WACRoH,WAAS,OAOG,YAArB3H,EAAY6B,MACX,kBAAC0F,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrE,EAAA,EAAD,CAAYC,QAAQ,KAAKiH,cAAY,GAArC,oBAIF,kBAAChD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,aACNkF,KAAK,YACL5H,KAAK,OACLS,QAAQ,WACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,YACNkF,KAAK,WACL5H,KAAK,OACLS,QAAQ,WACRoH,WAAS,OAOnB,kBAACJ,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrE,EAAA,EAAD,CAAYC,QAAQ,KAAKiH,cAAY,GAArC,qBAIF,kBAAChD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEwF,UAAWsE,IACXjF,MAAM,eACNkF,KAAK,WACL5H,KAAK,WACLS,QAAQ,WACRoH,WAAS,Y,+ECxSnB9I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6I,aAAc,CACZ3I,MAAOF,EAAMlB,QAAQgK,KAAKR,cA2BfS,GAvBM,SAACvJ,GACpB,IAAMwB,EAAUlB,KAOhB,OACE,kBAACkJ,GAAA,EAAD,CAAS/I,MAAOT,EAAMyJ,OAAQC,OAAK,GACjC,kBAACC,GAAA,EAAD,CACEC,aAAY5J,EAAMyJ,OAClB3H,UAAS,UAAKN,EAAQ6H,aAAb,YAA6BrJ,EAAM8B,WAC5CQ,QAVc,SAACuH,GACnBA,EAAGC,kBACH9J,EAAMsC,WASFyH,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBE,KAAMhK,EAAMgK,MAEXhK,EAAMyE,Y,4DCqEAxD,gBA9ES,SAACC,GAAD,MAAY,CAClC6F,uBAAwB7F,EAAM4B,OAAOvF,SAASwJ,2BAGrB,SAAC1F,GAAD,MAAe,CACxCwG,SAAU,SAACpL,GAAD,OACR4E,EAAS,CACPE,KViBgC,yBUhBhCgF,QAASE,KAAMxI,SAASf,OAAOT,GAC/BiK,SAAU,CAAEC,QAAS,iBAAkB3E,QAAS,iBAqEvCf,EAjEmB,SAAC,GAK5B,IAJLgJ,EAII,EAJJA,QACAlD,EAGI,EAHJA,uBACAc,EAEI,EAFJA,SACAqC,EACI,EADJA,QACI,EACoBC,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,KAOEC,EAAc,WAClBD,GAAQ,IASV,OACE,oCACE,kBAAC,GAAD,CACEZ,OAAO,iBACPnH,QAlBkB,WACtB+H,GAAQ,IAkBJL,KAAI,OAAEC,QAAF,IAAEA,IAAW,SAEjB,kBAACM,GAAA,EAAD,CAAUC,SAAS,aAErB,kBAACC,GAAA,EAAD,CACEL,KAAMA,EACNM,QAASJ,EACThI,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBC,QAAS,SAACF,GAAD,OAAQA,EAAGC,oBAEpB,kBAACa,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,4BACuB,IACrB,2BACGX,EAAQjD,UADX,IACuBiD,EAAQhD,UAHjC,kBAKiB,gCAASH,GAL1B,MAQF,kBAAC+D,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEC,QAjCW,WACnB,IAAM7F,EAAI,2BAAQyN,GAAR,IAAiB1N,SAAUuK,IACrCc,EAASpL,GACT4N,GAAQ,IA+BA3J,MAAM,UACNsB,QAAQ,YACR+I,WAAS,GAJX,SAQA,kBAAC1I,EAAA,EAAD,CAAQC,QAASgI,EAAatI,QAAQ,aAAtC,gB,uCCzDJ1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCX,KAAM,OAuJOoB,gBAlJS,SAACC,GAAD,sBACnBA,EAAM8J,WAGgB,SAAC3J,GAAD,MAAe,CACxC4J,MAAO,SAACzM,GAAD,OACL6C,EAAS,CACPE,KXyByB,kBWxBzBgF,QAASE,KAAMlI,aAAa1B,IAAI2B,GAChCkI,SAAU,CACRC,QAAQ,GAAD,OAAKnI,EAAY0M,UAAjB,UACPlJ,QAAS,cAGfmJ,OAAQ,kBAAM9J,EAAS,CAAEE,KXsBgB,oCW8G5BN,EAjIW,SAAC,GAQpB,IAPLgE,EAOI,EAPJA,OACA2B,EAMI,EANJA,WACAqE,EAKI,EALJA,MACAE,EAII,EAJJA,OACAjB,EAGI,EAHJA,QACA1L,EAEI,EAFJA,YACA+C,EACI,EADJA,KACI,EACoB4I,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,KAGE7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAOlDjB,GANUhK,KAMI,WAClB+J,GAAQ,KAGJmB,EAAkB,SAACrM,GACvB8L,EAAM,2BAAK9L,GAAN,IAAc+K,UAAS3I,KAAMA,EAAKiE,cAAe0F,UAAW3J,MAYnE,OALAiC,qBAAU,WAEHoD,GAAe3B,GAAQoF,GAAQ,KACnC,CAACzD,IAGF,oCACE,kBAAC,GAAD,CACE6C,OAAM,cAASlI,EAAKiE,eACpBlD,QAzBkB,WACtB+H,GAAQ,KA0BM,UAAT9I,GAAoB,kBAACkK,GAAA,EAAD,MACX,aAATlK,GAAuB,kBAACmK,GAAA,EAAD,OAG1B,kBAACjB,GAAA,EAAD,CACEY,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAAC,IAAD,CACEtD,cAAe,CACb6E,QAAmB,OAAXnN,QAAW,IAAXA,OAAA,EAAAA,EAAamN,SAAU,GAC/BC,aAAwB,OAAXpN,QAAW,IAAXA,OAAA,EAAAA,EAAaoN,cAAe,IAE3ClE,iBAAkBC,IAAW,CAC3BgE,OAAQhE,MAAaC,UAAU,gBAAgBiE,SAAS,YACxDD,YAAajE,MAAakE,SAAS,cAErChE,SAAQ,uCAAE,WAAO1I,GAAP,SAAA4I,EAAA,sDACRvJ,GAA2CgN,EAAgBrM,GADnD,2CAAF,uDAIR,kBAAC,IAAD,KACE,kBAACwL,GAAA,EAAD,eACMnM,EAAc,OAAS,MAD7B,YACsC+C,IAEtC,kBAACqJ,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACpB,kBAACgB,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE2L,WAAWvM,EACXkC,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,cACNkF,KAAK,cACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,SACNkF,KAAK,SACL5H,KAAK,OACL6H,WAAS,OAKjB,kBAAC0B,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEyG,SAAUlC,EACVlG,MAAM,UACNa,KAAK,SACLS,QAAQ,aAEPxD,EACGoI,EACE,cACA,SACFA,EACA,YACA,OAEN,kBAACvE,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,kBC7JC8J,GARM,SAACC,EAAOC,GAC3B,IAAMC,EAAQF,EAAM1N,KAAK6N,YACnBC,EAAwB,IAAVF,EAAcA,EAAQ,EAC1C,OAAOD,EAC4D,GAAjEI,KAAKC,MAAMD,KAAKE,MAAOP,EAAM7I,MAAQiJ,EAAe,KAAO,MCczD7L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+L,QAAS,CACP5G,WAAY,aACZC,QAAS,OACTE,eAAgB,YAElB0G,QAAS,CACP,UAAa,SACb,SAAU,CACRC,UAAW,iBACXC,UAAW,SACXC,cAAe,cAGnBC,KAAM,CACJC,gBAAiBrM,EAAMlB,QAAQC,QAAQuN,MAEzCzG,MAAO,CACLvG,QAASU,EAAMM,QAAQ,IAEzBiM,SAAU,CACR,SAAY,WACZ,UAAa,SACb,QAAS,CACPpL,SAAU,WACVY,QAAS/B,EAAMM,QAAQ,IAEzB,SAAU,CACR0J,SAAUhK,EAAMwM,WAAWC,QAAQ,IACnCP,UAAW,SACXC,cAAe,cAGnBO,KAAM,CACJ1C,SAAUhK,EAAMwM,WAAWC,QAAQ,SAgCjCE,GAAgB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,YAAapD,EAAqB,EAArBA,QAAS+B,EAAY,EAAZA,MACxDzK,EAAUlB,KAEhB,OACE,kBAAC0I,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC2C,EAAA,EAAD,CAAYkH,cAAY,EAACjH,QAAQ,MAC9BkI,EAAQjD,UADX,IACuBiD,EAAQhD,UAE9BgD,EAAQpN,QACP,kBAACiF,EAAA,EAAD,CAAYrB,MAAM,gBAAgBsB,QAAQ,aACvCkI,EAAQpN,OADX,gBACoCoN,EAAQqD,SAIhD,kBAACtH,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,EAAG8G,WAAS,GACjC,kBAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAItE,UAAWN,EAAQgL,SACpC,kBAACzK,EAAA,EAAD,CACErB,OAAY,OAALuL,QAAK,IAALA,OAAA,EAAAA,EAAOO,UAAW,EAAI,UAAY,YACzCxK,QAAQ,MAFV,OAIGiK,QAJH,IAIGA,OAJH,EAIGA,EAAOO,QAJV,IAImB,0BAAM1K,UAAWN,EAAQ0L,MAAzB,QAEnB,kBAACnL,EAAA,EAAD,CAAYrB,MAAM,gBAAgBsB,QAAQ,aAA1C,YAIF,kBAACiE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGtE,UAAWN,EAAQuL,UACnC,kBAAChL,EAAA,EAAD,CAAYrB,MAAM,UAAUsB,QAAQ,SAApC,OACGiK,QADH,IACGA,OADH,EACGA,EAAOuB,QADV,IACmB,0BAAM1L,UAAWN,EAAQ0L,MAAzB,QAEnB,kBAACnL,EAAA,EAAD,CAAYrB,MAAM,UAAUsB,QAAQ,aAApC,YAIF,kBAACiE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGtE,UAAWN,EAAQuL,UACnC,kBAAChL,EAAA,EAAD,CAAYrB,MAAM,YAAYsB,QAAQ,SAAtC,OACGiK,QADH,IACGA,OADH,EACGA,EAAOwB,UADV,IACqB,0BAAM3L,UAAWN,EAAQ0L,MAAzB,QAErB,kBAACnL,EAAA,EAAD,CAAYrB,MAAM,YAAYsB,QAAQ,aAAtC,cAIF,kBAACiE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGtE,UAAWN,EAAQuL,UACnC,kBAAChL,EAAA,EAAD,CAAYrB,MAAM,UAAUsB,QAAQ,SAApC,OACGiK,QADH,IACGA,OADH,EACGA,EAAOjB,OADV,IACkB,0BAAMlJ,UAAWN,EAAQ0L,MAAzB,QAElB,kBAACnL,EAAA,EAAD,CAAYrB,MAAM,UAAUsB,QAAQ,aAApC,iBAKHoL,GACC,kBAACnH,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,EAAG0C,UAAWN,EAAQ+K,SAC3C,kBAAC,GAAD,CAAmBrC,QAASA,EAAS3I,KAAK,UAC1C,kBAAC,GAAD,CAAmB2I,QAASA,EAAS3I,KAAK,aAC1C,kBAAC,GAAD,CACEkI,OAAQ4D,EAAS,iBAAmB,oBACpCvL,UAAWuL,GAAU7L,EAAQoL,KAC7BtK,QAASgL,GAERD,EAAS,kBAACK,GAAA,EAAD,MAAY,kBAACC,GAAA,EAAD,OAExB,kBAAC,GAAD,CAA2B1D,QAAQ,SAASC,QAASA,QAQ3D0D,GAAkB,SAAC,GAMlB,IALL5B,EAKI,EALJA,YACAqB,EAII,EAJJA,OACAQ,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACApP,EACI,EADJA,aACI,EACoByL,mBAAS,IAD7B,oBACG9M,EADH,KACS0Q,EADT,KAGEC,EAAiB,SAACxP,GAAD,MAAkB,CACvCmN,OAAQnN,EAAYmN,OACpBsC,UAAW,IAAIC,KAAK1P,EAAYyP,WAAWE,eAC3CvC,YAAapN,EAAYoN,YACzBrK,KAAM/C,EAAY+C,KAClB5C,IAAKH,EAAYG,MAWbyP,EAAa,SAAC1P,GAAkB,IAC5B8O,EAA+B9O,EAA/B8O,QAASC,EAAsB/O,EAAtB+O,UAAWzC,EAAWtM,EAAXsM,OACtBqD,EAAM,uBACPb,EAAQpI,KAAI,SAACkJ,GAAD,OAAWN,EAAeM,OAD/B,aAEPb,EAAUrI,KAAI,SAACmJ,GAAD,OAAcP,EAAeO,QAEhD,OAAIlB,EACKgB,EAED,GAAN,oBAAWA,GAAX,aAAsBrD,EAAO5F,KAAI,SAAC2G,GAAD,OAjBpB,SAACA,GAAD,MAAY,CAC3BJ,OAAQG,GAAaC,EAAOC,GAC5BiC,WAAW,IAAIC,MAAOC,eACtBvC,YAAaG,EAAM1N,KAAKoC,MACxBc,KAAM,cAawCiN,CAASzC,SA5BrD,EAgCc5B,mBAAS,CACzB,CACE1J,MAAO,OACPgO,MAAO,YACPC,SAAU,QACVC,YAAa,QAEf,CAAElO,MAAO,cAAegO,MAAO,eAC/B,CAAEhO,MAAO,SAAUgO,MAAO,UAC1B,CAAEhO,MAAO,OAAQgO,MAAO,OAAQC,SAAU,WATrCE,EAhCH,qBAgDJ,OAJApL,qBAAU,WACR9E,GAAgBqP,EAAQK,EAAW1P,MAClC,CAAC2O,EAAQ3O,IAGV,kBAAC,KAAD,CACEkQ,QAASA,EACTvR,KAAMA,EACNwR,aAAc,CACZtT,KAAM,CACJuT,uBAAwB,wBACxBC,QAAS,CACPC,WAAY,8BAIlBC,QAAS,CAAEC,oBAAqB,EAAGC,QAAQ,EAAOC,SAAS,GAC3DV,SACErB,EACI,CACEgC,YAAa,SAACC,EAASC,GAAV,OACX,IAAItU,SAAQ,SAACuU,EAASC,GACpB,IAAMC,EAAU,aAAOrS,GAEvBqS,EADcH,EAAQI,UAAUlS,IACZ6R,EACpBvB,EAAQ,aAAI2B,IACZ5B,EAASwB,GACTE,QAEJI,YAAa,SAACL,GAAD,OACX,IAAItU,SAAQ,SAACuU,EAASC,GACpB,IAAMH,EAAO,aAAOjS,GACdwS,EAAQN,EAAQI,UAAUlS,GAChC6R,EAAQQ,OAAOD,EAAO,GACtB9B,EAAQ,aAAIuB,IACZzB,EAAS0B,GACTC,SAGN,MA6DGvO,gBA1PS,SAACC,GAAD,MAAY,CAClC8K,YAAa9K,EAAM8J,OAAOgB,YAC1BC,MAAO/K,EAAM8J,OAAOiB,MACpBvN,aAAcwC,EAAM8J,OAAOtM,iBAGF,SAAC2C,GAAD,MAAe,CACxCwM,SAAU,SAACrP,GAAD,OACR6C,EAAS,CACPE,KbG4B,qBaF5BgF,QAASE,KAAMlI,aAAaxB,OAAOyB,GACnCuR,QAASvR,EACTkI,SAAU,CAAEC,QAAS,sBAAuB3E,QAAS,cAEzDmB,OAAQ,SAAC5G,GAAD,OACN8E,EAAS,CACPE,KbT6B,sBaU7BgF,QAASE,KAAMtJ,OAAOF,OAAOV,MAEjC6G,SAAU,kBAAM/B,EAAS,CAAEE,KbXQ,2BaYnCuM,SAAU,SAACtP,GAAD,OACR6C,EAAS,CACPE,KbT4B,qBaU5BgF,QAASE,KAAMlI,aAAarB,OAAOsB,GACnCkI,SAAU,CAAEC,QAAS,sBAAuB3E,QAAS,iBAkO5Cf,EAvDK,SAAC,GAUd,IATLmM,EASI,EATJA,QACApB,EAQI,EARJA,YACA6B,EAOI,EAPJA,SACA1K,EAMI,EANJA,OACAC,EAKI,EALJA,SACA0K,EAII,EAJJA,SACA5D,EAGI,EAHJA,QACA+B,EAEI,EAFJA,MACAvN,EACI,EADJA,aACI,EACwByL,oBAAS,GADjC,oBACGkD,EADH,KACW2C,EADX,KAiBJ,OAVAxM,qBAAU,WACR,OAAO,WACLJ,OAED,IAEHI,qBAAU,WACRL,EAAO+G,EAAQ3N,YACd,CAAC2N,IAGF,oCACGxL,GACC,kBAACuH,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEgH,QAASA,EACTC,OAAQA,EACRC,YAtBY,WACtB0C,GAAW3C,IAsBDnD,QAASA,EACT+B,MAAOA,KAGX,kBAAChG,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACE4F,YAAaA,EACbqB,OAAQA,EACRQ,SAAUA,EACVC,SAAUA,EACVpP,aAAcA,UC7RbuC,gBARS,SAACC,GAAD,MAAY,CAClCO,YAAaP,EAAM4B,OAAOrB,gBAOY,iBAAO,KAAhCR,EAJQ,SAAC,GAAqB,IAAnBQ,EAAkB,EAAlBA,YACxB,OAAO,kBAAC,GAAD,CAAayI,QAASzI,O,yHCYzBnB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyP,OAAQ,CACNjP,aAAcR,EAAMM,QAAQ,GAC5BC,YAAaP,EAAMM,QAAQ,IAE7BoP,OAAQ,CACNC,gBAAgB,OAAD,OAASC,KAAT,KACfC,mBAAoB,gBACpBC,eAAgB,QAChB5P,MAAO,QACPZ,QAASU,EAAMM,QAAQ,IAEzBoD,KAAM,CACJnD,YAAaP,EAAMM,QAAQ,IAE7ByP,MAAO,CACL,gBAAmB,oBACnB,aAAgB/P,EAAMM,QAAQ,GAC9B,OAAU,GACV,UAAW,CACTJ,MAAOF,EAAMlB,QAAQG,UAAUqN,OAGnC0D,WAAY,CACV9P,MAAO,aAiIIO,gBAAQ,iBAAO,MA7HH,SAACI,GAAD,MAAe,CACxCwG,SAAU,SAAChK,GAAD,OACRwD,EAAS,CACPE,Kf1B6B,sBe2B7BgF,QAASE,KAAMjJ,MAAMI,QAAQC,GAC7B6I,SAAU,CAAEC,QAAS,iBAAkB3E,QAAS,iBAwHvCf,EApHW,SAAC,GAAkB,IAAhB4G,EAAe,EAAfA,SAAe,EAClBsC,oBAAS,GADS,oBACnCC,EADmC,KAC7BC,EAD6B,KAGpC7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAMVgK,EAAc,WAClBD,GAAQ,IAGJoG,EAAe,SAACtR,GACpB0I,EAAS1I,GACTkL,GAAQ,IAGV,OACE,oCACE,kBAACxB,EAAA,EAAD,CAAKnI,MAAM,UAAU4B,QAfD,WACtB+H,GAAQ,IAcyCrI,QAAQ,YACrD,kBAAC0O,GAAA,EAAD,CAAK5O,UAAWN,EAAQ0C,OAD1B,cAIA,kBAACuG,GAAA,EAAD,CACEjJ,QAAS,CACP6E,MAAO7E,EAAQ0O,QAEjB7E,WAAYA,EACZjB,KAAMA,EACNM,QAASJ,GAET,kBAACvI,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASvB,MAAM,YAAYuI,cAAY,GAAtE,mBAGA,kBAAClH,EAAA,EAAD,CAAYC,QAAQ,QAAQiH,cAAY,GAAxC,uHAIA,kBAAC,IAAD,CACEnC,cAAe,CACb6J,OAAQ,GACRlQ,MAAO,IAETiH,iBAAkBC,IAAW,CAC3BgJ,OAAQhJ,MAAakE,SAAS,YAC9BpL,MAAOkH,MAAakE,SAAS,cAE/BhE,SAAQ,uCAAE,WAAO1I,GAAP,SAAA4I,EAAA,sDACR0I,EAAatR,GADL,2CAAF,uDAIR,kBAAC,IAAD,KACE,kBAAC8G,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE2L,WAAS,EACTjJ,UAAWN,EAAQ+O,MACnB7P,MAAM,UACNkE,UAAWsE,IACX0H,gBAAiB,CACfpP,QAAS,CACP3B,KAAM2B,EAAQgP,aAGlBvM,MAAM,aACNkF,KAAK,QACL5H,KAAK,OACLS,QAAQ,SACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE0C,UAAWN,EAAQ+O,MACnB7P,MAAM,UACNkE,UAAWsE,IACX0H,gBAAiB,CACfpP,QAAS,CACP3B,KAAM2B,EAAQgP,aAGlBvM,MAAM,SACNkF,KAAK,SACL5H,KAAK,OACLS,QAAQ,SACRoH,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC/D,EAAA,EAAD,CACEP,UAAWN,EAAQyO,OACnBvP,MAAM,UACNa,KAAK,SACLS,QAAQ,aAJV,OAQA,kBAACK,EAAA,EAAD,CACEP,UAAWN,EAAQyO,OACnB3N,QAASgI,EACTtI,QAAQ,aAHV,mBCnIV1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0D,KAAM,CACJ2M,WAAYrQ,EAAMM,QAAQ,IAE5BuF,MAAO,CACLyK,YAAatQ,EAAMM,QAAQ,GAC3BE,aAAcR,EAAMM,QAAQ,IAE9BiQ,OAAQ,CACNpL,WAAY,SACZC,QAAS,YAcPoL,GAAU,SAAC,GAA2B,IAAzBnT,EAAwB,EAAxBA,KAAMoT,EAAkB,EAAlBA,YACjBzP,EAAUlB,KAEhB,OACE,kBAAC4Q,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAY,IAAIjD,KAAKrQ,EAAKoQ,WAAWE,gBACrC,kBAACgD,GAAA,EAAD,KAAYtT,EAAK4C,OACjB,kBAAC0Q,GAAA,EAAD,KAAYtT,EAAK8S,QAChBM,GACC,kBAACE,GAAA,EAAD,KACGtT,EAAKqM,QAAQjD,UADhB,IAC4BpJ,EAAKqM,QAAQhD,UAG3C,kBAACiK,GAAA,EAAD,KACE,0BAAMrP,UAAWN,EAAQuP,QACtBlT,EAAKuT,kBACJ,oCACGvT,EAAKkT,OACN,kBAACvH,GAAA,EAAD,CACEE,OAAK,EACLhJ,MAAM,UACN2Q,gBAAiB,EACjB5Q,MAAO5C,EAAKuT,mBAEZ,kBAACE,GAAA,EAAD,CAAcxP,UAAWN,EAAQ0C,SAIrCrG,EAAKkT,WAQXQ,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClBA,EAAMC,OAAS,EACbD,EAAMpM,KAAI,SAACvH,GAAD,OACR,kBAAC,GAAD,CAASwH,IAAKxH,EAAKc,IAAKd,KAAMA,EAAMoT,aAAa,OAGnD,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWO,QAAQ,KACjB,kBAAC3P,EAAA,EAAD,CAAYE,MAAM,UAAlB,mDAOF0P,GAAY,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OAChBA,EAAMC,OAAS,EACbD,EAAMpM,KAAI,SAACvH,GAAD,OACR,kBAAC,GAAD,CAASwH,IAAKxH,EAAKc,IAAKd,KAAMA,EAAMoT,aAAa,OAGnD,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWO,QAAQ,KACjB,kBAAC3P,EAAA,EAAD,CAAYE,MAAM,UAAlB,uCAiFOhB,gBAtJS,SAACC,GAAD,mBAAC,eACpBA,EAAMsQ,OADa,IAEtB/P,YAAaP,EAAM4B,OAAOrB,iBAGD,SAACJ,GAAD,MAAe,CACxC8B,OAAQ,SAACoD,GAAD,OAAalF,EAAS,CAAEE,KhBtBO,4BgBsB0BgF,aACjEnD,SAAU,kBAAM/B,EAAS,CAAEE,KhBxBM,4BgBuKpBN,EA5EM,SAAC,GAOf,IANLnE,EAMI,EANJA,OACA8U,EAKI,EALJA,YACAnQ,EAII,EAJJA,YACA0B,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACAyO,EACI,EADJA,UACI,EACkC1H,oBAAS,GAD3C,oBACG2H,EADH,KACgBC,EADhB,KAGEvQ,EAAUlB,KAchB,OARAkD,qBAAU,WAGR,OAFAL,EAAOsD,KAAMjJ,MAAME,cAEZ,WACL,OAAO0F,OAER,IAGD,oCACE,kBAAC,GAAD,CACE3C,MACE,cACCqR,EAAcrQ,EAAYwF,UAAY,UAAYnK,EAAOyQ,SAG5D,kBAAC,GAAD,OAGF,kBAACvE,GAAA,EAAD,CAAOlH,UAAWN,EAAQ6E,OACxB,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,EAAGgB,UAAWN,EAAQwQ,MAC7C,kBAAC/L,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAItE,UAAWN,EAAQwQ,MACpC,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAASN,EACTlO,SA9Be,SAACC,GAC9BkO,EAAelO,EAAMwO,OAAOD,UA8BdjJ,KAAK,gBAGTlF,MAAM,0BAMd,kBAACqO,GAAA,EAAD,CAAgB1N,UAAWoE,MACzB,kBAACuJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACtB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,mBACA,kBAACA,GAAA,EAAD,qBACEW,GAAe,kBAACX,GAAA,EAAD,qBACjB,kBAACA,GAAA,EAAD,iBAGJ,kBAACsB,GAAA,EAAD,KACGX,EACC,kBAAC,GAAD,CAAWN,MAAOK,IAElB,kBAAC,GAAD,CAAaL,MAAOI,W,UC/K5BtR,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsE,MAAO,CACL9D,aAAcR,EAAMM,QAAQ,QAuCjBG,gBAAQ,iBAAO,MAnCH,SAACI,GAAD,MAAe,CACxCqJ,QAAS,kBAAMrJ,EAAS,CAAEE,KjBKA,qBiB6BbN,EA/BD,SAAC,GAA8C,IAA5CwD,EAA2C,EAA3CA,SAAUiG,EAAiC,EAAjCA,QAASjF,EAAwB,EAAxBA,SAAUzD,EAAc,EAAdA,QACtCR,EAAUlB,KAD0C,EAElC6J,oBAAS,GAFyB,oBAEnDC,EAFmD,KAE7CC,EAF6C,KAI1D,OACE,yBAAKvI,UAAWN,EAAQsD,OACtB,kBAAC4N,GAAA,EAAD,CAAUC,GAAIvI,GACZ,kBAAC,KAAD,CACEX,OACE,kBAACE,GAAA,EAAD,CACEC,aAAW,QACXlJ,MAAM,UACNsJ,KAAK,QACL1H,QAAS,WACP+H,GAAQ,GACRK,MAGF,kBAACgD,GAAA,EAAD,CAAOlD,SAAS,aAGpB/E,SAAUA,GAAY,OACtBzD,QAASA,GAAW,YAEnByC,Q,8DC5BLnE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoS,OAAQ,CACN9S,QAASU,EAAMM,QAAQ,QA+EZG,gBA3ES,SAACC,GAAD,MAAY,CAClC2R,QAAS3R,EAAM2R,QAAQA,YAGE,SAACxR,GAAD,MAAe,CACxC8B,OAAQ,kBACN9B,EAAS,CAAEE,KlBgDsB,wBkBhDOgF,QAASE,KAAM7J,QAAQK,YACjEmG,SAAU,kBAAM/B,EAAS,CAAEE,KlBgDU,gCkBoBxBN,EAjEO,SAAC,GAA6C,IAA3C4R,EAA0C,EAA1CA,QAASjP,EAAiC,EAAjCA,SAAUT,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAAe,EAC7B+G,mBAAS,IADoB,oBAC1DiE,EAD0D,KAC9C0E,EAD8C,KAG3DtR,EAAUlB,KAwBhB,OAtBAkD,qBAAU,WAGR,OAFAL,IAEO,WACLC,OAED,IAEHI,qBAAU,WACR,IAAM6K,EAASwE,EACZzN,KAAI,SAACtI,GAAD,OACHA,EAAOiW,SAAS3N,KAAI,SAAC8E,GAAD,mBAAC,eAChBA,GADe,IAElBpN,OAAQA,EAAOqM,KACfoE,OAAQzQ,EAAOyQ,OACfpE,KAAK,GAAD,OAAKe,EAAQjD,UAAb,YAA0BiD,EAAQhD,kBAGzC8L,OACHF,EAAczE,KACb,CAACwE,IAGF,kBAAC7J,GAAA,EAAD,CAAOlH,UAAWN,EAAQoR,QACxB,kBAACK,GAAA,EAAD,CACEC,eAAa,EACbC,eAAgB,SAACC,GAAD,OAAYA,EAAOjK,MACnCkK,QAAS,SAACD,GAAD,gBAAeA,EAAOtW,OAAtB,qBAAyCsW,EAAO7F,SACzD+F,cAAc,8BACd1P,SAAU,SAACiG,EAAI3G,GAAL,OAAeU,EAASV,IAClC+L,QAASb,EACTmF,YAAa,SAACC,GAAD,OACX,kBAACtK,GAAA,EAAD,iBACMsK,EADN,CAEEvP,MAAM,UACNwP,YAAY,4BAGhBC,aAAc,SAACN,EAAD,GAA6B,IAAlBO,EAAiB,EAAjBA,WACjBC,EAAUC,KAAMT,EAAOjK,KAAMwK,GAC7BG,EAAQC,KAAMX,EAAOjK,KAAMyK,GAEjC,OACE,6BACGE,EAAM1O,KAAI,SAAC4O,EAAMnE,GAAP,OACT,0BACExK,IAAKwK,EACLoE,MAAO,CAAEC,WAAYF,EAAKG,UAAY,IAAM,MAE3CH,EAAK1K,iB,qEC/ElBhJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqS,QAAS,CACP,QAAS,CACP,UAAarS,EAAM4T,QAAQ,GAC3B,OAAU,UACV,aAAgB5T,EAAMM,QAAQ,GAC9B,QAAU,GAAV,OAAcN,EAAMM,QAAQ,GAA5B,cAAoCN,EAAMM,QAAQ,GAAlD,MACA,WAAc,wBACd,UAAW,CACT+L,gBAAiBrM,EAAMlB,QAAQC,QAAQuN,KACvCuH,UAAW7T,EAAM4T,QAAQ,IAE3B,UAAW,CACTvH,gBAAiBrM,EAAMlB,QAAQC,QAAQ+U,MACvCD,UAAW7T,EAAM4T,QAAQ,UA2ClBnT,gBArCS,SAACC,GAAD,MAAY,CAClC2R,QAAS3R,EAAM2R,QAAQA,YAoCe,iBAAO,KAAhC5R,EAjCQ,SAAC,GAA2B,IAAzB4R,EAAwB,EAAxBA,QAAS0B,EAAe,EAAfA,SAC3B/S,EAAUlB,KAEhB,OACE,6BACE,kBAACyB,EAAA,EAAD,CAAYkH,cAAY,EAACjH,QAAQ,MAAjC,mBAGC6Q,EAAQpB,OAAS,EAChB,yBAAK3P,UAAWN,EAAQqR,SACrBA,EAAQzN,KAAI,SAACtI,GAAD,OACX,yBACEuI,IAAKvI,EAAOE,KACZsF,QAAS,WACPiS,EAASzX,IAEX0X,SAAS,KAET,kBAACzS,EAAA,EAAD,CAAYC,QAAQ,SAClB,2BAAIlF,EAAOqM,MADb,gBACwCrM,EAAOyQ,aAMrD,kBAAC,KAAD,CAAO9H,SAAS,QAAhB,kDCdOgP,GArCO,SAAC,GAA0B,IAAxB3X,EAAuB,EAAvBA,OAAQyX,EAAe,EAAfA,SAAe,EACtBpK,mBAAS,IADa,oBACvC9M,EADuC,KACjC0Q,EADiC,KAGxCK,EAAatR,EAAOiW,SAAS3N,KAAI,SAAC8E,GAAD,MAAc,CACnD3N,SAAU2N,EAAQ3N,SAClB0K,UAAWiD,EAAQjD,UACnBC,SAAUgD,EAAQhD,SAClBwN,SAAS,GAAD,OAAKxK,EAAQjD,UAAb,YAA0BiD,EAAQhD,UAC1C5D,KAAM4G,EAAQ5G,KACd3E,IAAKuL,EAAQvL,QAT+B,EAY5BwL,mBAAS,CAAC,CAAE1J,MAAO,WAAYgO,MAAO,cAAjDG,EAZuC,qBAkB9C,OAJApL,qBAAU,WACRuK,EAAQK,KACP,CAACtR,IAGF,kBAAC,KAAD,CACE8R,QAASA,EACTvR,KAAMA,EACNwR,aAAc,CACZtT,KAAM,CACJuT,uBAAwB,qCAE1BM,QAAS,CACPuF,cAAe,4BAGnBC,kBAAmB,SAACC,GAAD,OAAUN,EAASM,IACtC5F,QAAS,CAAEE,QAAQ,EAAO2F,WAAW,EAAM1F,SAAS,GACpD3O,MAAK,UAAK3D,EAAOqM,KAAZ,qBAA6BrM,EAAOyQ,WCRzCjN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0P,OAAQ,CACN,4CAA4C,gBACzC1P,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5BvS,MAAOhC,EAAMM,QAAQ,WAmKdG,gBA7JS,SAACC,GAAD,sBACnBA,EAAM8J,WAGgB,SAAC3J,GAAD,MAAe,CACxC4J,MAAO,SAACvM,EAAcsW,GAAf,OACL3T,EAAS,CACPE,KrBwB0B,mBqBvB1BgF,QAASE,KAAMlI,aAAaE,QAAQC,GACpCsW,aACAtO,SAAU,CACRC,QAAQ,GAAD,OAAKjI,EAAawM,UAAlB,UACPlJ,QAAS,cAGfmJ,OAAQ,kBAAM9J,EAAS,CAAEE,KrBoBiB,qCqB0H7BN,EA3IgB,SAAC,GASzB,IARL+T,EAQI,EARJA,WACA/P,EAOI,EAPJA,OACA2B,EAMI,EANJA,WACAqO,EAKI,EALJA,SACAC,EAII,EAJJA,OACAjK,EAGI,EAHJA,MACAE,EAEI,EAFJA,OACA5J,EACI,EADJA,KACI,EACoB4I,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,OAEwBF,mBAAS,MAFjC,oBAEGrN,EAFH,KAEWqY,EAFX,OAG4BhL,mBAAS,IAHrC,oBAGG4I,EAHH,KAGaqC,EAHb,KAKE5U,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAEVgK,EAAc,WAClBD,GAAQ,GACR8K,EAAU,MACVF,KAGIzJ,EAAkB,SAACrM,GACvB8L,EAAM,2BAEC9L,GAFF,IAGD4T,SAAUA,EAAS3N,KAAI,SAAC8E,GAAD,OAAaA,EAAQvL,OAC5C4C,KAAe,YAATA,EAAqB,QAAU,WACrC2J,UAAW3J,IAEbyT,IAsBJ,OAVAxR,qBAAU,WAEHoD,GAAe3B,GAAQqF,MAC3B,CAAC1D,IAGJpD,qBAAU,WACR6G,EAAQ6K,KACP,CAACA,IAGF,kBAACzK,GAAA,EAAD,CACE3I,UAAWN,EAAQ0O,OACnB7E,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAAC,IAAD,CACEtD,cAAe,CACb6E,OAAQ,GACRC,YAAa,IAEflE,iBAAkBC,IAAW,CAC3BgE,OAAQhE,MAAaC,UAAU,gBAAgBiE,SAAS,YACxDD,YAAajE,MAAakE,SAAS,cAErChE,SAAQ,uCAAE,WAAO1I,GAAP,SAAA4I,EAAA,sDACRyD,EAAgBrM,GADR,2CAAF,uDAIR,kBAAC,IAAD,KACE,kBAACwL,GAAA,EAAD,YAAkBpJ,GAClB,kBAACqJ,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,KAClBnI,GAAU,kBAAC,GAAD,CAAgByX,SA7CX,SAACvX,GAC1BmY,EAAUnY,MA6CDF,GACC,kBAACmJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE2L,WAAS,EACTrK,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,cACNkF,KAAK,cACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,SACNkF,KAAK,SACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CACEtJ,OAAQA,EACRyX,SAtEU,SAACM,GAC3BO,EAAYP,SA2EN,kBAAC/J,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEyG,SAAUlC,GAAkC,IAApBmM,EAAStB,OACjC/Q,MAAM,UACNa,KAAK,SACLS,QAAQ,aAEP4E,EAAa,YAAc,OAE9B,kBAACvE,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,iB,6DC/KN1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6U,SAAU,CACR1P,WAAY,SACZkH,gBAAiBrM,EAAMlB,QAAQgW,KAAK,KACpCC,aAAc/U,EAAMM,QAAQ,GAC5BJ,MAAOF,EAAMlB,QAAQgW,KAAK,KAC1B1P,QAAS,OACT4P,cAAe,SACfC,QAAS,OACT3V,QAAS,OACT4V,WAAY,yBAEdC,eAAgB,CACd9I,gBAAiBrM,EAAMlB,QAAQC,QAAQ+U,MACvC5T,MAAOF,EAAMlB,QAAQC,QAAQqW,cAE/BC,eAAgB,CACdhJ,gBAAiBrM,EAAMlB,QAAQG,UAAU6U,MACzC5T,MAAOF,EAAMlB,QAAQG,UAAUmW,kBAyDpBE,OArDf,YAAmC,IAAfC,EAAc,EAAdA,WACZvU,EAAUlB,KAEV0V,EAASC,uBAAY,SAACC,GAE1BA,EAAcC,SAAQ,SAACC,GACrB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,QAAU,kBAAMC,QAAQC,IAAI,6BACnCJ,EAAOK,QAAU,kBAAMF,QAAQC,IAAI,4BACnCJ,EAAOM,OAAS,WACd,IAAMC,EAAa7C,KAAMsC,EAAOQ,OAAQ,CACtCjI,SAAS,EACTkI,kBAAkB,IAEpBf,EAAWa,IAEbP,EAAOU,mBAAmBX,QAE3B,IAlB6B,EAyB5BY,aAAY,CACdC,OAAQ,uBACRC,UAAU,EACVC,eAAgBnB,IAPhBoB,EArB8B,EAqB9BA,aACAC,EAtB8B,EAsB9BA,cACAC,EAvB8B,EAuB9BA,aACAC,EAxB8B,EAwB9BA,aAOF,OACE,wBACMH,EAAa,CACftV,UAAU,GAAD,OAAKN,EAAQ6T,SAAb,YACPiC,EAAe9V,EAAQmU,eAAiB,GADjC,YAEL4B,EAAe/V,EAAQqU,eAAiB,MAG9C,0BAAWwB,MACTC,GACA,kBAACvV,EAAA,EAAD,6DAIDuV,IAAiBC,GAChB,kBAACxV,EAAA,EAAD,4BAEDwV,GAAgB,kBAACxV,EAAA,EAAD,iC,UCxEjBzB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmG,QAAS,CACP+F,UAAW,UAEb7M,KAAM,CACJ8F,WAAY,SACZC,QAAS,OACTE,eAAgB,SAChB0R,SAAUhX,EAAMM,QAAQ,KAE1B2W,QAAS,CACP1W,YAAaP,EAAMM,QAAQ,QAiBhB4W,GAbC,SAAC,GAAiB,IAAf/Q,EAAc,EAAdA,QACXnF,EAAUlB,KAEhB,OACE,yBAAKwB,UAAWN,EAAQ3B,MACtB,kBAAC8X,GAAA,EAAD,CAAkB7V,UAAWN,EAAQiW,UACrC,kBAAC1V,EAAA,EAAD,CAAYD,UAAWN,EAAQmF,SAC5BA,GAAW,gBCIdrG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0P,OAAQ,CACN,4CAA4C,gBACzC1P,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5BvS,MAAOhC,EAAMM,QAAQ,YAqBvB8W,GAAqB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAAmB,EACrC3N,mBAAS,MAD4B,oBACtDiM,EADsD,KAChD2B,EADgD,OAEjC5N,mBAAS,MAFwB,oBAEtDrN,EAFsD,KAE9CqY,EAF8C,OAGnChL,mBAAS,MAH0B,oBAGtD6N,EAHsD,KAG/CC,EAH+C,KAoBvDC,EAAmB,SAACrO,GACxBoO,EAAS,2BAAKD,GAAN,mBAAcnO,EAAGwI,OAAOlJ,KAAOU,EAAGwI,OAAOD,YAgBnD,OAZA5O,qBAAU,WACR,IAAM2U,IAAgBH,GAClB9S,OAAO/F,OAAO6Y,GAAOI,MAAK,SAACC,GAAD,OAAe,IAAPA,KAEtCP,EAAaK,KACZ,CAACH,IAGJxU,qBAAU,WACRqU,EAAa,CAAEzB,OAAMtZ,SAAQkb,YAC5B,CAAC5B,EAAMtZ,EAAQkb,IAGhB,qCACI5B,IAAStZ,IAAWkb,GACpB,kBAAC,GAAD,CAAgBzD,SAnCK,SAACzX,GAC1BqY,EAAUrY,OAqCNsZ,GAAQtZ,IAAWkb,GACnB,6BACE,kBAACjW,EAAA,EAAD,CAAYkH,cAAY,GAAxB,0EAIA,kBAAC,GAAD,CAAU8M,WAxCK,SAACK,GACtB,IAAM4B,EAAQ,GACd9S,OAAOC,KAAKiR,EAAK,IACdhU,MAAM,GACN+T,SAAQ,SAAC9X,GACR2Z,EAAM3Z,IAAQ,KAElB0Z,EAAQ3B,GACR6B,EAASD,OAoCN5B,GAAQtZ,GAAUkb,GACjB,kBAACM,GAAA,EAAD,CAAa1T,UAAU,YACrB,kBAAC7C,EAAA,EAAD,CAAYkH,cAAY,EAACjH,QAAQ,SAAjC,oCAGA,kBAACuW,GAAA,EAAD,KACGrT,OAAOC,KAAK6S,GAAO5S,KAAI,SAAC/G,GAAD,OACtB,kBAAC4T,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAS4F,EAAM3Z,GACfuF,SAAUsU,EACV/O,KAAM9K,IAGVgH,IAAKhH,EACL4F,MAAO5F,WA6HR4C,gBAjNS,SAACC,GAAD,sBACnBA,EAAM8J,WAGgB,SAAC3J,GAAD,MAAe,CACxCmX,SAAU,SAACnb,EAAM2X,GAAP,OACR3T,EAAS,CACPE,KxBUuB,gBwBTvBgF,QAASE,KAAMtJ,OAAOC,OAAOC,GAC7B2X,aACAtO,SAAU,CAAEC,QAAS,kBAAmB3E,QAAS,cAErDmJ,OAAQ,kBAAM9J,EAAS,CAAEE,KxBMkB,sCwB+L9BN,EAnHY,SAAC,GAQrB,IAPL+T,EAOI,EAPJA,WACA/P,EAMI,EANJA,OACA2B,EAKI,EALJA,WACAqO,EAII,EAJJA,SACAC,EAGI,EAHJA,OACA/J,EAEI,EAFJA,OACAqN,EACI,EADJA,SACI,EACoBrO,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,OAEsBF,oBAAS,GAF/B,oBAEGsO,EAFH,KAEUC,EAFV,OAGoBvO,mBAAS,MAH7B,oBAGG9M,EAHH,KAGS0Q,EAHT,KAKEvN,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAEVgK,EAAc,WAClBD,GAAQ,GACR4K,KAuDF,OAVAzR,qBAAU,WAEHoD,GAAe3B,GAAQqF,MAC3B,CAAC1D,IAGJpD,qBAAU,WACR6G,EAAQ6K,KACP,CAACA,IAGF,kBAACzK,GAAA,EAAD,CACE3I,UAAWN,EAAQ0O,OACnB7E,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAACO,GAAA,EAAD,sBACA,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACnB2B,EACC,kBAAC,GAAD,CAASD,QAAQ,iBAEjB,kBAAC,GAAD,CACEkR,aArEe,SAACc,GACxB5K,EAAQ4K,IAqEAb,aAlEe,SAACc,GACxBF,EAASE,OAqEP,kBAAC9N,GAAA,EAAD,KACG2N,GACC,kBAACpW,EAAA,EAAD,CACE3B,MAAM,UACNoI,SAAUlC,EACVtE,QAvEgB,WAExB,IAAMuW,EAAYxb,EAAK+Y,KACpBhR,KACC,SAAC8E,EAAS2F,GAAV,OACEA,EAAQ,GAAK3F,EAAQ,mBAAmBxG,MAAM,KAAKoV,SAEtDC,QAAO,SAACxc,GAAD,OAA2B,IAAbA,KAGlByc,EAAS,CAAElc,OAAQO,EAAKP,OAAQkb,MAAO,IAC7C,IAAK,IAAMiB,KAAY5b,EAAK2a,MAAO,CAEjC,GADiB3a,EAAK2a,MAAMiB,GACd,CACZ,IADY,EACN5a,EAAO,CACXoC,MAAOwY,EACP/M,YAAa7O,EAAK+Y,KAAK,GAAG6C,GAC1BjO,OAAQ,IAJE,eAOW6N,GAPX,yBAODtc,EAPC,QAQJ2N,EAAU7M,EAAK+Y,KAAK8C,MAAK,SAACC,GAAD,OAC7BA,EAAI,mBAAmBC,SAAS7c,MAE9B2N,IAAS7L,EAAK2M,OAAOzO,GAAY2N,EAAQ+O,KAJ/C,2BAAmC,IAPvB,8BAcZD,EAAOhB,MAAMqB,KAAKhb,IAItBma,EAASQ,EAAQhE,IAyCThT,QAAQ,aAEP4E,EAAa,eAAiB,UAGnC,kBAACvE,EAAA,EAAD,CAAQyG,SAAUlC,EAAYtE,QAASgI,EAAatI,QAAQ,aAA5D,eClOF1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0D,KAAM,CACJnD,YAAaP,EAAMM,QAAQ,QA8EhBwY,GA1EY,SAAC,GAAoB,IAAlBtE,EAAiB,EAAjBA,WAAiB,EACL7K,mBAAS,MADJ,oBACtCoP,EADsC,KACxBC,EADwB,OAEHrP,mBAAS,MAFN,oBAEtCsP,EAFsC,KAEvBC,EAFuB,KAIvClY,EAAUlB,KAUVqZ,EAAmB,SAAC9P,GACxB6P,EAAiB7P,EAAG+P,cAAcC,QAAQtY,MAC1CiY,EAAgB,OAGZM,EAAoB,WACxBJ,EAAiB,OAGnB,OACE,oCACE,kBAAC7Q,EAAA,EAAD,CAAKnI,MAAM,UAAU4B,QAnBF,SAACuH,GACtB2P,EAAgB3P,EAAG+P,gBAkB6B5X,QAAQ,YACpD,kBAAC+X,GAAA,EAAD,CAAOjY,UAAWN,EAAQ0C,OAD5B,mBAIA,kBAAC8V,GAAA,EAAD,CACEC,SAAUV,EACVnP,KAAM8P,QAAQX,GACd7O,QAtBkB,WACtB8O,EAAgB,QAuBZ,kBAACW,GAAA,EAAD,CAAUC,YAAU,SAAS9X,QAASqX,GACpC,kBAACU,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,OAEF,kBAACC,GAAA,EAAD,uBAEF,kBAACJ,GAAA,EAAD,CAAUC,YAAU,UAAU9X,QAASqX,GACrC,kBAACU,GAAA,EAAD,KACE,kBAAC5O,GAAA,EAAD,OAEF,kBAAC8O,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAUC,YAAU,YAAY9X,QAASqX,GACvC,kBAACU,GAAA,EAAD,KACE,kBAAC3O,GAAA,EAAD,OAEF,kBAAC6O,GAAA,EAAD,wBAGJ,kBAAC,GAAD,CACEvF,WAAYA,EACZC,SAAU6E,EACV5E,OAA0B,WAAlBuE,IAEV,kBAAC,GAAD,CACEzE,WAAYA,EACZC,SAAU6E,EACV5E,OAA0B,YAAlBuE,EACRlY,KAAK,YAEP,kBAAC,GAAD,CACEyT,WAAYA,EACZC,SAAU6E,EACV5E,OAA0B,cAAlBuE,EACRlY,KAAK,gBC3BEN,gBAjDS,SAACC,GAAD,MAAY,CAClCsZ,cAAetZ,EAAM8J,OAAOwP,kBAGH,SAACnZ,GAAD,MAAe,CACxC+B,SAAU,kBAAM/B,EAAS,CAAEE,K1BiDS,+B0BLvBN,EAzCS,SAAC,GAAiC,IAA/BuZ,EAA8B,EAA9BA,cAAepX,EAAe,EAAfA,SAAe,EACzB+G,mBAAS,MADgB,oBAChDD,EADgD,KACvCuQ,EADuC,KAGjDC,EAAS,SAACC,EAAKzN,GAAN,gBAAkByN,EAAlB,YAAyBzN,GAAzB,OAAwC,IAARyN,EAAY,IAAM,KAYjE,OANAnX,qBAAU,WACR,OAAO,WACLJ,OAED,IAGD,oCACE,kBAAC,GAAD,CAAY3C,MAAM,mBAChB,kBAAC,GAAD,CAAoBuU,WAAY9K,KAGjCsQ,GACC,kBAAC,GAAD,gBACWE,EAAOF,EAAcI,aAAc,cAD9C,aACuE,IACpEF,EAAOF,EAAcK,eAAgB,SAFxC,gBAE+D,IAC5DH,EAAOF,EAAcM,cAAe,UAIzC,kBAAC7U,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CAAexC,SA1BK,SAACsG,GAC3BuQ,EAAWvQ,OA2BP,kBAACjE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZ8D,GAAW,kBAAC,GAAD,CAAakD,SAAS,EAAMlD,QAASA,UCzBrD5J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0D,KAAM,CACJnD,YAAaP,EAAMM,QAAQ,QA2JhBG,gBAvJS,SAACC,GAAD,sBACnBA,EAAM2R,YAGgB,SAACxR,GAAD,MAAe,CACxC4J,MAAO,SAACnO,GAAD,OACLuE,EAAS,CACPE,K3BXoB,a2BYpBgF,QAASE,KAAM7J,QAAQC,IAAIC,GAC3B4J,SAAU,CAAEC,QAAS,eAAgB3E,QAAS,cAElDmJ,OAAQ,kBAAM9J,EAAS,CAAEE,K3BdW,4B2BepCuM,SAAU,SAAChR,GAAD,OACRuE,EAAS,CACPE,K3BbuB,gB2BcvBgF,QAASE,KAAM7J,QAAQM,OAAOJ,GAC9B4J,SAAU,CAAEC,QAAS,iBAAkB3E,QAAS,iBAuIvCf,EAnIM,SAAC,GAOf,IANLnE,EAMI,EANJA,OACAmI,EAKI,EALJA,OACA2B,EAII,EAJJA,WACAqE,EAGI,EAHJA,MACAE,EAEI,EAFJA,OACA2C,EACI,EADJA,SACI,EACoB3D,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,KAGE7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAEVya,EAAkB,WACtB1Q,GAAQ,IAGJC,EAAc,WAClBD,GAAQ,IAGJmB,EAAkB,SAACrM,GACvB8L,EAAM,eAAK9L,KAGP6b,EAAqB,SAAC7b,GAC1B2O,EAAS,2BAAKhR,GAAWqC,KAQ3B,OALAqE,qBAAU,WAEHoD,GAAe3B,GAAQoF,GAAQ,KACnC,CAACzD,IAGF,oCACG9J,EACC,kBAAC,GAAD,CAAc2M,OAAO,cAAcnH,QAASyY,GAC1C,kBAACpN,GAAA,EAAD,OAGF,kBAAC9E,EAAA,EAAD,CAAKnI,MAAM,UAAU4B,QAASyY,EAAiB/Y,QAAQ,YACrD,kBAAC0O,GAAA,EAAD,CAAK5O,UAAWN,EAAQ0C,OAD1B,iBAMF,kBAACuG,GAAA,EAAD,CACEY,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAAC,IAAD,CACEtD,cAAe,CACbqC,MAAY,OAANrM,QAAM,IAANA,OAAA,EAAAA,EAAQqM,OAAQ,GACtBoE,QAAc,OAANzQ,QAAM,IAANA,OAAA,EAAAA,EAAQyQ,SAAU,IAE5B7F,iBAAkBC,IAAW,CAC3BwB,KAAMxB,MAAakE,SAAS,YAC5B0B,OAAQ5F,MAAaC,UAAU,gBAAgBiE,SAAS,cAE1DhE,SAAQ,uCAAE,WAAO1I,GAAP,SAAA4I,EAAA,sDACRjL,EAASke,EAAmB7b,GAAUqM,EAAgBrM,GAD9C,2CAAF,uDAIR,kBAAC,IAAD,KACE,kBAACwL,GAAA,EAAD,KACG7N,EAAS,cAAgB,iBAE5B,kBAAC8N,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACpB,kBAACgB,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE2L,WAAWjO,EACX4D,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,cACNkF,KAAK,OACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,SACNkF,KAAK,SACL5H,KAAK,OACL6H,WAAS,OAKjB,kBAAC0B,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEyG,SAAUlC,EACVlG,MAAM,UACNa,KAAK,SACLS,QAAQ,aAEPlF,EACG8J,EACE,cACA,SACFA,EACA,YACA,OAEN,kBAACvE,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,kB,sEC7ECf,gBAAQ,iBAAO,MA7EH,SAACI,GAAD,MAAe,CACxCwM,SAAU,SAACtR,EAAU2B,GAAX,OACRmD,EAAS,CACPE,K5BmBwB,iB4BlBxBgF,QAASE,KAAMxI,SAASlB,OAAOR,GAC/BA,WACA2B,WACAwI,SAAU,CAAEC,QAAS,kBAAmB3E,QAAS,iBAsExCf,EAlEY,SAAC,GAAmC,IAAjCnE,EAAgC,EAAhCA,OAAQ+Q,EAAwB,EAAxBA,SAAU3D,EAAc,EAAdA,QAAc,EACpCC,oBAAS,GAD2B,oBACrDC,EADqD,KAC/CC,EAD+C,KAOtDC,EAAc,WAClBD,GAAQ,IAQV,OACE,oCACE,kBAAC,GAAD,CACEZ,OAAO,iBACPnH,QAjBkB,WACtB+H,GAAQ,IAiBJL,KAAK,SAEL,kBAACiR,GAAA,EAAD,CAAQzQ,SAAS,aAEnB,kBAACC,GAAA,EAAD,CACEL,KAAMA,EACNM,QAASJ,EACThI,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBC,QAAS,SAACF,GAAD,OAAQA,EAAGC,oBAEpB,kBAACa,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBjG,UAAU,OAA7B,kCACkC,IAChC,2BACGsF,EAAQjD,UADX,IACuBiD,EAAQhD,UAHjC,yCAME,4BACE,0DACA,iDACA,gDACA,2CAVJ,6CAY4C,+CAZ5C,MAeF,kBAAC4D,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEC,QAvCW,WACnB+H,GAAQ,GACRwD,EAAS3D,EAAQ3N,SAAUO,EAAO6B,MAsC1B+B,MAAM,YACNsB,QAAQ,YACR+I,WAAS,GAJX,UAQA,kBAAC1I,EAAA,EAAD,CAAQC,QAASgI,EAAatI,QAAQ,aAAtC,gB,UCqIKf,gBA/LS,SAACC,GAAD,mBAAC,eACpBA,EAAM4B,OAAOvF,UACb2D,EAAM2R,YAGgB,SAACxR,GAAD,MAAe,CACxC4J,MAAO,SAACxO,EAAMyB,GAAP,OACLmD,EAAS,CACPE,K7BGqB,c6BFrBgF,QAASE,KAAMxI,SAASpB,IAAIJ,EAAMyB,GAClCA,WACAwI,SAAU,CAAEC,QAAS,gBAAiB3E,QAAS,cAEnDmJ,OAAQ,kBAAM9J,EAAS,CAAEE,K7BEY,6B6BDrCuM,SAAU,SAACrR,EAAMyB,GAAP,OACRmD,EAAS,CACPE,K7BAwB,iB6BCxBgF,QAASE,KAAMxI,SAASf,OAAOT,GAC/ByB,WACAwI,SAAU,CAAEC,QAAS,kBAAmB3E,QAAS,iBA4KxCf,EAxKO,SAAC,GAShB,IARLnE,EAQI,EARJA,OACAiK,EAOI,EAPJA,uBACA9B,EAMI,EANJA,OACA2B,EAKI,EALJA,WACAqE,EAII,EAJJA,MACAE,EAGI,EAHJA,OACA2C,EAEI,EAFJA,SACA5D,EACI,EADJA,QACI,EACoBC,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,KAGE7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAElDwP,EAAkB,WACtB1Q,GAAQ,IAGJC,EAAc,WAClBD,GAAQ,IAGJmB,EAAkB,SAACrM,GACvB,IAAM1C,EAAI,eAAQ0C,GACZjB,EAAWpB,EAAO6B,IACxBlC,EAAK6G,KAAO,UACZ2H,EAAMxO,EAAMyB,IAGR8c,EAAqB,SAAC7b,GAC1B,IAAM1C,EAAI,2BAAQyN,GAAY/K,GACxBjB,EAAWpB,EAAO6B,IACxBmP,EAASrR,EAAMyB,IAQjB,OALAsF,qBAAU,WAEHoD,GAAe3B,GAAQoF,GAAQ,KACnC,CAACzD,IAGF,oCACGsD,EACC,kBAAC,GAAD,CACET,OAAO,eACPnH,QAASyY,EACT/Q,KAAK,SAEL,kBAAC2D,GAAA,EAAD,CAAMnD,SAAS,aAGjB,kBAAC,GAAD,CAAcf,OAAO,cAAcnH,QAASyY,GAC1C,kBAACG,GAAA,EAAD,OAIJ,kBAACzQ,GAAA,EAAD,CACEY,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAAC,IAAD,CACEtD,cAAe,CACbG,WAAkB,OAAPiD,QAAO,IAAPA,OAAA,EAAAA,EAASjD,YAAa,GACjCC,UAAiB,OAAPgD,QAAO,IAAPA,OAAA,EAAAA,EAAShD,WAAY,GAC/B3K,UAAiB,OAAP2N,QAAO,IAAPA,OAAA,EAAAA,EAAS3N,WAAY,GAC/BC,SAAW0N,EAAmC,GAAzBnD,GAEvBW,iBAAkBC,IAAW,CAC3BV,UAAWU,MAAakE,SAAS,YACjC3E,SAAUS,MAAakE,SAAS,YAChCtP,SAAUoL,MACPC,UAAU,gBACViE,SAAS,YACZrP,SAAUmL,MAAakE,SAAU3B,EAAuB,GAAb,cAE7CrC,SAAQ,uCAAE,WAAO1I,GAAP,SAAA4I,EAAA,sDACRmC,EAAU8Q,EAAmB7b,GAAUqM,EAAgBrM,GAD/C,2CAAF,uDAIR,kBAAC,IAAD,KACE,kBAACwL,GAAA,EAAD,KACGT,EAAU,eAAiB,eAE9B,kBAACU,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACpB,kBAACgB,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE2L,WAAWb,EACXxJ,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,aACNkF,KAAK,YACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,YACNkF,KAAK,WACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,WAAYoB,GAAWtD,EACvB3C,MAAM,iBACNkF,KAAK,WACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,WACNkF,KAAK,WACL5H,KAAK,OACL6H,WAAS,OAKjB,kBAAC0B,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACE3B,MAAM,UACNoI,SAAUlC,EACVrF,KAAK,SACLS,QAAQ,aAEPkI,EACGtD,EACE,cACA,SACFA,EACA,YACA,OAEN,kBAACvE,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,kBCpMR1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2Y,IAAK,CACH,WAAc,SACd,aAAgB,kBAChB,QAAW,OACX,OAAU3Y,EAAMM,QAAQ,GACxB,eAAkB,gBAClB,QAAWN,EAAMM,QAAQ,GACzB,UAAW,CACTqa,kBAAmB3a,EAAMlB,QAAQG,UAAUqN,OAG/CsO,UAAW,CACTzV,WAAY,SACZC,QAAS,QAEXyV,gBAAiB,CACfta,YAAaP,EAAMM,QAAQ,GAC3B0W,SAAUhX,EAAMM,QAAQ,SAItBwa,GAAiB,SAAC,GAAyB,IAAvBxe,EAAsB,EAAtBA,OAAQoN,EAAc,EAAdA,QAC1B1I,EAAUlB,KAEhB,OACE,yBAAKwB,UAAWN,EAAQ2X,KACtB,yBAAKrX,UAAWN,EAAQ4Z,WACtB,kBAACG,GAAA,EAAD,CACE7a,MAAM,UACNuD,MAAOiG,EAAQ3N,SACfuF,UAAWN,EAAQ6Z,kBAErB,kBAACtZ,EAAA,EAAD,KACGmI,EAAQhD,SADX,KACuBgD,EAAQjD,YAGjC,6BACE,kBAAC,GAAD,CAA2BiD,QAASA,IACpC,kBAAC,GAAD,CAAepN,OAAQA,EAAQoN,QAASA,IACxC,kBAAC,GAAD,CAAoBpN,OAAQA,EAAQoN,QAASA,OA6BtCsR,GAvBW,SAAC,GAAgB,IAAd1e,EAAa,EAAbA,OAC3B,OACE,oCACE,kBAACiF,EAAA,EAAD,CAAYC,QAAQ,MAApB,YAA+C,IAC9ClF,EAAOiW,UAAYjW,EAAOiW,SAAStB,OAAS,EAC3C3U,EAAOiW,SAAS3N,KAAI,SAAC8E,GACnB,OACE,kBAAC,GAAD,CACE7E,IAAK6E,EAAQvL,IACb7B,OAAQA,EACRoN,QAASA,OAKf,6BACE,kBAACnI,EAAA,EAAD,sDCqBKd,gBAAQ,iBAAO,MAzEH,SAACI,GAAD,MAAe,CACxCwM,SAAU,SAAC7Q,GAAD,OACRqE,EAAS,CACPE,K/BeuB,gB+BdvBgF,QAASE,KAAM7J,QAAQG,OAAOC,GAC9BA,OACA0J,SAAU,CAAEC,QAAS,iBAAkB3E,QAAS,iBAmEvCf,EA/DW,SAAC,GAA0B,IAAxBnE,EAAuB,EAAvBA,OAAQ+Q,EAAe,EAAfA,SAAe,EAC1B1D,oBAAS,GADiB,oBAC3CC,EAD2C,KACrCC,EADqC,KAO5CC,EAAc,WAClBD,GAAQ,IAQV,OACE,oCACE,kBAAC,GAAD,CAAcZ,OAAO,gBAAgBnH,QAfjB,WACtB+H,GAAQ,KAeJ,kBAAC4Q,GAAA,EAAD,OAGF,kBAACxQ,GAAA,EAAD,CACEL,KAAMA,EACNM,QAASJ,EACThI,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBC,QAAS,SAACF,GAAD,OAAQA,EAAGC,oBAEpB,kBAACa,GAAA,EAAD,sBACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBjG,UAAU,OAA7B,kCACkC,IAChC,2BACG9H,EAAOqM,KADV,WACwBrM,EAAOyQ,QAHjC,yCAME,4BACE,oDACA,iDACA,gDACA,2CAVJ,4CAY2C,+CAZ3C,MAeF,kBAACzC,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEC,QApCW,WACnB+H,GAAQ,GACRwD,EAAS/Q,EAAOE,OAmCR0D,MAAM,YACNsB,QAAQ,YACR+I,WAAS,GAJX,UAQA,kBAAC1I,EAAA,EAAD,CAAQC,QAASgI,EAAatI,QAAQ,aAAtC,gBCiDKf,gBA1GS,SAACC,GAAD,mBAAC,eACpBA,EAAM4B,OAAOvF,UACb2D,EAAM2R,YAGgB,SAACxR,GAAD,MAAe,CACxC2U,OAAQ,SAAC7X,EAAOD,GAAR,OACNmD,EAAS,CACPE,KhCQyB,kBgCPzBgF,QAASE,KAAMxI,SAASb,OAAOe,EAAOD,GACtCwI,SAAU,CAAEC,QAAS,oBAAqB3E,QAAS,cAEvDmJ,OAAQ,kBAAM9J,EAAS,CAAEE,KhCMY,gCgCwFxBN,EA3Fc,SAAC,GAOvB,IANLnE,EAMI,EANJA,OACAiK,EAKI,EALJA,uBACA9B,EAII,EAJJA,OACA2B,EAGI,EAHJA,WACAoP,EAEI,EAFJA,OACA7K,EACI,EADJA,OACI,EACoBhB,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,KAGE7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAMlDjB,EAAc,WAClBD,GAAQ,IA+BV,OALA7G,qBAAU,WAEHoD,GAAe3B,GAAQoF,GAAQ,KACnC,CAACzD,IAGF,oCACE,kBAAC,GAAD,CAAc6C,OAAO,kBAAkBnH,QAtCnB,WACtB+H,GAAQ,KAsCJ,kBAACiQ,GAAA,EAAD,OAGF,kBAAC7P,GAAA,EAAD,CACEY,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAACO,GAAA,EAAD,wBACA,kBAACC,GAAA,EAAD,KACGhE,EACC,kBAAC,GAAD,CAASD,QAAQ,iBAEjB,oCACE,kBAAC5E,EAAA,EAAD,CAAYkH,cAAY,GAAxB,2EAIA,kBAAC,GAAD,CAAU8M,WApDC,SAACK,GACtB,IAAMqF,EAASvW,OAAOC,KAAKiR,EAAK,IAC1BjY,EAAQiY,EACXhR,KAAI,SAAC+T,EAAKtJ,GAET,GAAIA,EAAQ,EAAG,OAAO,KACtB,IAAM3F,EAAUiP,EAAIsC,EAAO,IAW3B,MAVa,CACXxU,UAAWiD,EACRxG,MAAM,KAAK,GACXA,MAAM,cAAc,GACpBgY,OACHxU,SAAUgD,EAAQxG,MAAM,KAAK,GAC7BnH,SAAU2N,EAAQxG,MAAM,KAAK,GAC7BlH,SAAUuK,EACVzD,KAAM,cAITyV,QAAO,SAAC4C,GAAD,OAAyB,OAAZA,KACvB3F,EAAO7X,EAAOrB,EAAO6B,UAoCjB,kBAACmM,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,gB,UClBKf,gBAvFS,SAACC,GAAD,MAAY,CAClC8W,MAAO9W,EAAM8W,MAAMA,UAGM,SAAC3W,GAAD,MAAe,CACxCwM,SAAU,SAAC7Q,GAAD,OACRqE,EAAS,CACPE,KjCwCqB,ciCvCrBgF,QAASE,KAAMrI,MAAMrB,OAAOC,GAC5BA,OACA0J,SAAU,CAAEC,QAAS,qBAAsB3E,QAAS,cAExDmB,OAAQ,SAACjF,GAAD,OACNmD,EAAS,CACPE,KjCkC6B,sBiCjC7BgF,QAASE,KAAMrI,MAAMnB,OAAOiB,MAEhC4P,SAAU,SAACzP,GAAD,OACRgD,EAAS,CACPE,KjC+BqB,ciC9BrBgF,QAASE,KAAMrI,MAAMlB,OAAOmB,GAC5BqI,SAAU,CAAEC,QAAS,qBAAsB3E,QAAS,iBAkE3Cf,EA9DI,SAAC,GAAmD,IAAjDnE,EAAgD,EAAhDA,OAAQ+Q,EAAwC,EAAxCA,SAAU1K,EAA8B,EAA9BA,OAAQ2K,EAAsB,EAAtBA,SAAUkK,EAAY,EAAZA,MAAY,EAC5C7N,mBAAS,IADmC,oBAC7D9M,EAD6D,KACvD0Q,EADuD,KAG9DK,EAAa4J,EAAM5S,KAAI,SAAC/G,GAAD,MAAW,CACtC4P,UAAW,IAAIC,KAAK7P,EAAK4P,WAAWE,eACpC1N,MAAOpC,EAAKoC,MACZyL,YAAa7N,EAAK6N,YAClBlP,KAAMqB,EAAKrB,SAPuD,EAUlDmN,mBAAS,CACzB,CAAE1J,MAAO,OAAQgO,MAAO,YAAaC,SAAU,SAC/C,CAAEjO,MAAO,QAASgO,MAAO,QAASC,SAAU,SAC5C,CAAEjO,MAAO,eAAgBgO,MAAO,iBAH3BG,EAV6D,qBAwBpE,OARApL,qBAAU,WACRL,EAAOrG,EAAO6B,OACb,IAEH6E,qBAAU,WACRuK,EAAQK,KACP,CAAC4J,IAGF,kBAAC,KAAD,CACEpJ,QAASA,EACTvR,KAAMA,EACNwR,aAAc,CACZtT,KAAM,CACJuT,uBAAwB,uCACxBC,QAAS,CACPC,WACE,yEAIRC,QAAS,CAAEC,oBAAqB,EAAGC,QAAQ,EAAOC,SAAS,GAC3DV,SAAU,CACRW,YAAa,SAACC,EAASC,GAAV,OACX,IAAItU,SAAQ,SAACuU,EAASC,GACpB,IAAMC,EAAU,aAAOrS,GAEvBqS,EADcH,EAAQI,UAAUlS,IACZ6R,EACpBvB,EAAQ,aAAI2B,IACZ5B,EAASwB,GACTE,QAEJI,YAAa,SAACL,GAAD,OACX,IAAItU,SAAQ,SAACuU,EAASC,GACpB,IAAMH,EAAO,aAAOjS,GACdwS,EAAQN,EAAQI,UAAUlS,GAChC6R,EAAQQ,OAAOD,EAAO,GACtB9B,EAAQ,aAAIuB,IACZzB,EAAS0B,EAAQvS,MACjBwS,cCxENlP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0P,OAAQ,CACN,4CAA4C,gBACzC1P,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5B6G,UAAWpb,EAAMM,QAAQ,IACzB0B,MAAOhC,EAAMM,QAAQ,YA+DdG,gBAzDS,SAACC,GAAD,sBACnBA,EAAM8W,UAGgB,SAAC3W,GAAD,MAAe,CACxC8J,OAAQ,kBAAM9J,EAAS,CAAEE,KlCyBU,8BkC2BtBN,EAjDK,SAAC,GAA4C,IAA1CnE,EAAyC,EAAzCA,OAAQmI,EAAiC,EAAjCA,OAAQ2B,EAAyB,EAAzBA,WAAYuE,EAAa,EAAbA,OAAa,EACtChB,oBAAS,GAD6B,oBACvDC,EADuD,KACjDC,EADiD,KAGxD7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAMVgK,EAAc,WAClBD,GAAQ,IAGV,OACE,oCACE,kBAAC,GAAD,CAAcZ,OAAO,qBAAqBnH,QAVtB,WACtB+H,GAAQ,KAUJ,kBAACwR,GAAA,EAAD,OAGF,kBAACpR,GAAA,EAAD,CACE3I,UAAWN,EAAQ0O,OACnB7E,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAACO,GAAA,EAAD,2BACA,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACpB,kBAAC,GAAD,CAAYnI,OAAQA,KAEtB,kBAACgO,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,eCzDJ1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsb,cAAe,CACblW,QAAS,SAEXmW,aAAc,CACZpW,WAAY,SACZC,QAAS,OACTE,eAAgB,gBAChBtD,MAAO,QAETwZ,aAAc,CACZnP,gBAAiBrM,EAAMlB,QAAQG,UAAUqN,KACzC/L,YAAaP,EAAMM,QAAQ,IAE7Bmb,YAAa,CACXtb,SAAU,SAmDCub,GA/CI,SAAC,GAAiB,IAAfrJ,EAAc,EAAdA,QAAc,EACF1I,oBAAS,GADP,oBAC3BgS,EAD2B,KACjBC,EADiB,KAG5B5a,EAAUlB,KAMhB,OACE,qCACU,OAAPuS,QAAO,IAAPA,OAAA,EAAAA,EAASpB,QAAS,EACjBoB,EAAQzN,KAAI,SAACtI,GACX,OACE,kBAACuf,GAAA,EAAD,CACEF,SAAUA,IAAarf,EAAO6B,IAC9B0G,IAAKvI,EAAO6B,IACZiF,UAZU0Y,EAYaxf,EAAO6B,IAZV,SAACkL,EAAI0S,GACnCH,IAAYG,GAAaD,MAaf,kBAACE,GAAA,EAAD,CAAuBC,WAAY,kBAACC,GAAA,EAAD,OACjC,yBAAK5a,UAAWN,EAAQua,cACtB,kBAACY,GAAA,EAAD,CAAQ7a,UAAWN,EAAQwa,cACxBlf,EAAOyQ,QAEV,kBAACxL,EAAA,EAAD,CAAYD,UAAWN,EAAQya,YAAaja,QAAQ,MACjDlF,EAAOqM,MAEV,kBAAC,GAAD,CAAarM,OAAQA,IACrB,kBAAC,GAAD,CAAeA,OAAQA,IACvB,kBAAC,GAAD,CAAsBA,OAAQA,IAC9B,kBAAC,GAAD,CAAcA,OAAQA,IACtB,kBAAC,GAAD,CAAmBA,OAAQA,MAG/B,kBAAC8f,GAAA,EAAD,CAAuB9a,UAAWN,EAAQsa,eACxC,kBAAC,GAAD,CAAmBhf,OAAQA,MA9BpB,IAACwf,KAoChB,kBAACva,EAAA,EAAD,8BCvBOd,gBAxCS,SAACC,GAAD,sBACnBA,EAAM2R,YAGgB,SAACxR,GAAD,MAAe,CACxC8B,OAAQ,kBACN9B,EAAS,CAAEE,KpCYoB,sBoCZOgF,QAASE,KAAM7J,QAAQK,YAC/DmG,SAAU,kBAAM/B,EAAS,CAAEE,KpCYQ,8BoCqBtBN,EA9BQ,SAAC,GAMjB,IALL4R,EAKI,EALJA,QACAgK,EAII,EAJJA,YACA1Z,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACA0Z,EACI,EADJA,WAUA,OARAtZ,qBAAU,WAGR,OAFAL,IAEO,WACLC,OAED,IAGD,oCACE,kBAAC,GAAD,CAAY3C,MAAM,kBAChB,kBAAC,GAAD,OAEe,OAAhBoc,GAAwB,kBAAC,GAAD,KAAQA,EAAR,sBACxBC,EACC,kBAAC,GAAD,CAASnW,QAAQ,eAEjB,kBAAC,GAAD,CAAYkM,QAASA,Q,sEChBvBvS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0P,OAAQ,CACN,4CAA4C,gBACzC1P,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5B6G,UAAWpb,EAAMM,QAAQ,IACzB0B,MAAOhC,EAAMM,QAAQ,QAI3BoD,KAAM,CACJnD,YAAaP,EAAMM,QAAQ,IAE7Bwb,MAAO,CACL9E,SAAUhX,EAAMM,QAAQ,IACxBic,SAAUvc,EAAMM,QAAQ,KAE1B8X,SAAU,CACR/L,gBAAiBrM,EAAMlB,QAAQC,QAAQuN,MAEzCkQ,SAAU,CACRhc,aAAcR,EAAMM,QAAQ,IAE9Bmc,aAAc,CACZ,UAAW,CACTpQ,gBAAiBrM,EAAMlB,QAAQC,QAAQ+U,QAG3ClD,kBAAmB,CACjBvE,gBAAiBrM,EAAMlB,QAAQgW,KAAK,KACpCC,aAAc/U,EAAMM,QAAQ,GAC5BD,UAAWL,EAAMM,QAAQ,GACzBhB,QAASU,EAAMM,QAAQ,IAEzBoc,YAAY,cACV,WAAc,SACd,QAAW,OACX,UAAa1c,EAAMM,QAAQ,GAC3B,UAAW,CACTC,YAAaP,EAAMM,QAAQ,KAE5BN,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5BoI,eAAgB3c,EAAMlB,QAAQC,QAAQuN,KACtCsQ,eAAgB,SAChBC,eAAgB,MAChBC,WAAY9c,EAAMM,QAAQ,SA8RjBG,gBAzRS,SAACC,GAAD,mBAAC,eACpBA,EAAMsQ,OADa,IAEtBxK,0BAA2B9F,EAAM4B,OAAOvF,SAASyJ,+BAIxB,SAAC3F,GAAD,MAAe,CACxC8J,OAAQ,kBAAM9J,EAAS,CAAEE,KrCjEkB,mCqCkE3CsG,SAAU,SAAChK,GAAD,OACRwD,EAAS,CACPE,KrC/D6B,sBqCgE7BgF,QAASE,KAAMjJ,MAAMN,OAAOW,SA8QnBoD,EA1QmB,SAAC,GAQ5B,IAUsB0P,EAAQlQ,EAjBnCoS,EAOI,EAPJA,QACA5N,EAMI,EANJA,OACA2B,EAKI,EALJA,WACAuE,EAII,EAJJA,OACAtD,EAGI,EAHJA,SACAb,EAEI,EAFJA,0BAEI,EACoBmD,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,OAEoBF,mBAAS,MAF7B,oBAEGtM,EAFH,KAES0f,EAFT,OAGwBpT,mBAAS,MAHjC,oBAGG4G,EAHH,KAGWyM,EAHX,OAI8CrT,mBAAS,MAJvD,oBAIGiH,EAJH,KAIsBqM,EAJtB,KAMEjd,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAsCVgK,EAAc,WAClBD,GAAQ,GACRmT,EAAU,MACVC,EAAqB,OAGjBC,EAA0B,SAAC3M,GAC/ByM,EAAUzM,IAGN4M,EAAgC,SAAC9T,GACrC4T,EAAqB5T,EAAGwI,OAAOnP,QAG3BuN,EAAY,uCAAG,sBAAA1I,EAAA,sDACnBF,EAAS,CACP8D,OAAQ3E,EACRvJ,GAAII,EAAKc,IACToS,SACAK,sBAEFoM,EAAU,MACVC,EAAqB,MARF,2CAAH,qDAelB,OAJAja,qBAAU,YA/CU,WAElB,GADA+Z,EAAQ,MACJ1K,EAAQpB,OAAS,EAAG,CAAC,IAAD,iBACDoB,GADC,IACtB,2BAA8B,CAAC,IAApB/V,EAAmB,QAC5B,GAAIA,EAAO0U,MAAMC,OAAS,EAAG,CAC3B,IAAMmM,EAAW9gB,EAAO0U,MAAM0H,MAC5B,SAACrb,GAAD,MAA0B,YAAhBA,EAAKkT,UAEjB,GAAI6M,EAAU,CACZA,EAASrQ,OAASzQ,EAAOyQ,OACzBgQ,EAAQK,GACR,SATgB,gCA8CxBC,KACC,CAAChL,IAGF,oCACE,kBAAChK,EAAA,EAAD,CAAKnI,MAAM,UAAU4B,QAnCD,WACtB+H,GAAQ,IAkCyCrI,QAAQ,YACrD,kBAAC8b,GAAA,EAAD,CAAkBhc,UAAWN,EAAQ0C,OADvC,oBAKA,kBAACuG,GAAA,EAAD,CACE3I,UAAWN,EAAQ0O,OACnB7E,WAAYA,EACZ/I,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTa,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,mBACpBM,KAAMA,GAEN,kBAACO,GAAA,EAAD,8BACA,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACnBpH,EACC,kBAACoI,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,yBAAK0C,UAAWN,EAAQ8a,OACtB,yBAAKxa,UAAWN,EAAQwb,UACtB,kBAACjb,EAAA,EAAD,CAAYC,QAAQ,MAAMnE,EAAK4C,OAC/B,kBAACsB,EAAA,EAAD,CACErB,MAAM,gBACNsB,QAAQ,QACRiH,cAAY,GAHd,QAOA,kBAAClH,EAAA,EAAD,CAAYC,QAAQ,MAAMnE,EAAK8S,QAC/B,kBAAC5O,EAAA,EAAD,CAAYrB,MAAM,gBAAgBsB,QAAQ,SAA1C,WAKF,kBAAC+b,GAAA,EAAD,KACE,kBAAC1b,EAAA,EAAD,CACE2b,MAzGOrN,EAyGiB9S,EAAK8S,OAzGdlQ,EAyGsB5C,EAAK4C,MAxGnD,yCAAqCrF,mBAC5C,WAAaqF,EAAQ,OAASkQ,KAwGd0B,OAAO,UAFT,iBAMA,kBAAChQ,EAAA,EAAD,CACE2b,KAxGQ,SAACrN,EAAQlQ,GAInC,MAHS,0CAAsCrF,mBAC7CqF,EAAQ,IAAMkQ,IAsGQsN,CAAoBpgB,EAAK8S,OAAQ9S,EAAK4C,OAC5C4R,OAAO,UAFT,mBAQF,yBAAKvQ,UAAWN,EAAQ0b,aACtB,kBAAC3B,GAAA,EAAD,CAAM7a,MAAM,YAAYuD,MAAOpG,EAAK0P,SACpC,kBAACxL,EAAA,EAAD,KACGlE,EAAKqM,QAAQjD,UADhB,IAC4BpJ,EAAKqM,QAAQhD,aAM/C,kBAACjB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,yBAAK0C,UAAWN,EAAQ8a,OACtB,kBAACva,EAAA,EAAD,CAAYC,QAAQ,MAApB,UAEA,kBAAC+b,GAAA,EAAD,CAAa3U,WAAS,EAACY,KAAK,SAC1B,kBAACR,GAAA,EAAD,CAAS/I,MAAM,UAAUiJ,OAAK,GAC5B,kBAACrH,EAAA,EAAD,CACEP,UAAS,UAAKN,EAAQyb,aAAb,YACI,aAAXlM,GAAyBvP,EAAQoX,UAEnCtW,QAAS,kBAAMob,EAAwB,cAEvC,kBAACQ,GAAA,EAAD,QAGJ,kBAAC1U,GAAA,EAAD,CAAS/I,MAAM,SAASiJ,OAAK,GAC3B,kBAACrH,EAAA,EAAD,CACEP,UAAS,UAAKN,EAAQyb,aAAb,YACI,aAAXlM,GAAyBvP,EAAQoX,UAEnCtW,QAAS,kBAAMob,EAAwB,cAEvC,kBAACS,GAAA,EAAD,SAIM,aAAXpN,GACC,yBAAKjP,UAAWN,EAAQ4P,mBACtB,kBAACrP,EAAA,EAAD,CAAYkH,cAAY,GACtB,0DADF,eAGA,kBAACqP,GAAA,EAAD,CAAa1T,UAAU,YACrB,kBAACwZ,GAAA,EAAD,CACEjV,KAAK,oBACLjG,MAAOkO,EACPxN,SAAU+Z,GAEV,kBAAC1L,GAAA,EAAD,CACE/O,MAAM,gBACNgP,QAAS,kBAACmM,GAAA,EAAD,MACTpa,MAAM,kBAER,kBAACgO,GAAA,EAAD,CACE/O,MAAM,uBACNgP,QAAS,kBAACmM,GAAA,EAAD,MACTpa,MAAM,yBAER,kBAACgO,GAAA,EAAD,CACE/O,MAAM,uBACNgP,QAAS,kBAACmM,GAAA,EAAD,MACTpa,MAAM,4BAMJ,aAAX8M,GACC,yBAAKjP,UAAWN,EAAQ4P,mBACtB,kBAACrP,EAAA,EAAD,CAAYkH,cAAY,GACtB,wDADF,eAGA,kBAACqP,GAAA,EAAD,CAAa1T,UAAU,YACrB,kBAACwZ,GAAA,EAAD,CACEjV,KAAK,oBACLjG,MAAOkO,EACPxN,SAAU+Z,GAEV,kBAAC1L,GAAA,EAAD,CACE/O,MAAM,gEACNgP,QAAS,kBAACmM,GAAA,EAAD,MACTpa,MAAM,kEAER,kBAACgO,GAAA,EAAD,CACE/O,MAAM,2BACNgP,QAAS,kBAACmM,GAAA,EAAD,MACTpa,MAAM,6BAER,kBAACgO,GAAA,EAAD,CACE/O,MAAM,QACNgP,QAAS,kBAACmM,GAAA,EAAD,MACTpa,MAAM,gBAUtB,kBAAC,KAAD,CAAOwB,SAAS,QACd,kBAAC6Y,GAAA,EAAD,uBADF,+CAOJ,kBAACxT,GAAA,EAAD,KACGjN,GACC,kBAACwE,EAAA,EAAD,CACE3B,MAAM,UACNoI,SAAUlC,EACVtE,QAASmO,EACTzO,QAAQ,aAEP4E,EAAa,YAAc,mBAGhC,kBAACvE,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAEPnE,EAAO,SAAW,eC9MhBoD,gBArIS,SAACC,GAAD,sBAAiBA,EAAMsQ,UAEpB,SAACnQ,GAAD,MAAe,CACxCwM,SAAU,SAACpQ,GAAD,OACR4D,EAAS,CACPE,KtCE6B,sBsCD7BgF,QAASE,KAAMjJ,MAAMT,OAAOU,GAC5B8gB,OAAQ9gB,EACRiJ,SAAU,CAAEC,QAAS,uBAAwB3E,QAAS,cAE1DmB,OAAQ,kBACN9B,EAAS,CACPE,KtCAmC,4BsCCnCgF,QAASE,KAAMjJ,MAAMG,gBAEzByF,SAAU,kBAAM/B,EAAS,CAAEE,KtCNM,4BsC4HpBN,EAnHM,SAAC,GAA6C,IAA3C4R,EAA0C,EAA1CA,QAAShF,EAAiC,EAAjCA,SAAU1K,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAAe,EACxC+G,mBAAS,IAD+B,oBACzD9M,EADyD,KACnD0Q,EADmD,KAG1DK,EAAayE,EAChBzN,KAAI,SAACtI,GAAD,OACHA,EAAO0U,MAAMpM,KAAI,SAACvH,GAAD,MAAW,CAC1BoQ,UAAW,IAAIC,KAAKrQ,EAAKoQ,WAAWE,eACpC1N,MAAO5C,EAAK4C,MACZkQ,OAAQ9S,EAAK8S,OACb6N,YAAY,GAAD,OAAK3gB,EAAKqM,QAAQjD,UAAlB,YAA+BpJ,EAAKqM,QAAQhD,UACvDqG,OAAQzQ,EAAOyQ,OACfwD,OAAQlT,EAAKkT,OACbK,kBAAmBvT,EAAKuT,kBACxBzS,IAAKd,EAAKc,WAGbqU,OAhB6D,EAkB9C7I,mBAAS,CACzB,CAAE1J,MAAO,eAAgBgO,MAAO,YAAaC,SAAU,SACvD,CAAEjO,MAAO,aAAcgO,MAAO,SAC9B,CAAEhO,MAAO,cAAegO,MAAO,UAC/B,CAAEhO,MAAO,eAAgBgO,MAAO,cAAeC,SAAU,SACzD,CACEjO,MAAO,SACPgO,MAAO,SACPC,SAAU,QACV+P,OAAQ,SAACC,EAASC,GAAV,MACS,QAAfA,EACE,kBAACpD,GAAA,EAAD,CAAMtX,MAAOya,EAAQnR,OAAQ7M,MAAM,cAEnC,kBAAC6a,GAAA,EAAD,CAAMtX,MAAOya,EAAShe,MAAM,gBAGlC,CACED,MAAO,SACPgO,MAAO,SACPmQ,OAAQ,CACNC,SAAU,WACVC,QAAS,UACTC,SAAU,WACVC,QAAS,WAEXP,OAAQ,SAACC,EAASC,GAAV,MACS,QAAfA,EACE,0BAAM1K,MAAO,CAAEtO,WAAY,SAAUC,QAAS,SAC3C8Y,EAAQtN,kBACP,oCACGsN,EAAQ3N,OACT,kBAACvH,GAAA,EAAD,CACEE,OAAK,EACLhJ,MAAM,UACN2Q,gBAAiB,EACjB5Q,MAAOie,EAAQtN,mBAEf,kBAACE,GAAA,EAAD,CAAc2C,MAAO,CAAEpD,WAAY,WAIvC6N,EAAQ3N,QAIZ,8BAAO2N,OA7CR9P,EAlByD,qBAgFhE,OAZApL,qBAAU,WAGR,OAFAL,IAEO,WACL,OAAOC,OAER,IAEHI,qBAAU,WACRuK,EAAQK,KACP,CAACyE,IAGF,oCACE,kBAAC,GAAD,CAAYpS,MAAM,wBAChB,kBAAC,GAAD,OAGF,kBAAC,KAAD,CACEA,MAAM,gBACNmO,QAASA,EACTvR,KAAMA,EACNwR,aAAc,CACZtT,KAAM,CACJuT,uBAAwB,uCACxBC,QAAS,CACPC,WAAY,0BAIlBC,QAAS,CAAEC,oBAAqB,EAAGC,QAAQ,EAAO8P,UAAU,GAC5DvQ,SAAU,CACRkB,YAAa,SAACL,GAAD,OACX,IAAItU,SAAQ,SAACuU,EAASC,GACpB,IAAMyP,EAAU,aAAO7hB,GACjBwS,EAAQN,EAAQI,UAAUlS,GAChCyhB,EAAWpP,OAAOD,EAAO,GACzB9B,EAAQ,aAAImR,IACZrR,EAAS0B,EAAQ5Q,KACjB6Q,eChHRlP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0D,KAAM,CACJnD,YAAaP,EAAMM,QAAQ,QAoLhBG,gBAhLS,SAACC,GAAD,sBACnBA,EAAMie,aAGgB,SAAC9d,GAAD,MAAe,CACxC4J,MAAO,SAACxO,GAAD,OACL4E,EAAS,CACPE,KvCGqB,cuCFrBgF,QAASE,KAAMrK,KAAKM,SAASD,GAC7BiK,SAAU,CAAEC,QAAS,gBAAiB3E,QAAS,cAEnDmJ,OAAQ,kBAAM9J,EAAS,CAAEE,KvCGY,6BuCFrCuM,SAAU,SAACrR,GAAD,OACR4E,EAAS,CACPE,KvCCwB,iBuCAxBgF,QAASE,KAAMnI,SAASpB,OAAOT,GAC/BiK,SAAU,CAAEC,QAAS,kBAAmB3E,QAAS,iBAgKxCf,EA5JO,SAAC,GAOhB,IANLgE,EAMI,EANJA,OACA2B,EAKI,EALJA,WACAqE,EAII,EAJJA,MACAE,EAGI,EAHJA,OACA2C,EAEI,EAFJA,SACAsR,EACI,EADJA,QACI,EACoBjV,oBAAS,GAD7B,oBACGC,EADH,KACSC,EADT,KAGE7J,EAAQ4K,eACRC,EAAaC,aAAc9K,EAAMtB,YAAYqM,KAAK,OAClD/J,EAAUlB,KAEVya,EAAkB,WACtB1Q,GAAQ,IAGJC,EAAc,WAClBD,GAAQ,IAGJmB,EAAkB,SAACrM,GACvB8L,EAAM,2BAAK9L,GAAN,IAAcmE,KAAM,cAGrB0X,EAAqB,SAAC7b,GAC1B2O,EAAS,2BAAKsR,GAAYjgB,KAQ5B,OALAqE,qBAAU,WAEHoD,GAAe3B,GAAQoF,GAAQ,KACnC,CAACzD,IAGF,oCACGwY,EACC,kBAAC,GAAD,CAAc3V,OAAO,iBAAiBnH,QAASyY,GAC7C,kBAACpN,GAAA,EAAD,OAGF,kBAAC9E,EAAA,EAAD,CAAKnI,MAAM,UAAU4B,QAASyY,EAAiB/Y,QAAQ,YACrD,kBAAC0O,GAAA,EAAD,CAAK5O,UAAWN,EAAQ0C,OAD1B,eAKF,kBAACuG,GAAA,EAAD,CACEY,WAAYA,EACZjB,KAAMA,EACNM,QAASJ,EACThI,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBqB,OAAQA,EACRpB,QAAS,SAACF,GAAD,OAAQA,EAAGC,oBAEpB,kBAAC,IAAD,CACEhD,cAAe,CACbG,WAAkB,OAAPmY,QAAO,IAAPA,OAAA,EAAAA,EAASnY,YAAa,GACjCC,UAAiB,OAAPkY,QAAO,IAAPA,OAAA,EAAAA,EAASlY,WAAY,GAC/B3K,UAAiB,OAAP6iB,QAAO,IAAPA,OAAA,EAAAA,EAAS7iB,WAAY,GAC/BC,SAAU,IAEZkL,iBAAkBC,IAAW,CAC3BV,UAAWU,MAAakE,SAAS,YACjC3E,SAAUS,MAAakE,SAAS,YAChCtP,SAAUoL,MAAakE,SAAS,YAChCrP,SAAUmL,MAAakE,SAAUuT,EAAuB,GAAb,cAE7CvX,SAAQ,uCAAE,WAAO1I,GAAP,SAAA4I,EAAA,sDACRqX,EAAUpE,EAAmB7b,GAAUqM,EAAgBrM,GAD/C,2CAAF,uDAIR,kBAAC,IAAD,KACE,kBAACwL,GAAA,EAAD,KACGyU,EAAU,eAAiB,eAE9B,kBAACxU,GAAA,EAAD,KACE,kBAAC,GAAD,CAAY3F,OAAQA,IACpB,kBAACgB,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACE2L,WAAWqU,EACX1e,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,aACNkF,KAAK,YACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,YACNkF,KAAK,WACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,WAAYsW,GAAWxY,EACvB3C,MAAM,WACNkF,KAAK,WACL5H,KAAK,OACL6H,WAAS,KAGb,kBAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhH,GAAI,GACrB,kBAAC,IAAD,CACEsB,MAAM,UACNkE,UAAWsE,IACXJ,SAAUlC,EACV3C,MAAM,WACNkF,KAAK,WACL5H,KAAK,OACL6H,WAAS,OAKjB,kBAAC0B,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACE3B,MAAM,UACNoI,SAAUlC,EACVrF,KAAK,SACLS,QAAQ,aAEPod,EACGxY,EACE,cACA,SACFA,EACA,YACA,OAEN,kBAACvE,EAAA,EAAD,CACEyG,SAAUlC,EACVtE,QAASgI,EACTtI,QAAQ,aAHV,kBC3GCf,gBAAQ,iBAAO,MAxEH,SAACI,GAAD,MAAe,CACxCwM,SAAU,SAACtR,GAAD,OACR8E,EAAS,CACPE,KxC0BwB,iBwCzBxBgF,QAASE,KAAMnI,SAASvB,OAAOR,GAC/BA,WACAmK,SAAU,CAAEC,QAAS,kBAAmB3E,QAAS,iBAkExCf,EA9DY,SAAC,GAA2B,IAAzB4M,EAAwB,EAAxBA,SAAUuR,EAAc,EAAdA,QAAc,EAC5BjV,oBAAS,GADmB,oBAC7CC,EAD6C,KACvCC,EADuC,KAO9CC,EAAc,WAClBD,GAAQ,IAQV,OACE,oCACE,kBAAC,GAAD,CAAcZ,OAAO,iBAAiBnH,QAflB,WACtB+H,GAAQ,KAeJ,kBAAC4Q,GAAA,EAAD,OAEF,kBAACxQ,GAAA,EAAD,CACEL,KAAMA,EACN9H,QAAS,SAACuH,GAAD,OAAQA,EAAGC,mBACpBY,QAASJ,EACTP,QAAS,SAACF,GAAD,OAAQA,EAAGC,oBAEpB,kBAACa,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBjG,UAAU,OAA7B,kCACkC,IAChC,2BACGwa,EAAQnY,UADX,IACuBmY,EAAQlY,UAHjC,yCAME,4BACE,oDACA,iDACA,gDACA,2CAVJ,6CAY4C,+CAZ5C,MAeF,kBAAC4D,GAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CACEC,QAnCW,WACnB+H,GAAQ,GACRwD,EAASuR,EAAQ7iB,WAkCTmE,MAAM,YACNsB,QAAQ,YACR+I,WAAS,GAJX,UAQA,kBAAC1I,EAAA,EAAD,CAAQC,QAASgI,EAAatI,QAAQ,aAAtC,gBClEJ1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6e,eAAgB,CACdzZ,QAAS,SAEX0Z,cAAe,CACb3Z,WAAY,SACZC,QAAS,OACTE,eAAgB,gBAChBtD,MAAO,QAET+c,gBAAiB,CACfxe,YAAaP,EAAMM,QAAQ,GAC3B0W,SAAUhX,EAAMM,QAAQ,KAE1B0e,YAAa,CACX7e,SAAU,SAkEC8e,GA9DK,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SAAe,EACJhV,oBAAS,GADL,oBAC7BgS,EAD6B,KACnBC,EADmB,KAG9B5a,EAAUlB,KAMhB,OACE,qCACW,OAAR6e,QAAQ,IAARA,OAAA,EAAAA,EAAU1N,QAAS,EAClB0N,EAAS/Z,KAAI,SAACga,GACZ,OACE,kBAAC/C,GAAA,EAAD,CACEF,SAAUA,IAAaiD,EAAQ7iB,SAC/B8I,IAAK+Z,EAAQ7iB,SACbqH,UAZU0Y,EAYa8C,EAAQ7iB,SAZX,SAACsN,EAAI0S,GACnCH,IAAYG,GAAaD,MAaf,kBAACE,GAAA,EAAD,CAAuBC,WAAY,kBAACC,GAAA,EAAD,OACjC,yBAAK5a,UAAWN,EAAQ8d,eACtB,kBAAC/D,GAAA,EAAD,CACE7a,MAAM,YACNuD,MAAOmb,EAAQ7iB,SACfuF,UAAWN,EAAQ+d,kBAErB,kBAACxd,EAAA,EAAD,CAAYD,UAAWN,EAAQge,YAAaxd,QAAQ,MACjDod,EAAQnY,UADX,IACuBmY,EAAQlY,UAE/B,kBAAC,GAAD,CAAekY,QAASA,IACxB,kBAAC,GAAD,CAAoBA,QAASA,MAGjC,kBAACxC,GAAA,EAAD,CAAuB9a,UAAWN,EAAQ6d,gBACxC,kBAACtd,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACCod,EAAQvM,SAAWuM,EAAQvM,QAAQpB,OAAS,EAC3C2N,EAAQvM,QAAQzN,KAAI,SAACtI,GACnB,OACE,yBAAKuI,IAAKvI,EAAO6B,KACf,kBAACoD,EAAA,EAAD,eACUjF,EAAOyQ,OADjB,MAC4BzQ,EAAOqM,KADnC,KAC2C,IACxCrM,EAAOiW,SAAStB,OAFnB,iBAQN,6BACE,kBAAC1P,EAAA,EAAD,wCA3CG,IAACua,KAmDhB,kBAACva,EAAA,EAAD,4BC5COd,gBAhCS,SAACC,GAAD,sBACnBA,EAAMie,aAGgB,SAAC9d,GAAD,MAAe,CACxC8B,OAAQ,kBACN9B,EAAS,CACPE,K1C2BqC,8B0C1BrCgF,QAASE,KAAMnI,SAASrB,YAE5BmG,SAAU,kBAAM/B,EAAS,CAAEE,K1CyBgB,sC0CH9BN,EAnBQ,SAAC,GAAoC,IAAlCkC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAU+b,EAAe,EAAfA,SAS1C,OARA3b,qBAAU,WAGR,OAFAL,IAEO,WACLC,OAED,IAGD,oCACE,kBAAC,GAAD,CAAY3C,MAAO,mBACjB,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAa0e,SAAUA,QCgCdle,gBArDS,SAACC,GAAD,MAAY,CAClCO,YAAaP,EAAM4B,OAAOrB,gBAoDY,iBAAO,KAAhCR,EAjDF,SAACjB,GAAW,IACfyB,EAAgBzB,EAAhByB,YAER,OAAKA,EAKH,oCACE,kBAAC,EAAD,CAAQA,YAAaA,IACrB,kBAAC,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEc,KAAK,mBACLkC,UAAW8a,KAEb,kBAAC,EAAD,CAAgBhd,KAAK,oBAAoBkC,UAAWtH,KACpD,kBAAC,EAAD,CAAgBoF,KAAK,iBAAiBkC,UAAW+a,KAEjD,kBAAC,EAAD,CACEjd,KAAK,oBACLkC,UAAWgb,KAEb,kBAAC,EAAD,CACEld,KAAK,mBACLkC,UAAWib,KAEb,kBAAC,EAAD,CAAgBnd,KAAK,oBAAoBkC,UAAWtH,KACpD,kBAAC,EAAD,CAAgBoF,KAAK,iBAAiBkC,UAAWkb,KAEjD,kBAAC,EAAD,CACEpd,KAAK,kBACLkC,UAAWgb,KAEb,kBAAC,EAAD,CAAgBld,KAAK,iBAAiBkC,UAAWib,KACjD,kBAAC,EAAD,CAAgBnd,KAAK,kBAAkBkC,UAAWtH,KAClD,kBAAC,EAAD,CAAgBoF,KAAK,eAAekC,UAAWkb,KAC/C,kBAAC,EAAD,CAAgBpd,KAAK,kBAAkBkC,UAAWmb,KAElD,kBAAC,IAAD,CAAOnb,UAAWF,MAGtB,kBAAC,EAAD,QAvCG,kBAAC,IAAD,CAAUG,GAAG,c,0CCpBlBvE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4P,WAAY,CACVzK,WAAY,SACZwK,gBAAgB,OAAD,OAASC,KAAT,KACfE,eAAgB,QAChB1K,QAAS,OACThF,OAAQ,OACRkF,eAAgB,UAElB3F,KAAM,CACJa,aAAcR,EAAMM,QAAQ,GAC5B0B,MAAO,KAET8Z,MAAO,CACL3W,WAAY,SACZ4P,aAAc,OACd3P,QAAS,OACToa,SAAU,gBACVC,UAAW,SACXngB,QAAS,YACT6B,SAAU,YAEZ2H,KAAM,CACJ5I,MAAOF,EAAMlB,QAAQC,QAAQuN,KAC7BJ,UAAW,cAmBAwT,GAfC,SAAClgB,GACf,IAAMwB,EAAUlB,KAEhB,OACE,kBAAC,KAAD,CAAUwB,UAAWN,EAAQ4O,YAC3B,kBAACpH,GAAA,EAAD,CAAOmX,UAAW,GAAIre,UAAWN,EAAQ8a,OACvC,kBAAC,EAAD,CAAMxa,UAAWN,EAAQrB,OACzB,kBAAC4B,EAAA,EAAD,CAAYD,UAAWN,EAAQ8H,KAAMtH,QAAQ,MAA7C,iB,UCyCOf,gBAvES,SAACC,GAAD,sBAAiBA,EAAMkf,SAEpB,SAAC/e,GAAD,MAAe,CACxCwG,SAAU,SAACtL,EAAUC,GAAX,OACR6E,EAAS,CAAEE,KAAMlB,EAAOkG,QAASE,KAAMrK,KAAKE,MAAMC,EAAUC,SAmEjDyE,EAhEG,SAACjB,GAKjB,OACE,kBAAC,IAAD,CACE8G,cAAe,CACbvK,SAAU,GACVC,SAAU,IAEZkL,iBAAkBC,IAAW,CAC3BpL,SAAUoL,MAAakE,SAAS,YAEhCrP,SAAUmL,MAAakE,SAAS,cAGlChE,SAAU,SAAC1I,IAhBI,SAAC5C,EAAUC,GAC5BwD,EAAM6H,SAAStL,EAAUC,GAiBrB6jB,CAD+BlhB,EAAvB5C,SAAuB4C,EAAb3C,YAIpB,kBAAC,IAAD,KACE,kBAACyJ,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,CAAYnB,OAAQjF,EAAMiF,SAC1B,kBAAC,IAAD,CACEL,UAAWsE,IACXJ,SAAU9I,EAAM4G,WAChBwC,WAAS,EACTnF,MAAM,WACNkF,KAAK,WACL5H,KAAK,OACLS,QAAQ,cAGZ,kBAACiE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACExB,UAAWsE,IACXJ,SAAU9I,EAAM4G,WAChBwC,WAAS,EACTnF,MAAM,WACNkF,KAAK,WACL5H,KAAK,WACLS,QAAQ,cAGZ,kBAACiE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC/D,EAAA,EAAD,CACE3B,MAAM,UACNoI,SAAU9I,EAAM4G,WAChBoD,KAAK,QACLzI,KAAK,SACLS,QAAQ,aAEPhC,EAAM4G,WAAa,aAAe,gBC9D3CtG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCL,KAAM,CACJyF,QAAS,QACT0a,OAAQ,SACR9d,MAAO,KAET+d,KAAK,cACH5a,WAAY,SACZwK,gBAAgB,OAAD,OAASC,KAAT,KACfE,eAAgB,QAChB1K,QAAS,OACThF,OAAQ,OACRkF,eAAgB,UACftF,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5BzE,eAAgB,UAChBxK,eAAgB,aAGpBwW,MAAM,cACJ/G,aAAc,OACd0K,UAAW,SACXngB,QAAS,YACT6B,SAAU,WACVa,MAAO,OACNhC,EAAMtB,YAAY6V,GAAG,MAAQ,CAC5BQ,aAAc,IACd3U,OAAQ,OACR4B,MAAO,QAGXge,SAAU,CACR5f,OAAQ,GACR6f,KAAM,IACN9e,SAAU,WACV+e,IAAK,IACLle,MAAO,YA2CIvB,gBAvCS,SAACC,GAAD,mBAAC,eACpBA,EAAMkf,MADa,IAEtB3e,YAAaP,EAAM4B,OAAOrB,iBAGD,SAACJ,GAAD,MAAe,CACxC+B,SAAU,kBAAM/B,EAAS,CAAEE,K9ClDM,4B8CmFpBN,EA9BD,SAACjB,GACb,IAAMwB,EAAUlB,KAMhB,OAJAkD,qBAAU,WACR,OAAO,kBAAMxD,EAAMoD,cAClB,IAECpD,EAAMyB,YACD,kBAAC,IAAD,CAAUoD,GAAG,MAIpB,kBAAC,KAAD,KACE,yBAAK/C,UAAWN,EAAQ+e,MACtB,kBAACvX,GAAA,EAAD,CAAOmX,UAAW,GAAIre,UAAWN,EAAQ8a,OACtCtc,EAAM4G,YAAc,kBAAC+Z,GAAA,EAAD,CAAgB7e,UAAWN,EAAQgf,WACxD,kBAACva,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,GACvB,kBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CAAMtE,UAAWN,EAAQrB,QAE3B,kBAAC8F,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,c,UClERwa,GAAe,SAAC5gB,GAAW,IACvB0G,EAAa1G,EAAb0G,SACAma,EAAoBC,eAApBD,gBAQR,OANArd,qBAAU,WACJkD,GACFma,EAAgBna,EAASC,QAAS,CAAE3E,QAAS0E,EAAS1E,YAEvD,CAAC0E,IAEG1G,EAAMyE,UAyBAxD,gBA3CS,SAACC,GAAD,MAAY,CAClCwF,SAAUxF,EAAM6f,SAASra,aAGA,SAACrF,GAAD,MAAe,CACxC2f,gBAAiB,kBAAM3f,EAAS,CAAEE,K/CSL,wB+C6BhBN,EAtBE,SAACjB,GAChB,IAAMihB,EAAeC,IAAMC,YACrBC,EAAoB,SAAC/b,GAAD,OAAS,WACjC4b,EAAa5kB,QAAQglB,cAAchc,KAGrC,OACE,kBAAC,KAAD,CACEic,SAAU,EACVC,IAAKN,EACLxX,OAAQ,SAACpE,GAAD,OACN,kBAAChD,EAAA,EAAD,CAAQC,QAAS8e,EAAkB/b,IAAnC,YAEFqF,QAAS,WACP1K,EAAMghB,oBAGR,kBAAC,GAAD,CAActa,SAAU1G,EAAM0G,UAAW1G,EAAMyE,c,gDCrCtC,cAAyB,IAAxBvD,EAAuB,uDAAf,GAAIuI,EAAW,uCACrC,OAAQA,EAAOlI,MACb,KAAKnB,EACH,GAAIqJ,EAAO+X,UAAYnhB,GhDDL,agDCcoJ,EAAO+X,QACrC,OAAO,2BAAKtgB,GAAZ,IAAmB0F,YAAY,IAEjC,MACF,KAAKvG,EACL,IhDNoB,WgDOlB,OAAO,2BACFa,GADL,IAEE0F,YAAY,EACZ3B,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,OAEnD,IhDf+B,sBgDgB/B,IhDZkC,yBgDahC,MAAO,GACT,QACE,OAAO/D,EAGX,OAAOA,GCdHwgB,GAAe,CACnBC,QAAS,YACTnmB,MAAO,KACPomB,kBAAmB,GAGN,cAAmC,IAAlC1gB,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC/C,OAAQA,EAAOlI,MACb,IjDvBoB,WiDwBlB,OAAO,2BACFL,GADL,IAEE1F,MAAOiO,EAAOjO,OAAS,KACvBqmB,WAAW,EACXpgB,YAAagI,EAAOlD,QAAUkD,EAAOlD,QAAQ9J,KAAO,KACpDc,SAAUkM,EAAOlD,QAAUkD,EAAOlD,QAAQhJ,SAAW,OAEzD,IjDvBkB,SiDwBhB,OAAO,2BAAK2D,GAAZ,IAAmB+B,WAAY,SAAUzH,MAAO,KAAMiG,YAAa,OACrE,KAAKpB,EACL,IjDxBoB,WiDyBlB,OAAO,2BACFa,GADL,IAEE+B,WAAYwG,EAAOgY,MAAQ,KAAO,IAClCjmB,MAAOiO,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQ9J,KAAKjB,MACjDiG,YAAagI,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQ9J,KAClDc,SAAUkM,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQhJ,WAEnD,IjDnC+B,sBiDoC/B,IjDhCkC,yBiDiClC,IjD/BkC,yBiDgChC,OAAO,2BAAK2D,GAAZ,IAAmB0gB,kBAAmB1gB,EAAM0gB,kBAAoB,IAClE,IjD9BsB,aiD+BtB,IjD7B0B,iBiD8BxB,OAAO,2BAAK1gB,GAAZ,IAAmB+B,WAAYwG,EAAOxG,aACxC,IjDhDoB,WiDiDlB,OAAO,2BAAK/B,GAAZ,IAAmB+B,WAAY,OACjC,IjDrC0B,iBiDsCxB,OAAO,2BACF/B,GADL,IAEEO,YAAagI,EAAOgY,MAAQvgB,EAAMO,YAAcgI,EAAOlD,QAAQ,GAAG9J,KAClEc,SAAUkM,EAAOgY,MAAQvgB,EAAM3D,SAAWkM,EAAOlD,QAAQ,GAAGhJ,WAEhE,IjDL+B,sBiDM7B,OAAO,2BACF2D,GADL,IAEE3D,SAAUkM,EAAOgY,MACbvgB,EAAM3D,SADA,2BAED2D,EAAM3D,UAFL,IAEeukB,mBAAeC,MAE5C,QACE,OAAO7gB,IC9CPwgB,GAAe,CACnB7O,QAAS,GACT5N,OAAQ,KACR4X,YAAa,KACbjW,YAAY,EACZkW,YAAY,GAGRkF,GAAiB,SAACja,EAAGka,GAAJ,OAAUla,EAAEb,SAASgb,cAAcD,EAAE/a,WACtDib,GAAe,SAACpa,EAAGka,GAAJ,OAAUla,EAAEwF,OAAS0U,EAAE1U,QAE7B,cAAmC,IAAlCrM,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC3CoJ,EAAU,GACd,OAAQpJ,EAAOlI,MACb,IlDFsB,akDGpB,OAAO,2BACFL,GADL,IAEE2R,QAASpJ,EAAOgY,MACZvgB,EAAM2R,QACN,uBAAI3R,EAAM2R,SAAV,CAAmBpJ,EAAOlD,QAAQzJ,SAAQslB,MAAK,SAACra,EAAGka,GAAJ,OAC7CE,GAAapa,EAAGka,MAEtBhd,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,IAEhB,IlDNuB,ckDoBrB,OAXAiM,EAAU,GACV3R,EAAM2R,QAAQsD,SAAQ,SAACrZ,GACrB,IAAMulB,EAAU,eAAQvlB,GACpBA,EAAO6B,IAAI2jB,aAAe7Y,EAAOvL,WACnCmkB,EAAWtP,SAAW,uBACjBjW,EAAOiW,UADU,CAEpBtJ,EAAOlD,QAAQ9J,OACf2lB,MAAK,SAACra,EAAGka,GAAJ,OAAUD,GAAeja,EAAGka,OAErCpP,EAAQwG,KAAKgJ,MAER,2BACFnhB,GADL,IAEE2R,QAASpJ,EAAOgY,MAAQvgB,EAAM2R,QAAUA,EACxC5N,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,IAEhB,IlD5CwB,ekD6CtB,OAAO,2BAAK1F,GAAZ,IAAmB2b,YAAa,OAClC,KAAKzc,EACH,GlD7BqB,gBkD8BnBqJ,EAAO+X,SlDrCW,ekDsClB/X,EAAO+X,SlDjCc,kBkDkCrB/X,EAAO+X,SlD3Be,mBkD4BtB/X,EAAO+X,QAEP,OAAO,2BAAKtgB,GAAZ,IAAmB+D,OAAQ,KAAM2B,YAAY,IACxC,GlDzCsB,wBkDyClB6C,EAAO+X,QAChB,OAAO,2BAAKtgB,GAAZ,IAAmB+D,OAAQ,KAAM6X,YAAY,IACxC,GlDpCkB,oBkDoCdrT,EAAO+X,QAChB,OAAO,2BAAKtgB,GAAZ,IAAmB+D,OAAQ,KAAM4X,YAAa,KAAMjW,YAAY,IAElE,MACF,IlDhDkC,yBkDiDlC,IlDvCmC,0BkDwCjC,OAAO,2BAAK1F,GAAZ,IAAmB+D,OAAQ,OAC7B,IlDlD+B,sBkDmD/B,IlDViC,wBkDW/B,OAAO,2BAAK/D,GAAZ,IAAmB2R,QAASpJ,EAAOlD,QAAQsM,QAASiK,YAAY,IAClE,IlDpDiC,wBkDqDjC,IlDZmC,0BkDajC,OAAO4E,GACT,IlDtDyB,gBkDuDvB,OAAO,2BACFxgB,GADL,IAEE2R,QAASpJ,EAAOgY,MACZvgB,EAAM2R,QACN3R,EAAM2R,QAAQkG,QAAO,SAACjc,GAAD,OAAYA,EAAOE,OAASyM,EAAOzM,UAEhE,IlDzD0B,iBkDsExB,OAVA6V,EAAU,GACV3R,EAAM2R,QAAQsD,SAAQ,SAACrZ,GACrB,IAAMulB,EAAU,eAAQvlB,GACpBA,EAAO6B,IAAI2jB,aAAe7Y,EAAOvL,SAASokB,aAC5CD,EAAWtP,SAAWjW,EAAOiW,SAASgG,QACpC,SAAC7O,GAAD,OAAaA,EAAQ3N,WAAakN,EAAOlN,aAG7CsW,EAAQwG,KAAKgJ,MAER,2BACFnhB,GADL,IAEE2R,QAASpJ,EAAOgY,MAAQvgB,EAAM2R,QAAUA,IAE5C,IlDzE2B,kBkD6EzB,OAFCpJ,EAAOgY,OACNhY,EAAOlD,QAAQzJ,OAAOiW,SAASqP,MAAK,SAACra,EAAGka,GAAJ,OAAUD,GAAeja,EAAGka,MAC3D,2BACF/gB,GADL,IAEE2R,QAASpJ,EAAOgY,MACZvgB,EAAM2R,QACN3R,EAAM2R,QAAQzN,KAAI,SAACtI,GAAD,OAChBA,EAAO6B,MAAQ8K,EAAOlD,QAAQzJ,OAAO6B,IACjC8K,EAAOlD,QAAQzJ,OACfA,KAEVmI,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C4X,YAAapT,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQgc,MAClD3b,YAAY,IAEhB,IlDzFkC,yBkD0FhC,OAAO,eAAK1F,GACd,IlDhGyB,gBkDiGvB,OAAO,2BACFA,GADL,IAEE2R,QAASpJ,EAAOgY,MACZvgB,EAAM2R,QACN3R,EAAM2R,QACHzN,KAAI,SAACtI,GAAD,OACHA,EAAO6B,MAAQ8K,EAAOlD,QAAQzJ,OAAO6B,IACjC8K,EAAOlD,QAAQzJ,OACfA,KAELslB,MAAK,SAACra,EAAGka,GAAJ,OAAUE,GAAapa,EAAGka,MACtChd,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,IAEhB,IlDxG0B,iBkD2GxBiM,EAAU,GACV,IAAM2P,EAAc/Y,EAAOlD,QAAQ9J,KAcnC,OAbAyE,EAAM2R,QAAQsD,SAAQ,SAACrZ,GACrB,IAAMulB,EAAU,eAAQvlB,GACpBA,EAAO6B,IAAI2jB,aAAe7Y,EAAOvL,SAASokB,aAC5CD,EAAWtP,SAAWjW,EAAOiW,SAC1B3N,KAAI,SAAC8E,GAAD,OACHA,EAAQvL,IAAI2jB,aAAeE,EAAY7jB,IAAI2jB,WACvCE,EACAtY,KAELkY,MAAK,SAACra,EAAGka,GAAJ,OAAUD,GAAeja,EAAGka,OAEtCpP,EAAQwG,KAAKgJ,MAER,2BACFnhB,GADL,IAEE2R,QAASpJ,EAAOgY,MAAQvgB,EAAM2R,QAAUA,EACxC5N,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,IAEhB,QACE,OAAO1F,EAGX,OAAOA,GCzKM,cAAyB,IAAxBA,EAAuB,uDAAf,GAAIuI,EAAW,uCACrC,OAAQA,EAAOlI,MACb,InDQsB,amDPtB,InDS0B,iBmDRxB,OAAO,2BACFL,GADL,IAEEC,YAAasI,EAAOvG,QAExB,InDGwB,emDFtB,MAAO,GACT,QACE,OAAOhC,ICQE,cAAyB,IAAxBA,EAAuB,uDAAf,GAAIuI,EAAW,uCACrC,OAAQA,EAAOlI,MACb,IpDIsB,aoDHtB,IpDUuB,coDTvB,IpDgBuB,coDfvB,IpDqC2B,kBoDpC3B,IpDqC4B,mBoDpC5B,IpDGyB,gBoDFzB,IpDV+B,sBoDW/B,IpDK0B,iBoDJ1B,IpDwBuB,coDvBvB,IpDU0B,iBoDT1B,IpDgC8B,qBoD/B9B,IpDkByB,gBoDjBzB,IpDC2B,kBoDA3B,IpDCkC,yBoDAlC,IpD3B0B,iBoD4B1B,IpDf+B,sBoDgB/B,IpDPyB,gBoDQzB,IpDD0B,iBoDE1B,IpDiBuB,coDhBvB,IpDI0B,iBoDH1B,IpDuB8B,qBoDtB5B,OAAO,2BACFL,GADL,IAEEwF,SAAU+C,EAAOgY,MACb,KACAhY,EAAO/C,WAEf,IpDjC2B,kBoDkCzB,OAAO,2BAAKxF,GAAZ,IAAmBwF,SAAU,OAC/B,QACE,OAAOxF,I,UCvCPwgB,GAAe,CACnB1V,YAAa,KACb/G,OAAQ,KACRuV,cAAe,KACf5T,YAAY,EACZqF,MAAO,KACPvN,aAAc,MAGV+jB,GAAY,SAAC/jB,EAAcsN,GAC/B,IAAM0W,EAAkB,SAACzW,EAAOzN,GAAR,OAAwByN,EAAQzN,EAAYmN,QAG9D6B,EAAU9O,EAAa8O,QAAQmV,OAAOD,EAAiB,GACvDjV,EAAY/O,EAAa+O,UAAUkV,OAAOD,EAAiB,GAC3D1X,EAAStM,EAAasM,OAAO2X,QAJjB,SAAC1W,EAAOF,GAAR,OAAkBE,EAAQH,GAAaC,EAAOC,KAIX,GAIrD,MAAO,CAAEQ,QAFOgB,EAAUC,EAAYzC,EAEpBwC,UAASC,YAAWzC,WAGlC4X,GAAY,SAACC,EAAOnkB,EAAcokB,GACtC,GAAIA,EAAS,CACX,IAAMC,EAAYD,EAAQnkB,IAAI2jB,WACxBU,EAAaH,EAAM9J,QACvB,SAAChN,GAAD,OAAWA,EAAM7B,QAAQvL,IAAI2jB,aAAeS,KAG1CC,IACFtkB,EAAasM,OAASiY,mBAAQD,EAAD,aAAiBtkB,EAAasM,QAAS,QAIxE,OAAOtM,GAGHwkB,GAAiB,SAACL,EAAOnkB,GAE7B,IADA,IACA,MADcwG,OAAOC,KAAKzG,GAC1B,eAA0B,CAArB,IAAM6C,EAAI,KACTA,EAAK4hB,WAAWN,EAAMthB,QACxB7C,EAAa6C,GAAb,CAAsBshB,GAAtB,oBAAgCnkB,EAAa6C,MAGjD,OAAO7C,GAGH0kB,GAAqB,SAACP,EAAOnkB,EAAcokB,GAC/C,GAAIA,EAAS,CACX,IAAMC,EAAYD,EAAQnkB,IAAI2jB,WACxBU,EAAaH,EAAM3J,MACvB,SAAC1a,GAAD,OAAiBA,EAAY0L,QAAQvL,IAAI2jB,aAAeS,KAG1D,GAAIC,EAAY,OAAOE,GAAeF,EAAYtkB,GAGpD,OAAOA,GAGH2kB,GAAoB,SAACtT,EAASrR,GAElC,IADA,IACA,MADcwG,OAAOC,KAAKzG,GAC1B,eAA0B,CAArB,IAAM6C,EAAI,KACTA,EAAK4hB,WAAWpT,EAAQxO,QAC1B7C,EAAa6C,GAAQ7C,EAAa6C,GAAMwX,QACtC,SAACva,GAAD,OAAiBA,EAAYG,MAAQoR,EAAQpR,QAInD,OAAOD,GAGH4kB,GAAoB,SAACC,EAAS7kB,GAElC,IADA,IACA,MADcwG,OAAOC,KAAKzG,GAC1B,eAA0B,CAArB,IAAM6C,EAAI,KACTA,EAAK4hB,WAAWI,EAAQhiB,QAC1B7C,EAAa6C,GAAQ7C,EAAa6C,GAAM6D,KAAI,SAAC5G,GAAD,OAC1CA,EAAYG,MAAQ4kB,EAAQ5kB,IAAM4kB,EAAU/kB,MAIlD,OAAOE,GAGM,cAAmC,IAAlCwC,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC/C,OAAQA,EAAOlI,MACb,IrDxC+B,sBqDyC7B,OAAO,2BACFL,GADL,IAEE8K,YAAavC,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQa,eAClD6E,MAAOxC,EAAOgY,MACV,KACAgB,GACEhZ,EAAOlD,QAAQ7H,aACf+K,EAAOlD,QAAQa,gBAErB1I,aAAc+K,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQ7H,eAEvD,IrDnDiC,wBqDoD/B,OAAO,2BAAKwC,GAAZ,IAAmB8K,YAAa,KAAMC,MAAO,KAAMvN,aAAc,OACnE,IrDpDkC,yBqDqDlC,IrDnGwB,eqDoGtB,OAAO,2BAAKwC,GAAZ,IAAmBsZ,cAAe,OACpC,IrDtD2B,kBqDuDzB,IAAMgJ,EAAqB/Z,EAAOgY,MAI9B,GAHAyB,GAAezZ,EAAOlD,QAAQ/H,YAAhB,eACT0C,EAAMxC,eAGf,OAAO,2BACFwC,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZlI,aAAc+K,EAAOgY,MAAQvgB,EAAMxC,aAAe8kB,EAClDvX,MAAOxC,EAAOgY,MACVvgB,EAAM+K,MACNwW,GAAUe,EAAmBtiB,EAAM8K,eAE3C,IrDpE4B,mBqDqE1B,IAAMyX,EAAyBha,EAAOgY,MAMlC,GALA2B,GACE3Z,EAAOlD,QAAQ7H,aADC,eAEXwC,EAAMxC,cACX+K,EAAOuL,YAGb,OAAO,2BACF9T,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZlI,aAAc+K,EAAOgY,MAAQvgB,EAAMxC,aAAe+kB,EAClDxX,MAAOxC,EAAOgY,MACVvgB,EAAM+K,MACNwW,GAAUgB,EAAuBviB,EAAM8K,eAE/C,KAAK5L,EACH,GrDvFyB,oBqDwFvBqJ,EAAO+X,SrDvFiB,qBqDwFxB/X,EAAO+X,SrDvFmB,uBqDwF1B/X,EAAO+X,SrDvFmB,uBqDwF1B/X,EAAO+X,QAEP,OAAO,2BAAKtgB,GAAZ,IAAmB+D,OAAQ,KAAM2B,YAAY,IACxC,GrDzGgB,kBqDyGZ6C,EAAO+X,QAChB,OAAO,2BAAKtgB,GAAZ,IAAmB+D,OAAQ,KAAMuV,cAAe,KAAM5T,YAAY,IAEpE,MACF,IrDhG8B,qBqDkG5B,IAAM8c,EAAuBja,EAAOgY,MAIhC,GAHA4B,GAAkB5Z,EAAOsG,QAAR,eACZ7O,EAAMxC,eAGf,OAAO,2BACFwC,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZlI,aAAc+K,EAAOgY,MAAQvgB,EAAMxC,aAAeglB,EAClDzX,MAAOxC,EAAOgY,MACVvgB,EAAM+K,MACNwW,GAAUiB,EAAqBxiB,EAAM8K,eAE7C,IrD7HyB,gBqD8HvB,IAAM2X,EAAela,EAAOgY,MAMxB,GALAmB,GACEnZ,EAAOlD,QAAQyE,OADR,eAEF9J,EAAMxC,cACX+K,EAAOuL,YAGb,OAAO,2BACF9T,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/CuV,cAAe/Q,EAAOgY,MAAQ,KAAOhY,EAAOlD,QAAQqd,QACpDhd,YAAY,EACZlI,aAAc+K,EAAOgY,MAAQvgB,EAAMxC,aAAeilB,EAClD1X,MAAOxC,EAAOgY,MACVvgB,EAAM+K,MACNwW,GAAUkB,EAAaziB,EAAM8K,eAErC,IrD9IyC,gCqD+IzC,IrDjIuC,8BqDkIvC,IrDjIwC,+BqDkItC,OAAO,2BAAK9K,GAAZ,IAAmB+D,OAAQ,OAC7B,IrDrI8B,qBqDsI5B,IAAM4e,EAAuBpa,EAAOgY,MAIhC,GAHA6B,GAAkB7Z,EAAOlD,QAAQ/H,YAAhB,eACZ0C,EAAMxC,eAGf,OAAO,2BACFwC,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZlI,aAAc+K,EAAOgY,MAAQvgB,EAAMxC,aAAemlB,EAClD5X,MAAOxC,EAAOgY,MACVvgB,EAAM+K,MACNwW,GAAUoB,EAAqB3iB,EAAM8K,eAE7C,QACE,OAAO9K,EAGX,OAAOA,GCtNHwgB,GAAe,CACnBzc,OAAQ,KACR2B,YAAY,EACZkd,eAAgB,MAGH,cAAmC,IAAlC5iB,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC/C,OAAQA,EAAOlI,MACb,KAAKnB,EACH,GtDHwB,mBsDGpBqJ,EAAO+X,QACT,OAAO,2BACFtgB,GADL,IAEE0F,YAAY,IAGhB,MACF,ItD6BiC,wBsD5B/B,OAAO,2BAAK1F,GAAZ,IAAmB4iB,eAAgBra,EAAOlD,QAAQud,iBACpD,ItDbkC,yBsDclC,ItD2BmC,0BsD1BjC,OAAOpC,GACT,ItDf0B,iBsDgBxB,OAAO,2BACFxgB,GADL,IAEE0F,YAAY,EACZ3B,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,OAEnD,QACE,OAAO/D,EAGX,OAAOA,GC/BHwgB,GAAe,CACnBzc,OAAQ,KACR2B,YAAY,EACZoR,MAAO,IAGM,cAAmC,IAAlC9W,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC/C,OAAQA,EAAOlI,MACb,KAAKnB,EACH,GvD2C6B,wBuD3CzBqJ,EAAO+X,QACT,OAAO,2BAAKtgB,GAAZ,IAAmB0F,YAAY,IAEjC,MACF,IvDsCuB,cuDrCrB,OAAO,2BACF1F,GADL,IAEE8W,MAAOvO,EAAOgY,MACVvgB,EAAM8W,MACN9W,EAAM8W,MAAMe,QAAO,SAAC1a,GAAD,OAAUA,EAAKrB,OAASyM,EAAOzM,UAE1D,IvDgC+B,sBuD/B7B,OAAO,2BACFkE,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZoR,MAAOvO,EAAOgY,MAAQ,GAAKhY,EAAOlD,QAAQyR,QAE9C,IvD0BiC,wBuDzB/B,OAAO0J,GACT,IvDyBuB,cuDxBrB,OAAO,2BACFxgB,GADL,IAEE8W,MAAOvO,EAAOgY,MACVvgB,EAAM8W,MACN9W,EAAM8W,MAAM5S,KAAI,SAAC/G,GAAD,OACdA,EAAKrB,OAASyM,EAAOlD,QAAQlI,KAAKrB,KAC9ByM,EAAOlD,QAAQlI,KACfA,OAGd,QACE,OAAO6C,EAGX,OAAOA,GC1CHwgB,GAAe,CACnBzc,OAAQ,KACR2B,YAAY,EACZuY,SAAU,IAGN6C,GAAiB,SAACja,EAAGka,GAAJ,OAAUla,EAAEb,SAASgb,cAAcD,EAAE/a,WAE7C,cAAmC,IAAlChG,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC/C,OAAQA,EAAOlI,MACb,IxDyBuB,cwDxBrB,OAAO,2BACFL,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZuY,SAAU1V,EAAOgY,MACbvgB,EAAMie,SACN,uBAAIje,EAAMie,UAAV,CAAoB1V,EAAOlD,QAAQ9J,OAAM2lB,MAAK,SAACra,EAAGka,GAAJ,OAC5CD,GAAeja,EAAGka,QAG5B,KAAK7hB,EACH,GxDaqB,gBwDbjBqJ,EAAO+X,SxDkBa,mBwDlBc/X,EAAO+X,QAC3C,OAAO,2BAAKtgB,GAAZ,IAAmB0F,YAAY,EAAM3B,OAAQ,OAE/C,MACF,IxDU0B,iBwDTxB,OAAO,2BACF/D,GADL,IAEEie,SAAU1V,EAAOgY,MACbvgB,EAAMie,SACNje,EAAMie,SAASpG,QACb,SAACqG,GAAD,OAAaA,EAAQ7iB,WAAakN,EAAOlN,cAGnD,IxDEuC,8BwDDrC,OAAO,2BACF2E,GADL,IAEEie,SAAU1V,EAAOlD,QAAQpI,QAE7B,IxDFyC,gCwDGvC,OAAOujB,GACT,IxDHmC,0BwDIjC,OAAO,2BAAKxgB,GAAZ,IAAmB+D,OAAQ,OAC7B,IxDJ0B,iBwDKxB,OAAO,2BACF/D,GADL,IAEE+D,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,EACZuY,SAAU1V,EAAOgY,MACbvgB,EAAMie,SACNje,EAAMie,SACH/Z,KAAI,SAAC3I,GAAD,OACHA,EAAKF,WAAakN,EAAOlD,QAAQ9J,KAAKF,SAClCkN,EAAOlD,QAAQ9J,KACfA,KAEL2lB,MAAK,SAACra,EAAGka,GAAJ,OAAUD,GAAeja,EAAGka,QAE5C,QACE,OAAO/gB,EAGX,OAAOA,GC9DHwgB,GAAe,CACnB5kB,OAAQ,KACR+V,QAAS,GACTjB,YAAa,GACb3M,OAAQ,KACR2B,YAAY,EACZiL,UAAW,IAGE,cAAmC,IAAlC3Q,EAAiC,uDAAzBwgB,GAAcjY,EAAW,uCAC3CoJ,EAAU,GACd,OAAQpJ,EAAOlI,MACb,KAAKnB,EACH,GzDK6B,wByDLzBqJ,EAAO+X,QACT,OAAO,2BAAKtgB,GAAZ,IAAmB0F,YAAY,EAAM3B,OAAQ,OAE/C,MACF,IzDL+B,sByDe7B,OAPA/D,EAAM2R,QAAQsD,SAAQ,SAACrZ,GACrB,IAAMulB,EAAU,eAAQvlB,GACxBulB,EAAW7Q,MAAQ6Q,EAAW7Q,MAAMuH,QAClC,SAAClb,GAAD,OAAUA,EAAKc,IAAI2jB,aAAe7Y,EAAO8U,OAAO+D,cAElDzP,EAAQwG,KAAKgJ,MAER,2BACFnhB,GADL,IAEE2R,QAASpJ,EAAOgY,MAAQvgB,EAAM2R,QAAUA,IAE5C,IzDlByC,gCyDmBvC,OAAO,2BAAK3R,GAAZ,IAAmB+D,OAAQ,OAC7B,IzDnB+B,sByDoB7B,OAAOyc,GACT,IzDpBqC,4ByDqBnC,OAAO,2BACFxgB,GADL,IAEE2Q,UAAWpI,EAAOlD,QAAQwd,YAC1BnS,YAAanI,EAAOlD,QAAQyd,cAC5BlnB,OAAQ2M,EAAOlD,QAAQzJ,SAE3B,IzD1B+B,sByD2B7B,OAAO,2BACFoE,GADL,IAEE2Q,UAAU,CAAEpI,EAAOlD,QAAQ1I,MAAlB,oBAA2BqD,EAAM2Q,YAC1CD,YAAY,CAAEnI,EAAOlD,QAAQ1I,MAAlB,oBAA2BqD,EAAM0Q,gBAEhD,IzD/BqC,4ByDgCnC,OAAO,2BAAK1Q,GAAZ,IAAmB2R,QAASpJ,EAAOlD,QAAQsM,UAC7C,IzDhC+B,sByD6C7B,OAVCpJ,EAAOgY,OACNvgB,EAAM2R,QAAQsD,SAAQ,SAACrZ,GACrB,IAAMulB,EAAU,eAAQvlB,GACxBulB,EAAW7Q,MAAQ6Q,EAAW7Q,MAAMpM,KAAI,SAACvH,GAAD,OACtCA,EAAKc,IAAI2jB,aAAe7Y,EAAOlD,QAAQ1I,KAAKc,IAAI2jB,WAC5C7Y,EAAOlD,QAAQ1I,KACfA,KAENgV,EAAQwG,KAAKgJ,MAEV,2BACFnhB,GADL,IAEE2R,QAASpJ,EAAOgY,MAAQvgB,EAAM2R,QAAUA,EACxC5N,OAAQwE,EAAOgY,MAAQhY,EAAOlD,QAAQtB,OAAS,KAC/C2B,YAAY,IAEhB,QACE,OAAO1F,EAGX,OAAOA,GC3EH+iB,GAAoB,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAAC1a,GAC9C,IAmDiB2a,EAnDH3a,EAAOlD,UAoDS,oBAAX6d,EAAEpoB,KApDrB,CACEkoB,EAAM7iB,SAAS,CAAEE,KAAMnB,EAAaohB,QAAS/X,EAAOlI,OAEpD,IAAM8iB,EAAcH,EAAMI,WAAW1C,kBAC/B2C,EAAe9a,EAAO8a,aAE5B9a,EAAOlD,QAAQvK,MACb,SAACV,GACC,IAAMkpB,EAAeN,EAAMI,YACtBC,GAAgBC,EAAa5C,oBAAsByC,KAGxD5a,EAAOlD,QAAUjL,EACjB4oB,EAAM7iB,SAAS,CAAEE,K1DnBA,Y0DmBiBkjB,QAAShb,EAAOlD,UAClD2d,EAAM7iB,SAASoI,OAEjB,SAACgY,GACC,IAAM+C,EAAeN,EAAMI,YACtBC,GAAgBC,EAAa5C,oBAAsByC,KAIxD5a,EAAOgY,OAAQ,EACfhY,EAAOlD,QAAUkb,EAAMiD,SAASnpB,KAC3BkO,EAAO8a,cACVL,EAAM7iB,SAAS,CAAEE,K1D/BF,Y0D+BmBkjB,QAAShb,EAAOlD,UAEpD2d,EAAM7iB,SAASoI,WA3BrB,CAmDF,IAAmB2a,EAjBjBD,EAAK1a,OAGDkb,GAAyB,SAACT,GAAD,OAAW,SAACC,GAAD,OAAU,SAAC1a,G1DrC7B,a0DsClBA,EAAOlI,MAAqBkI,EAAOlI,OAASlB,EACzCoJ,EAAOgY,QACVmD,OAAOC,aAAaC,QAAQ,MAAOrb,EAAOlD,QAAQ9J,KAAKjB,OACvDiL,KAAM7H,SAAS6K,EAAOlD,QAAQ9J,KAAKjB,Q1D3CnB,W0D6CTiO,EAAOlI,OAChBqjB,OAAOC,aAAaC,QAAQ,MAAO,IACnCre,KAAM7H,SAAS,OAGjBulB,EAAK1a,MCjDA,ICKSsb,GDLHA,GAAUC,eAGjBC,GAAqBC,aAAiBH,IAoB/Bb,GAAQiB,wBClBLJ,GDmBIA,GClBlBK,2BAAgB,CACdhF,QACAtd,UACA+P,WACAzR,OACA2f,YACA/V,UACAzN,YACAya,SACAmH,YACA3N,SACA7O,OAAQ0iB,YAAcN,ODQxBO,+BAlBSC,2BACLN,GACAhB,GACAU,MEqDS1jB,gBAxDS,SAACC,GACvB,MAAO,CACL2gB,UAAW3gB,EAAM4B,OAAO+e,UACxB5e,WAAY/B,EAAM4B,OAAOG,eAIF,SAAC5B,GAAD,MAAe,CACxC8B,OAAQ,SAACoD,EAAS/K,GAAV,OACN6F,EAAS,CAAEE,K7DzBS,W6DyBOgF,UAAS/K,QAAO+oB,cAAc,KAC3DiB,WAAY,kBAAMnkB,EAAS,CAAEE,K7DzBP,iB6DuETN,EA3CH,SAACjB,GAAW,IACd6hB,EAA0B7hB,EAA1B6hB,UAAW5e,EAAejD,EAAfiD,WAkBnB,OAhBAO,qBAAU,WACJP,IACFihB,GAAM7iB,SAASgY,YAAKpW,IACpBjD,EAAMwlB,gBAEP,CAACviB,IAEJO,qBAAU,WACR,IAAMhI,EAAQopB,OAAOC,aAAaY,QAAQ,OACtCjqB,GACFiL,KAAM7H,SAASpD,GAGjBwE,EAAMmD,OAAO3H,EAAQiL,KAAMrK,KAAKC,UAAY,KAAMb,KACjD,IAECqmB,EAEA,kBAAC6D,EAAA,EAAD,CAAellB,MAAOxB,GACpB,kBAAC2mB,EAAA,EAAD,MACA,kBAAC,GAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,0CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOjhB,OAAK,EAACjC,KAAK,SAASkC,UAAWihB,KACtC,kBAAC,IAAD,CAAOnjB,KAAK,IAAIkC,UAAWkhB,SASrC,kBAACJ,EAAA,EAAD,CAAellB,MAAOxB,GACpB,kBAAC2mB,EAAA,EAAD,MACA,kBAAC,GAAD,UC1DNI,IAAStH,OACP,kBAAC,IAAD,CAAUyF,MAAOA,IACf,kBAAC,IAAD,CAAiBa,QAASA,IACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOriB,KAAK,IAAIkC,UAAWohB,QAKjCC,SAASC,eAAe,W","file":"static/js/main.04526831.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise'\nimport _superagent from 'superagent'\n\nconst superagent = superagentPromise(_superagent, global.Promise)\n\nconst API_ROOT =\n  process.env.NODE_ENV === 'production'\n    ? 'https://chem-cash.herokuapp.com/api'\n    : 'http://localhost:4000/api'\n\nconst encode = encodeURIComponent\nconst responseBody = (res) => res.body\n\nlet token = null\nlet tokenPlugin = (req) => {\n  if (token) {\n    req.set('authorization', `Token ${token}`)\n  }\n}\n\nconst requests = {\n  del: (url) =>\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: (url) =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .then(responseBody),\n}\n\nconst Auth = {\n  current: () => requests.get('/user'),\n  login: (username, password) =>\n    requests.post('/users/login', { user: { username, password } }),\n  register: (user) => requests.post('/users', { user }),\n  save: (user) => requests.put('/user', { user }),\n}\n\nconst Courses = {\n  add: (course) => requests.post('/courses', { course }),\n  delete: (slug) => requests.del(`/courses/${slug}`),\n  getAll: () => requests.get('/courses'),\n  update: (course) => requests.put(`/courses/${course.slug}`, { course }),\n}\n\nconst Scores = {\n  getAll: (username) => requests.get(`/scores?username=${username}`),\n  import: (data) => requests.post('/scores/import', { data }),\n}\n\nconst Settings = {\n  // get: () => requests.get('/user/settings'),\n  update: (settings) => requests.put('/user/settings', { settings }),\n}\n\nconst Songs = {\n  delete: (id) => requests.del(`/songs/${id}`),\n  forStudent: () => requests.get('/songs/student'),\n  forTeacher: () => requests.get('/songs/teacher'),\n  request: (song) => requests.post('/songs', { song }),\n  update: (song) => requests.put(`/songs/${song.id}`, { song }),\n}\n\nconst Spotify = {\n  getAuthUrl: () => requests.get('/spotify/auth'),\n  removeAuth: () => requests.del('/spotify/auth'),\n}\n\nconst Students = {\n  add: (user, courseId) =>\n    requests.post(`/users?courseId=${encode(courseId)}`, { user }),\n  delete: (username) => requests.del(`/users/student/${username}`),\n  import: (users, courseId) =>\n    requests.post(`/users/import?courseId=${encode(courseId)}`, { users }),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Tasks = {\n  getAll: (courseId) => requests.get(`/tasks?courseId=${courseId}`),\n  delete: (slug) => requests.del(`/tasks/${slug}`),\n  update: (task) => requests.put(`/tasks/${task.slug}`, { task }),\n}\n\nconst Teachers = {\n  getAll: () => requests.get('/users?role=teacher'),\n  delete: (username) => requests.del(`/users/teacher/${username}`),\n  update: (user) => requests.put(`/users/${user.username}`, { user }),\n}\n\nconst Transactions = {\n  add: (transaction) => requests.post('/transactions', { transaction }),\n  addMany: (transactions) =>\n    requests.post('/transactions/bulk', { transactions }),\n  delete: (transaction) => requests.del(`/transactions/${transaction._id}`),\n  update: (transaction) =>\n    requests.put(`/transactions/${transaction._id}`, { transaction }),\n}\n\nexport default {\n  Auth,\n  Courses,\n  Scores,\n  Settings,\n  Songs,\n  Spotify,\n  Students,\n  Tasks,\n  Teachers,\n  Transactions,\n  setToken: (_token) => {\n    token = _token\n  },\n}\n","module.exports = __webpack_public_path__ + \"static/media/chemistry-background.58b9362d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chem-cash-logo.30174016.png\";","module.exports = __webpack_public_path__ + \"static/media/songs-background.cfcd4ce6.jpg\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport amber from '@material-ui/core/colors/amber'\n\nconst ChemCashTheme = createMuiTheme({\n  breakpoints: {\n    values: {\n      md: 768,\n      lg: 1024,\n    },\n  },\n  palette: {\n    primary: lightGreen,\n    secondary: amber,\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: '16px 24px',\n      },\n    },\n  },\n})\n\nexport default ChemCashTheme\n","import React from 'react'\nimport logo from '../images/chem-cash-logo.png'\n\nconst Logo = (props) => {\n  return <img alt='Chem Cash Logo' src={logo} {...props} />\n}\n\nexport default Logo\n","export const APP_LOAD = 'APP_LOAD'\nexport const REDIRECT = 'REDIRECT'\n\nexport const ASYNC_START = 'ASYNC_START'\nexport const ASYNC_END = 'ASYNC_END'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED'\nexport const LOGOUT = 'LOGOUT'\n\nexport const REGISTER = 'REGISTER'\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED'\n\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED'\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED'\n\nexport const NAV_LOADED = 'NAV_LOADED'\nexport const NAV_UNLOADED = 'NAV_UNLOADED'\nexport const NAV_TAB_CHANGE = 'NAV_TAB_CHANGE'\n\nexport const ALERT_CLOSED = 'ALERT_CLOSED'\nexport const SNACKBAR_CLOSED = 'SNACKBAR_CLOSED'\n\nexport const DELETE_SONG_REQUEST = 'DELETE_SONG_REQUEST'\nexport const SONG_REQUESTS_DIALOG_UNLOADED = 'SONG_REQUESTS_DIALOG_UNLOADED'\nexport const SONGS_PAGE_UNLOADED = 'SONGS_PAGE_UNLOADED'\nexport const STUDENT_SONGS_PAGE_LOADED = 'STUDENT_SONGS_PAGE_LOADED'\nexport const SUBMIT_SONG_REQUEST = 'SUBMIT_SONG_REQUEST'\nexport const TEACHER_SONGS_PAGE_LOADED = 'TEACHER_SONGS_PAGE_LOADED'\nexport const UPDATE_SONG_REQUEST = 'UPDATE_SONG_REQUEST'\n\nexport const ADD_COURSE = 'ADD_COURSE'\nexport const COURSE_DIALOG_UNLOADED = 'COURSE_DIALOG_UNLOADED'\nexport const COURSES_PAGE_LOADED = 'COURSES_PAGE_LOADED'\nexport const COURSES_PAGE_UNLOADED = 'COURSES_PAGE_UNLOADED'\nexport const DELETE_COURSE = 'DELETE_COURSE'\nexport const UPDATE_COURSE = 'UPDATE_COURSE'\n\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const DELETE_STUDENT = 'DELETE_STUDENT'\nexport const IMPORT_STUDENTS = 'IMPORT_STUDENTS'\nexport const RESET_STUDENT_PASSWORD = 'RESET_STUDENT_PASSWORD'\nexport const STUDENT_DIALOG_UNLOADED = 'STUDENT_DIALOG_UNLOADED'\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT'\n\nexport const ADD_TEACHER = 'ADD_TEACHER'\nexport const DELETE_TEACHER = 'DELETE_TEACHER'\nexport const MANAGE_TEACHERS_PAGE_LOADED = 'MANAGE_TEACHERS_PAGE_LOADED'\nexport const MANAGE_TEACHERS_PAGE_UNLOADED = 'MANAGE_TEACHERS_PAGE_UNLOADED'\nexport const TEACHER_DIALOG_UNLOADED = 'TEACHER_DIALOG_UNLOADED'\nexport const UPDATE_TEACHER = 'UPDATE_TEACHER'\n\nexport const SPOTIFY_REMOVE_AUTH = 'SPOTIFY_REMOVE_AUTH'\nexport const SPOTIFY_LINKER_LOADED = 'SPOTIFY_LINKER_LOADED'\nexport const SPOTIFY_LINKER_UNLOADED = 'SPOTIFY_LINKER_UNLOADED'\n\nexport const IMPORT_SCORES = 'IMPORT_SCORES'\nexport const IMPORT_SCORES_DIALOG_UNLOADED = 'IMPORT_SCORES_DIALOG_UNLOADED'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const TASKS_DIALOG_LOADED = 'TASKS_DIALOG_LOADED'\nexport const TASKS_DIALOG_UNLOADED = 'TASKS_DIALOG_UNLOADED'\nexport const UPDATE_TASK = 'UPDATE_TASK'\n\nexport const ACCOUNT_VIEW_LOADED = 'ACCOUNT_VIEW_LOADED'\nexport const ACCOUNT_VIEW_UNLOADED = 'ACCOUNT_VIEW_UNLOADED'\nexport const ACCOUNTS_PAGE_UNLOADED = 'ACCOUNTS_PAGE_UNLOADED'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const ADD_TRANSACTIONS = 'ADD_TRANSACTIONS'\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION'\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION'\nexport const TRANSACTION_DIALOG_UNLOADED = 'TRANSACTION_DIALOG_UNLOADED'\nexport const TRANSACTIONS_DIALOG_UNLOADED = 'TRANSACTIONS_DIALOG_UNLOADED'\n\nexport const STUDENT_SEARCH_LOADED = 'STUDENT_SEARCH_LOADED'\nexport const STUDENT_SEARCH_UNLOADED = 'STUDENT_SEARCH_UNLOADED'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  AppBar,\n  Button,\n  Container,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport Logo from '../components/Logo'\n\nimport { LOGOUT } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'white',\n    flexGrow: 1,\n  },\n  logo: {\n    height: 65,\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n})\n\nconst Header = (props) => {\n  const classes = useStyles()\n  const title = props.navTabValue\n\n  if (props.currentUser) {\n    return (\n      <AppBar position='static'>\n        <Container>\n          <Toolbar>\n            <Logo className={classes.logo} />\n            <Typography variant='h5' align='center' className={classes.title}>\n              {title && title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n            <Button color='inherit' onClick={props.onClickLogout}>\n              Logout\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  makeStyles,\n} from '@material-ui/core'\nimport {\n  LocalAtm,\n  People,\n  QueueMusic,\n  Settings,\n  SupervisorAccount,\n} from '@material-ui/icons'\n\nimport {\n  NAV_TAB_CHANGE,\n  NAV_LOADED,\n  NAV_UNLOADED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles({\n  nav: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    zIndex: '1000',\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  path: state.router.location.pathname,\n  currentUser: state.common.currentUser,\n  navTabValue: state.nav.navTabValue,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabChange: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_TAB_CHANGE, value: tabValue, redirectTo: redirectTo }),\n  onLoad: (tabValue, redirectTo) =>\n    dispatch({ type: NAV_LOADED, value: tabValue, redirectTo: redirectTo }),\n  onUnload: () => dispatch({ type: NAV_UNLOADED }),\n})\n\nconst Navigation = (props) => {\n  const classes = useStyles()\n  const userRole = props.currentUser.role\n\n  const handleTabChange = (tabValue) => {\n    props.onTabChange(tabValue, `/${userRole}/${tabValue}`)\n  }\n\n  useEffect(() => {\n    const tabFromPath = props.path.split('/')[2]\n    const tabValue =\n      tabFromPath ?? (userRole === 'student' ? 'account' : 'accounts')\n    const redirectTo = `/${userRole}/${tabValue}`\n    props.onLoad(tabValue, redirectTo)\n\n    return () => {\n      props.onUnload()\n    }\n  }, [])\n\n  if (userRole === 'student') {\n    return (\n      <BottomNavigation\n        className={classes.nav}\n        onChange={(event, newValue) => {\n          handleTabChange(newValue)\n        }}\n        showLabels\n        value={props.navTabValue}\n      >\n        <BottomNavigationAction\n          label='Account'\n          icon={<LocalAtm />}\n          value='account'\n        />\n        <BottomNavigationAction\n          label='Songs'\n          icon={<QueueMusic />}\n          value='songs'\n        />\n        <BottomNavigationAction\n          label='Settings'\n          icon={<Settings />}\n          value='settings'\n        />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <BottomNavigation\n      className={classes.nav}\n      onChange={(event, newValue) => {\n        handleTabChange(newValue)\n      }}\n      showLabels\n      value={props.navTabValue}\n    >\n      <BottomNavigationAction\n        label='Accounts'\n        icon={<LocalAtm />}\n        value='accounts'\n      />\n      <BottomNavigationAction\n        label='Courses'\n        icon={<People />}\n        value='courses'\n      />\n      <BottomNavigationAction\n        label='Songs'\n        icon={<QueueMusic />}\n        value='songs'\n      />\n      {userRole === 'admin' && (\n        <BottomNavigationAction\n          label='Teachers'\n          icon={<SupervisorAccount />}\n          value='teachers'\n        />\n      )}\n      <BottomNavigationAction\n        label='Settings'\n        icon={<Settings />}\n        value='settings'\n      />\n    </BottomNavigation>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(11),\n  },\n}))\n\nconst PageWrapper = (props) => {\n  const classes = useStyles()\n\n  return <div className={classes.wrapper}>{props.children}</div>\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport { Container, Typography } from '@material-ui/core'\nimport PageWrapper from './PageWrapper'\n\nconst NotFound = (props) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <Typography variant='h2'>Error 404: Page Not Found</Typography>\n      </Container>\n    </PageWrapper>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst mapStateToProps = (state) => ({ currentUser: state.common.currentUser })\n\nconst ProtectedRoute = (props) => {\n  if (!props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return <Route exact path={props.path} component={props.component} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(ProtectedRoute)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    'width': '100%',\n    '&:not(:last-of-type)': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  alertList: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst ListErrors = ({ errors }) => {\n  const classes = useStyles()\n\n  if (errors) {\n    return (\n      <div className={classes.alertList}>\n        {Object.keys(errors).map((key) => {\n          const readableKey = key\n            .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n            .toLowerCase()\n          return (\n            <Alert className={classes.alert} severity='error' key={key}>\n              {readableKey} {errors[key]}\n            </Alert>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default ListErrors\n","import React from 'react'\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  headerLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  headerRight: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  pageHeader: {\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst PageHeader = ({ children, title }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={2} className={classes.pageHeader}>\n      <Grid item xs={12} md={6} className={classes.headerLeft}>\n        <Typography variant='h4'>{title}</Typography>\n      </Grid>\n      <Grid item xs={12} md={6} className={classes.headerRight}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default PageHeader\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport { Fab, Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { SaveAlt } from '@material-ui/icons'\n\nimport ListErrors from './ListErrors'\nimport PageHeader from './PageHeader'\n// import SpotifyLinker from './Teacher/SpotifyLinker'\nimport agent from '../agent'\n\nimport {\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.settings,\n  currentUser: state.common.currentUser,\n  settings: state.common.settings,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitForm: (settings) =>\n    dispatch({\n      type: SETTINGS_SAVED,\n      payload: Promise.all([\n        agent.Auth.save(settings),\n        agent.Settings.update(settings),\n      ]),\n      snackbar: { message: 'Settings saved', variant: 'success' },\n    }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED }),\n})\n\nconst Settings = ({\n  currentUser,\n  errors,\n  inProgress,\n  onSubmitForm,\n  onUnload,\n  settings,\n}) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={{\n        defaultStudentPassword: settings?.defaultStudentPassword || '',\n        songRequestPurchaseAmount: settings?.songRequestPurchaseAmount || 0,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        password: '',\n        score100: settings?.scoreConverter?.[100] || 1200,\n        score90: settings?.scoreConverter?.[90] || 1000,\n        score80: settings?.scoreConverter?.[80] || 800,\n        score70: settings?.scoreConverter?.[70] || 600,\n        score60: settings?.scoreConverter?.[60] || 0,\n        score50: settings?.scoreConverter?.[50] || 0,\n      }}\n      validationSchema={Yup.object({\n        defaultStudentPassword: Yup.string(),\n        songRequestPurchaseAmount: Yup.number().typeError('Numbers only'),\n        firstName: Yup.string(),\n        lastName: Yup.string(),\n        password: Yup.string(),\n        score100: Yup.number().typeError('Numbers only'),\n        score90: Yup.number().typeError('Numbers only'),\n        score80: Yup.number().typeError('Numbers only'),\n        score70: Yup.number().typeError('Numbers only'),\n        score60: Yup.number().typeError('Numbers only'),\n        score50: Yup.number().typeError('Numbers only'),\n      })}\n      onSubmit={async (values, form) => {\n        const userSettings = { ...values }\n\n        if (!userSettings.password && currentUser.role !== 'student')\n          delete userSettings.password\n\n        if (currentUser.role !== 'student')\n          userSettings.scoreConverter = {\n            100: values.score100,\n            90: values.score90,\n            80: values.score80,\n            70: values.score70,\n            60: values.score60,\n            50: values.score50,\n            40: 0,\n            30: 0,\n            20: 0,\n            10: 0,\n            0: 0,\n          }\n\n        onSubmitForm(userSettings)\n\n        form.resetForm({\n          values: { ...userSettings, password: '' },\n        })\n      }}\n    >\n      <Form>\n        <PageHeader title='Manage Account'>\n          <Fab\n            color='primary'\n            disabled={inProgress}\n            type='sumbit'\n            variant='extended'\n          >\n            <SaveAlt className={classes.icon} />\n            {inProgress ? 'Saving...' : 'Save settings'}\n          </Fab>\n        </PageHeader>\n        <ListErrors errors={errors} />\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Song Requests\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Song request purchase amount'\n                  name='songRequestPurchaseAmount'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              {/* <Grid item xs={12} md={6}>\n                <SpotifyLinker />\n              </Grid> */}\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Student Accounts\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Default student password'\n                  name='defaultStudentPassword'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Score Conversions\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='100% and up'\n                  name='score100'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='90% and up'\n                  name='score90'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='80% and up'\n                  name='score80'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='70% and up'\n                  name='score70'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='60% and up'\n                  name='score60'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Field\n                  component={TextField}\n                  label='50% and up'\n                  name='score50'\n                  type='number'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        {currentUser.role !== 'student' && (\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant='h5' gutterBottom>\n                  Account Details\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='First name'\n                  name='firstName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  component={TextField}\n                  label='Last name'\n                  name='lastName'\n                  type='text'\n                  variant='outlined'\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h5' gutterBottom>\n                Account Security\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Field\n                component={TextField}\n                label='New password'\n                name='password'\n                type='password'\n                variant='outlined'\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import React from 'react'\nimport { IconButton, Tooltip, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nconst ActionButton = (props) => {\n  const classes = useStyles()\n\n  const handleClick = (ev) => {\n    ev.stopPropagation()\n    props.onClick()\n  }\n\n  return (\n    <Tooltip title={props.action} arrow>\n      <IconButton\n        aria-label={props.action}\n        className={`${classes.actionButton} ${props.className}`}\n        onClick={handleClick}\n        onFocus={(ev) => ev.stopPropagation()}\n        size={props.size}\n      >\n        {props.children}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ActionButton\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { LockOpen } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { RESET_STUDENT_PASSWORD } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  defaultStudentPassword: state.common.settings.defaultStudentPassword,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (user) =>\n    dispatch({\n      type: RESET_STUDENT_PASSWORD,\n      payload: agent.Students.update(user),\n      snackbar: { message: 'Password reset', variant: 'success' },\n    }),\n})\n\nconst ResetStudentPasswordAlert = ({\n  btnSize,\n  defaultStudentPassword,\n  onSubmit,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    const user = { ...student, password: defaultStudentPassword }\n    onSubmit(user)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Reset password'\n        onClick={handleClickOpen}\n        size={btnSize ?? 'small'}\n      >\n        <LockOpen fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Reset Password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you want to reset{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            's password to <strong>{defaultStudentPassword}</strong>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='primary'\n            variant='contained'\n            autoFocus\n          >\n            Reset\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetStudentPasswordAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Grade, ShoppingCart } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n  TRANSACTION_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transaction) =>\n    dispatch({\n      type: ADD_TRANSACTION,\n      payload: agent.Transactions.add(transaction),\n      snackbar: {\n        message: `${transaction.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTION_DIALOG_UNLOADED }),\n})\n\nconst TransactionDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  student,\n  transaction,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, student, type: type.toLowerCase(), typeTitle: type })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    // onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton\n        action={`Add ${type.toLowerCase()}`}\n        onClick={handleClickOpen}\n      >\n        {type === 'Bonus' && <Grade />}\n        {type === 'Purchase' && <ShoppingCart />}\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            amount: transaction?.amount || '',\n            description: transaction?.description || '',\n          }}\n          validationSchema={Yup.object({\n            amount: Yup.number().typeError('Numbers only').required('Required'),\n            description: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            transaction ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {`${transaction ? 'Edit' : 'Add'} ${type}`}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={transaction ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {transaction\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDialog)\n","// @todo: do score->points conversion here?\nconst convertScore = (score, conversions) => {\n  const total = score.task.totalPoints\n  const noZeroTotal = total !== 0 ? total : 1\n  return conversions[\n    Math.floor(Math.round((score.value / noZeroTotal) * 100) / 10) * 10\n  ]\n}\n\nexport default convertScore\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Grid, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { Close, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../components/ActionButton'\nimport ResetStudentPasswordAlert from './Teacher/ResetStudentPasswordAlert'\nimport TransactionDialog from './Teacher/TransactionDialog'\nimport agent from '../agent'\nimport convertScore from '../converter'\n\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  DELETE_TRANSACTION,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  balance: {\n    'textAlign': 'center',\n    '& > h6': {\n      borderTop: '1px solid #ccc',\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  edit: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  subtotal: {\n    'position': 'relative',\n    'textAlign': 'center',\n    '& > p': {\n      position: 'relative',\n      bottom: -theme.spacing(1),\n    },\n    '& > h6': {\n      fontSize: theme.typography.pxToRem(12),\n      fontStyle: 'italic',\n      textTransform: 'lowercase',\n    },\n  },\n  unit: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  conversions: state.scores.conversions,\n  total: state.scores.total,\n  transactions: state.scores.transactions,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (transaction) =>\n    dispatch({\n      type: DELETE_TRANSACTION,\n      payload: agent.Transactions.delete(transaction),\n      deleted: transaction, //@todo: have server return deleted item to make reducing require less actions (refactor all delete controllers?)\n      snackbar: { message: 'Transaction deleted', variant: 'success' },\n    }),\n  onLoad: (username) =>\n    dispatch({\n      type: ACCOUNT_VIEW_LOADED,\n      payload: agent.Scores.getAll(username),\n    }),\n  onUnload: () => dispatch({ type: ACCOUNT_VIEW_UNLOADED }),\n  onUpdate: (transaction) =>\n    dispatch({\n      type: UPDATE_TRANSACTION,\n      payload: agent.Transactions.update(transaction),\n      snackbar: { message: 'Transaction updated', variant: 'success' },\n    }),\n})\n\nconst AccountHeader = ({ canEdit, doEdit, onEditClick, student, total }) => {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <Typography gutterBottom variant='h5'>\n            {student.firstName} {student.lastName}\n          </Typography>\n          {student.course && (\n            <Typography color='textSecondary' variant='subtitle1'>\n              {student.course} &middot; Period {student.period}\n            </Typography>\n          )}\n        </Grid>\n        <Grid item xs={12} md={4} container>\n          <Grid item xs={12} className={classes.balance}>\n            <Typography\n              color={total?.balance >= 0 ? 'primary' : 'secondary'}\n              variant='h4'\n            >\n              {total?.balance} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='textSecondary' variant='subtitle2'>\n              Balance\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.bonuses} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Bonuses\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='secondary' variant='body1'>\n              {total?.purchases} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='secondary' variant='subtitle2'>\n              Purchases\n            </Typography>\n          </Grid>\n          <Grid item xs={4} className={classes.subtotal}>\n            <Typography color='primary' variant='body1'>\n              {total?.scores} <span className={classes.unit}>pts</span>\n            </Typography>\n            <Typography color='primary' variant='subtitle2'>\n              Assessments\n            </Typography>\n          </Grid>\n        </Grid>\n        {canEdit && (\n          <Grid item xs={12} md={4} className={classes.actions}>\n            <TransactionDialog student={student} type='Bonus' />\n            <TransactionDialog student={student} type='Purchase' />\n            <ActionButton\n              action={doEdit ? 'Finish editing' : 'Edit transactions'}\n              className={doEdit && classes.edit}\n              onClick={onEditClick}\n            >\n              {doEdit ? <Close /> : <Edit />}\n            </ActionButton>\n            <ResetStudentPasswordAlert btnSize='medium' student={student} />\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  )\n}\n\nconst TransactionList = ({\n  conversions,\n  doEdit,\n  onDelete,\n  onUpdate,\n  transactions,\n}) => {\n  const [data, setData] = useState([])\n\n  const mapTransaction = (transaction) => ({\n    amount: transaction.amount,\n    createdAt: new Date(transaction.createdAt).toDateString(),\n    description: transaction.description,\n    type: transaction.type,\n    _id: transaction._id,\n  })\n\n  const mapScore = (score) => ({\n    amount: convertScore(score, conversions),\n    createdAt: new Date().toDateString(),\n    description: score.task.title,\n    type: 'assessment',\n  })\n\n  // @todo: sort by date?\n  const mappedData = (transactions) => {\n    const { bonuses, purchases, scores } = transactions\n    const mapped = [\n      ...bonuses.map((bonus) => mapTransaction(bonus)),\n      ...purchases.map((purchase) => mapTransaction(purchase)),\n    ]\n    if (doEdit) {\n      return mapped\n    } else {\n      return [...mapped, ...scores.map((score) => mapScore(score))]\n    }\n  }\n\n  const [columns] = useState([\n    {\n      title: 'Date',\n      field: 'createdAt',\n      editable: 'never',\n      defaultSort: 'desc',\n    },\n    { title: 'Description', field: 'description' },\n    { title: 'Amount', field: 'amount' },\n    { title: 'Type', field: 'type', editable: 'never' },\n  ])\n\n  useEffect(() => {\n    transactions && setData(mappedData(transactions))\n  }, [doEdit, transactions])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No activity to report',\n          editRow: {\n            deleteText: 'Delete this transaction?',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={\n        doEdit\n          ? {\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  const dataUpdate = [...data]\n                  const index = oldData.tableData.id\n                  dataUpdate[index] = newData\n                  setData([...dataUpdate])\n                  onUpdate(newData)\n                  resolve()\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  const newData = [...data]\n                  const index = oldData.tableData.id\n                  newData.splice(index, 1)\n                  setData([...newData])\n                  onDelete(oldData)\n                  resolve()\n                }),\n            }\n          : {}\n      }\n    />\n  )\n}\n\nconst AccountView = ({\n  canEdit,\n  conversions,\n  onDelete,\n  onLoad,\n  onUnload,\n  onUpdate,\n  student,\n  total,\n  transactions,\n}) => {\n  const [doEdit, setDoEdit] = useState(false)\n\n  const handleEditClick = () => {\n    setDoEdit(!doEdit)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    onLoad(student.username)\n  }, [student])\n\n  return (\n    <>\n      {transactions && (\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AccountHeader\n              canEdit={canEdit}\n              doEdit={doEdit}\n              onEditClick={handleEditClick}\n              student={student}\n              total={total}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TransactionList\n              conversions={conversions}\n              doEdit={doEdit}\n              onDelete={onDelete}\n              onUpdate={onUpdate}\n              transactions={transactions}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountView)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AccountView from '../AccountView'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst StudentAccount = ({ currentUser }) => {\n  return <AccountView student={currentUser} />\n}\n\nexport default connect(mapStateToProps, () => ({}))(StudentAccount)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  Fab,\n  Grid,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nimport agent from '../../agent'\nimport background from './../../images/songs-background.jpg'\n\nimport { SUBMIT_SONG_REQUEST } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  dialog: {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center bottom',\n    backgroundSize: 'cover',\n    color: 'white',\n    padding: theme.spacing(4),\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    'backgroundColor': 'rgba(0,65,91,0.8)',\n    'borderRadius': theme.spacing(1),\n    'height': 78,\n    '& input': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  inputLabel: {\n    color: 'white',\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (song) =>\n    dispatch({\n      type: SUBMIT_SONG_REQUEST,\n      payload: agent.Songs.request(song),\n      snackbar: { message: 'Song requested', variant: 'success' },\n    }),\n})\n\nconst SongRequestDialog = ({ onSubmit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = (values) => {\n    onSubmit(values)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <Add className={classes.icon} />\n        Buy a song\n      </Fab>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n      >\n        <Typography variant='h3' align='center' color='secondary' gutterBottom>\n          Purchase a Song\n        </Typography>\n        <Typography variant='body1' gutterBottom>\n          Please provide the song and artist title for your request. If\n          approved, 500 points will be charged to your account.\n        </Typography>\n        <Formik\n          initialValues={{\n            artist: '',\n            title: '',\n          }}\n          validationSchema={Yup.object({\n            artist: Yup.string().required('Required'),\n            title: Yup.string().required('Required'),\n          })}\n          onSubmit={async (values) => {\n            handleSubmit(values)\n          }}\n        >\n          <Form>\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  autoFocus\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Song Title'\n                  name='title'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  className={classes.input}\n                  color='primary'\n                  component={TextField}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.inputLabel,\n                    },\n                  }}\n                  label='Artist'\n                  name='artist'\n                  type='text'\n                  variant='filled'\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  className={classes.button}\n                  color='primary'\n                  type='submit'\n                  variant='contained'\n                >\n                  Buy\n                </Button>\n                <Button\n                  className={classes.button}\n                  onClick={handleClose}\n                  variant='contained'\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(SongRequestDialog)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport SongRequestDialog from './SongRequestDialog'\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SONGS_PAGE_LOADED,\n  SONGS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  paper: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n  },\n  status: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload) => dispatch({ type: STUDENT_SONGS_PAGE_LOADED, payload }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst DataRow = ({ song, showStudent }) => {\n  const classes = useStyles()\n\n  return (\n    <TableRow>\n      <TableCell>{new Date(song.createdAt).toDateString()}</TableCell>\n      <TableCell>{song.title}</TableCell>\n      <TableCell>{song.artist}</TableCell>\n      {showStudent && (\n        <TableCell>\n          {song.student.firstName} {song.student.lastName}\n        </TableCell>\n      )}\n      <TableCell>\n        <span className={classes.status}>\n          {song.statusDescription ? (\n            <>\n              {song.status}\n              <Tooltip\n                arrow\n                color='primary'\n                enterTouchDelay={0}\n                title={song.statusDescription}\n              >\n                <InfoOutlined className={classes.icon} />\n              </Tooltip>\n            </>\n          ) : (\n            song.status\n          )}\n        </span>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst CourseSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={true} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='5'>\n        <Typography align='center'>\n          No songs have been requested for your period\n        </Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst UserSongs = ({ songs }) =>\n  songs.length > 0 ? (\n    songs.map((song) => (\n      <DataRow key={song._id} song={song} showStudent={false} />\n    ))\n  ) : (\n    <TableRow>\n      <TableCell colSpan='4'>\n        <Typography align='center'>You have not requested any songs</Typography>\n      </TableCell>\n    </TableRow>\n  )\n\nconst StudentSongs = ({\n  course,\n  courseSongs,\n  currentUser,\n  onLoad,\n  onUnload,\n  userSongs,\n}) => {\n  const [mySongsOnly, setMySongsOnly] = useState(true)\n\n  const classes = useStyles()\n\n  const handleMySongsOnlyClick = (event) => {\n    setMySongsOnly(event.target.checked)\n  }\n\n  useEffect(() => {\n    onLoad(agent.Songs.forStudent())\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader\n        title={\n          'Songs for ' +\n          (mySongsOnly ? currentUser.firstName : 'Period ' + course.period)\n        }\n      >\n        <SongRequestDialog />\n      </PageHeader>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.grid}>\n          <Grid item xs={12} className={classes.grid}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={mySongsOnly}\n                  onChange={handleMySongsOnlyClick}\n                  name='mySongsOnly'\n                />\n              }\n              label='show only my songs'\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Request Date</TableCell>\n              <TableCell>Song Title</TableCell>\n              <TableCell>Song Artist</TableCell>\n              {!mySongsOnly && <TableCell>Purchased by</TableCell>}\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mySongsOnly ? (\n              <UserSongs songs={userSongs} />\n            ) : (\n              <CourseSongs songs={courseSongs} />\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSongs)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Collapse, IconButton, makeStyles } from '@material-ui/core'\nimport { Alert as MuiAlert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\n\nimport { ALERT_CLOSED } from '../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClose: () => dispatch({ type: ALERT_CLOSED }),\n})\n\nconst Alert = ({ children, onClose, severity, variant }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div className={classes.alert}>\n      <Collapse in={open}>\n        <MuiAlert\n          action={\n            <IconButton\n              aria-label='close'\n              color='inherit'\n              size='small'\n              onClick={() => {\n                setOpen(false)\n                onClose()\n              }}\n            >\n              <Close fontSize='inherit' />\n            </IconButton>\n          }\n          severity={severity || 'info'}\n          variant={variant || 'outlined'}\n        >\n          {children}\n        </MuiAlert>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Alert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Paper, TextField, makeStyles } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport parse from 'autosuggest-highlight/parse'\nimport match from 'autosuggest-highlight/match'\n\nimport agent from '../../agent'\n\nimport {\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    padding: theme.spacing(2),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: STUDENT_SEARCH_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: STUDENT_SEARCH_UNLOADED }),\n})\n\nconst StudentSearch = ({ courses, onChange, onLoad, onUnload }) => {\n  const [mappedData, setMappedData] = useState([])\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    const mapped = courses\n      .map((course) =>\n        course.students.map((student) => ({\n          ...student,\n          course: course.name,\n          period: course.period,\n          name: `${student.firstName} ${student.lastName}`,\n        }))\n      )\n      .flat()\n    setMappedData(mapped)\n  }, [courses])\n\n  return (\n    <Paper className={classes.search}>\n      <Autocomplete\n        autoHighlight\n        getOptionLabel={(option) => option.name}\n        groupBy={(option) => `${option.course} | Period ${option.period}`}\n        noOptionsText='No students have been added'\n        onChange={(ev, value) => onChange(value)}\n        options={mappedData}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Student'\n            placeholder='Type or select a name'\n          />\n        )}\n        renderOption={(option, { inputValue }) => {\n          const matches = match(option.name, inputValue)\n          const parts = parse(option.name, matches)\n\n          return (\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          )\n        }}\n      />\n    </Paper>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSearch)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nconst useStyles = makeStyles((theme) => ({\n  courses: {\n    '& div': {\n      'boxShadow': theme.shadows[4],\n      'cursor': 'pointer',\n      'marginBottom': theme.spacing(1),\n      'padding': `${theme.spacing(3)}px ${theme.spacing(4)}px`,\n      'transition': 'all 0.15s ease-in-out',\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: theme.shadows[1],\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[1],\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses.courses,\n})\n\nconst CourseSelector = ({ courses, onSelect }) => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Typography gutterBottom variant='h6'>\n        Select a course\n      </Typography>\n      {courses.length > 0 ? (\n        <div className={classes.courses}>\n          {courses.map((course) => (\n            <div\n              key={course.slug}\n              onClick={() => {\n                onSelect(course)\n              }}\n              tabIndex='0'\n            >\n              <Typography variant='body1'>\n                <b>{course.name}</b> &middot; Period {course.period}\n              </Typography>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <Alert severity='info'>\n          You must create a course before continuing\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(CourseSelector)\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table'\n\nconst StudentsTable = ({ course, onSelect }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = course.students.map((student) => ({\n    username: student.username,\n    firstName: student.firstName,\n    lastName: student.lastName,\n    fullName: `${student.firstName} ${student.lastName}`,\n    role: student.role,\n    _id: student._id,\n  }))\n\n  const [columns] = useState([{ title: 'Students', field: 'fullName' }])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [course])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No students found for this course',\n        },\n        toolbar: {\n          nRowsSelected: '{0} student(s) selected',\n        },\n      }}\n      onSelectionChange={(rows) => onSelect(rows)}\n      options={{ paging: false, selection: true, toolbar: true }}\n      title={`${course.name} | Period ${course.period}`}\n    />\n  )\n}\n\nexport default StudentsTable\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport ListErrors from '../ListErrors'\nimport StudentsTable from './StudentsTable'\nimport agent from '../../agent'\n\nimport {\n  ADD_TRANSACTIONS,\n  TRANSACTIONS_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(80),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (transactions, curStudent) =>\n    dispatch({\n      type: ADD_TRANSACTIONS,\n      payload: agent.Transactions.addMany(transactions),\n      curStudent,\n      snackbar: {\n        message: `${transactions.typeTitle} added`,\n        variant: 'success',\n      },\n    }),\n  onExit: () => dispatch({ type: TRANSACTIONS_DIALOG_UNLOADED }),\n})\n\nconst BulkTransactionsDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onAdd,\n  onExit,\n  type,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [course, setCourse] = useState(null)\n  const [students, setStudents] = useState([])\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    setCourse(null)\n    isClosed()\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd(\n      {\n        ...values,\n        students: students.map((student) => student._id),\n        type: type === 'Bonuses' ? 'bonus' : 'purchase',\n        typeTitle: type,\n      },\n      curStudent\n    )\n  }\n\n  const handleCourseSelect = (slug) => {\n    setCourse(slug)\n  }\n\n  const handleStudentSelect = (rows) => {\n    setStudents(rows)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <Formik\n        initialValues={{\n          amount: '',\n          description: '',\n        }}\n        validationSchema={Yup.object({\n          amount: Yup.number().typeError('Numbers only').required('Required'),\n          description: Yup.string().required('Required'),\n        })}\n        onSubmit={async (values) => {\n          handleSubmitAdd(values)\n        }}\n      >\n        <Form>\n          <DialogTitle>Add {type}</DialogTitle>\n          <DialogContent>\n            <ListErrors errors={errors} />\n            {!course && <CourseSelector onSelect={handleCourseSelect} />}\n            {course && (\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Description'\n                    name='description'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Amount'\n                    name='amount'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <StudentsTable\n                    course={course}\n                    onSelect={handleStudentSelect}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              disabled={inProgress || students.length === 0}\n              color='primary'\n              type='submit'\n              variant='contained'\n            >\n              {inProgress ? 'Adding...' : 'Add'}\n            </Button>\n            <Button\n              disabled={inProgress}\n              onClick={handleClose}\n              variant='contained'\n            >\n              Cancel\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BulkTransactionsDialog)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport parse from 'csv-parse/lib/sync'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  filedrop: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[300],\n    borderRadius: theme.spacing(1),\n    color: theme.palette.grey[600],\n    display: 'flex',\n    flexDirection: 'column',\n    outline: 'none',\n    padding: '20px',\n    transition: 'all 0.25s ease-in-out',\n  },\n  filedropActive: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  filedropReject: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nfunction Filedrop({ onFiledrop }) {\n  const classes = useStyles()\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Due to {multiple: false} in useDropzone(), only one file will be received\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const parsedFile = parse(reader.result, {\n          columns: true,\n          skip_empty_lines: true,\n        })\n        onFiledrop(parsedFile)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    accept: 'text/csv, text/plain',\n    multiple: false,\n    onDropAccepted: onDrop,\n  })\n\n  return (\n    <div\n      {...getRootProps({\n        className: `${classes.filedrop} ${\n          isDragActive ? classes.filedropActive : ''\n        } ${isDragReject ? classes.filedropReject : ''}`,\n      })}\n    >\n      <input {...getInputProps()} />\n      {!isDragActive && (\n        <Typography>\n          Drop a .csv file here or click to select a .csv file\n        </Typography>\n      )}\n      {isDragActive && !isDragReject && (\n        <Typography>Drop .csv file here</Typography>\n      )}\n      {isDragReject && <Typography>File type not accepted</Typography>}\n    </div>\n  )\n}\n\nexport default Filedrop\n","import React from 'react'\nimport { CircularProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    fontStyle: 'italic',\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: theme.spacing(40),\n  },\n  spinner: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Spinner = ({ message }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.spinner} />\n      <Typography className={classes.message}>\n        {message || 'Working...'}\n      </Typography>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\n\nimport CourseSelector from './CourseSelector'\nimport Filedrop from '../Filedrop'\nimport ListErrors from '../ListErrors'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.scores,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onImport: (data, curStudent) =>\n    dispatch({\n      type: IMPORT_SCORES,\n      payload: agent.Scores.import(data),\n      curStudent,\n      snackbar: { message: 'Scores imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: IMPORT_SCORES_DIALOG_UNLOADED }),\n})\n\nconst ScoreImportStepper = ({ onDataChange, onShowImport }) => {\n  const [file, setFile] = useState(null)\n  const [course, setCourse] = useState(null)\n  const [tasks, setTasks] = useState(null)\n\n  const handleCourseSelect = (course) => {\n    setCourse(course)\n  }\n\n  const handleFiledrop = (file) => {\n    const tasks = {}\n    Object.keys(file[0])\n      .slice(1)\n      .forEach((task) => {\n        tasks[task] = false\n      })\n    setFile(file)\n    setTasks(tasks)\n  }\n\n  const handleTaskChange = (ev) => {\n    setTasks({ ...tasks, [ev.target.name]: ev.target.checked })\n  }\n\n  // Determine if any tasks have been checked/selected\n  useEffect(() => {\n    const tasksSelected = tasks\n      ? Object.values(tasks).some((el) => el === true)\n      : false\n    onShowImport(tasksSelected)\n  }, [tasks])\n\n  // Keep the imported data object current\n  useEffect(() => {\n    onDataChange({ file, course, tasks })\n  }, [file, course, tasks])\n\n  return (\n    <>\n      {!file && !course && !tasks && (\n        <CourseSelector onSelect={handleCourseSelect} />\n      )}\n\n      {!file && course && !tasks && (\n        <div>\n          <Typography gutterBottom>\n            Scores must be imported from a .csv file exported from Infinite\n            Campus\n          </Typography>\n          <Filedrop onFiledrop={handleFiledrop} />\n        </div>\n      )}\n\n      {file && course && tasks && (\n        <FormControl component='fieldset'>\n          <Typography gutterBottom variant='body1'>\n            Select the assignments to import\n          </Typography>\n          <FormGroup>\n            {Object.keys(tasks).map((task) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={tasks[task]}\n                    onChange={handleTaskChange}\n                    name={task}\n                  />\n                }\n                key={task}\n                label={task}\n              />\n            ))}\n          </FormGroup>\n        </FormControl>\n      )}\n    </>\n  )\n}\n\nconst ImportScoresDialog = ({\n  curStudent,\n  errors,\n  inProgress,\n  isClosed,\n  isOpen,\n  onExit,\n  onImport,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [ready, setReady] = useState(false)\n  const [data, setData] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n    isClosed()\n  }\n\n  const handleDataChange = (importData) => {\n    setData(importData)\n  }\n\n  const handleShowImport = (selected) => {\n    setReady(selected)\n  }\n\n  const handleClickImport = () => {\n    // Get student usernames (student numbers)\n    const usernames = data.file\n      .map(\n        (student, index) =>\n          index > 1 && student['Assignment Name'].split('#').pop()\n      )\n      .filter((username) => username !== false)\n\n    // Prepare data to send to server\n    const parsed = { course: data.course, tasks: [] }\n    for (const taskName in data.tasks) {\n      const selected = data.tasks[taskName]\n      if (selected) {\n        const task = {\n          title: taskName,\n          totalPoints: data.file[1][taskName],\n          scores: {},\n        }\n\n        for (const username of usernames) {\n          const student = data.file.find((row) =>\n            row['Assignment Name'].endsWith(username)\n          )\n          if (student) task.scores[username] = student[taskName]\n        }\n\n        parsed.tasks.push(task)\n      }\n    }\n\n    onImport(parsed, curStudent)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) handleClose()\n  }, [inProgress])\n\n  // Allow for external component control of displaying the dialog\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n    <Dialog\n      className={classes.dialog}\n      fullScreen={fullScreen}\n      onClick={(ev) => ev.stopPropagation()}\n      onClose={handleClose}\n      onExit={onExit}\n      onFocus={(ev) => ev.stopPropagation()}\n      open={open}\n    >\n      <DialogTitle>Import Scores</DialogTitle>\n      <DialogContent>\n        <ListErrors errors={errors} />\n        {inProgress ? (\n          <Spinner message='Importing...' />\n        ) : (\n          <ScoreImportStepper\n            onDataChange={handleDataChange}\n            onShowImport={handleShowImport}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        {ready && (\n          <Button\n            color='primary'\n            disabled={inProgress}\n            onClick={handleClickImport}\n            variant='contained'\n          >\n            {inProgress ? 'Importing...' : 'Import'}\n          </Button>\n        )}\n        <Button disabled={inProgress} onClick={handleClose} variant='contained'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportScoresDialog)\n","import React, { useState } from 'react'\nimport {\n  Fab,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core'\nimport { Grade, Money, Publish, ShoppingCart } from '@material-ui/icons'\n\nimport BulkTransactionsDialog from './BulkTransactionsDialog'\nimport ImportScoresDialog from '../Teacher/ImportScoresDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst UpdateAccountsMenu = ({ curStudent }) => {\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null)\n  const [menuSelection, setMenuSelection] = useState(null)\n\n  const classes = useStyles()\n\n  const handleMenuOpen = (ev) => {\n    setMenuAnchorEl(ev.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null)\n  }\n\n  const handleMenuSelect = (ev) => {\n    setMenuSelection(ev.currentTarget.dataset.type)\n    setMenuAnchorEl(null)\n  }\n\n  const handleDialogClose = () => {\n    setMenuSelection(null)\n  }\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleMenuOpen} variant='extended'>\n        <Money className={classes.icon} />\n        Update Accounts\n      </Fab>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem data-type='scores' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Publish />\n          </ListItemIcon>\n          <ListItemText>Import scores</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='bonuses' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <Grade />\n          </ListItemIcon>\n          <ListItemText>Add Bonuses</ListItemText>\n        </MenuItem>\n        <MenuItem data-type='purchases' onClick={handleMenuSelect}>\n          <ListItemIcon>\n            <ShoppingCart />\n          </ListItemIcon>\n          <ListItemText>Add Purchases</ListItemText>\n        </MenuItem>\n      </Menu>\n      <ImportScoresDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'scores'}\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'bonuses'}\n        type='Bonuses'\n      />\n      <BulkTransactionsDialog\n        curStudent={curStudent}\n        isClosed={handleDialogClose}\n        isOpen={menuSelection === 'purchases'}\n        type='Purchases'\n      />\n    </>\n  )\n}\n\nexport default UpdateAccountsMenu\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport AccountView from '../AccountView'\nimport Alert from '../Alert'\nimport PageHeader from '../PageHeader'\nimport StudentSearch from './StudentSearch'\nimport UpdateAccountsMenu from './UpdateAccountsMenu'\n\nimport { ACCOUNTS_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  importSummary: state.scores.importSummary,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: ACCOUNTS_PAGE_UNLOADED }),\n})\n\nconst TeacherAccounts = ({ importSummary, onUnload }) => {\n  const [student, setStudent] = useState(null)\n\n  const plural = (qty, unit) => `${qty} ${unit}${qty !== 1 ? 's' : ''}`\n\n  const handleStudentSelect = (student) => {\n    setStudent(student)\n  }\n\n  useEffect(() => {\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Accounts'>\n        <UpdateAccountsMenu curStudent={student} />\n      </PageHeader>\n\n      {importSummary && (\n        <Alert>\n          Created {plural(importSummary.tasksCreated, 'assignment')}, imported{' '}\n          {plural(importSummary.scoresImported, 'score')}, and updated{' '}\n          {plural(importSummary.scoresUpdated, 'score')}\n        </Alert>\n      )}\n\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <StudentSearch onChange={handleStudentSelect} />\n        </Grid>\n        <Grid item xs={12}>\n          {student && <AccountView canEdit={true} student={student} />}\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherAccounts)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_COURSE,\n  COURSE_DIALOG_UNLOADED,\n  UPDATE_COURSE,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (course) =>\n    dispatch({\n      type: ADD_COURSE,\n      payload: agent.Courses.add(course),\n      snackbar: { message: 'Course added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: COURSE_DIALOG_UNLOADED }),\n  onUpdate: (course) =>\n    dispatch({\n      type: UPDATE_COURSE,\n      payload: agent.Courses.update(course),\n      snackbar: { message: 'Course updated', variant: 'success' },\n    }),\n})\n\nconst CourseDialog = ({\n  course,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...course, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {course ? (\n        <ActionButton action='Edit course' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Create course\n        </Fab>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            name: course?.name || '',\n            period: course?.period || '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            period: Yup.number().typeError('Numbers only').required('Required'),\n          })}\n          onSubmit={async (values) => {\n            course ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {course ? 'Edit Course' : 'Create Course'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={course ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Course Name'\n                    name='name'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Period'\n                    name='period'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                disabled={inProgress}\n                color='primary'\n                type='submit'\n                variant='contained'\n              >\n                {course\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_STUDENT } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (username, courseId) =>\n    dispatch({\n      type: DELETE_STUDENT,\n      payload: agent.Students.delete(username),\n      username,\n      courseId,\n      snackbar: { message: 'Student deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteStudentAlert = ({ course, onDelete, student }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(student.username, course._id)\n  }\n\n  return (\n    <>\n      <ActionButton\n        action='Delete student'\n        onClick={handleClickOpen}\n        size='small'\n      >\n        <Delete fontSize='inherit' />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Student</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {student.firstName} {student.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>the student's account, and</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this student. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteStudentAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Edit, PersonAdd } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_STUDENT,\n  STUDENT_DIALOG_UNLOADED,\n  UPDATE_STUDENT,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user, courseId) =>\n    dispatch({\n      type: ADD_STUDENT,\n      payload: agent.Students.add(user, courseId),\n      courseId,\n      snackbar: { message: 'Student added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n  onUpdate: (user, courseId) =>\n    dispatch({\n      type: UPDATE_STUDENT,\n      payload: agent.Students.update(user),\n      courseId,\n      snackbar: { message: 'Student updated', variant: 'success' },\n    }),\n})\n\nconst StudentDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  student,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    const user = { ...values }\n    const courseId = course._id\n    user.role = 'student'\n    onAdd(user, courseId)\n  }\n\n  const handleSubmitUpdate = (values) => {\n    const user = { ...student, ...values }\n    const courseId = course._id\n    onUpdate(user, courseId)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {student ? (\n        <ActionButton\n          action='Edit student'\n          onClick={handleClickOpen}\n          size='small'\n        >\n          <Edit fontSize='inherit' />\n        </ActionButton>\n      ) : (\n        <ActionButton action='Add student' onClick={handleClickOpen}>\n          <PersonAdd />\n        </ActionButton>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <Formik\n          initialValues={{\n            firstName: student?.firstName || '',\n            lastName: student?.lastName || '',\n            username: student?.username || '',\n            password: !student ? defaultStudentPassword : '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.number()\n              .typeError('Numbers only')\n              .required('Required'),\n            password: Yup.string().required(!student ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            student ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {student ? 'Edit Student' : 'Add Student'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={student ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!student || inProgress}\n                    label='Student Number'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {student\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDialog)\n","import React from 'react'\nimport { Chip, Typography, makeStyles } from '@material-ui/core'\n\nimport DeleteStudentAlert from './DeleteStudentAlert'\nimport ResetStudentPasswordAlert from './ResetStudentPasswordAlert'\nimport StudentDialog from './StudentDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    'alignItems': 'center',\n    'borderBottom': 'solid 2px white',\n    'display': 'flex',\n    'height': theme.spacing(5),\n    'justifyContent': 'space-between',\n    'padding': theme.spacing(1),\n    '&:hover': {\n      borderBottomColor: theme.palette.secondary.main,\n    },\n  },\n  rowHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  studentUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n}))\n\nconst StudentListRow = ({ course, student }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.row}>\n      <div className={classes.rowHeader}>\n        <Chip\n          color='primary'\n          label={student.username}\n          className={classes.studentUsername}\n        />\n        <Typography>\n          {student.lastName}, {student.firstName}\n        </Typography>\n      </div>\n      <div>\n        <ResetStudentPasswordAlert student={student} />\n        <StudentDialog course={course} student={student} />\n        <DeleteStudentAlert course={course} student={student} />\n      </div>\n    </div>\n  )\n}\n\nconst CourseStudentList = ({ course }) => {\n  return (\n    <>\n      <Typography variant='h6'>Students</Typography>{' '}\n      {course.students && course.students.length > 0 ? (\n        course.students.map((student) => {\n          return (\n            <StudentListRow\n              key={student._id}\n              course={course}\n              student={student}\n            />\n          )\n        })\n      ) : (\n        <div>\n          <Typography>No students have been added to this course</Typography>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default CourseStudentList\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_COURSE } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_COURSE,\n      payload: agent.Courses.delete(slug),\n      slug,\n      snackbar: { message: 'Course deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteCourseAlert = ({ course, onDelete }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(course.slug)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete course' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Course</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {course.name} Period {course.period}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this course. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteCourseAlert)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n  Typography,\n} from '@material-ui/core'\nimport { Publish } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport Filedrop from '../Filedrop'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  IMPORT_STUDENTS,\n  STUDENT_DIALOG_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.common.settings,\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrop: (users, courseId) =>\n    dispatch({\n      type: IMPORT_STUDENTS,\n      payload: agent.Students.import(users, courseId),\n      snackbar: { message: 'Students imported', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: STUDENT_DIALOG_UNLOADED }),\n})\n\nconst ImportStudentsDialog = ({\n  course,\n  defaultStudentPassword,\n  errors,\n  inProgress,\n  onDrop,\n  onExit,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleFiledrop = (file) => {\n    const column = Object.keys(file[0])\n    const users = file\n      .map((row, index) => {\n        // Parse csv data for Infinite Campus grade book export\n        if (index < 2) return null\n        const student = row[column[0]]\n        const user = {\n          firstName: student\n            .split(',')[1]\n            .split(/(\\s\\w)*\\s#/)[0]\n            .trim(),\n          lastName: student.split(',')[0],\n          username: student.split('#')[1],\n          password: defaultStudentPassword,\n          role: 'student',\n        }\n        return user\n      })\n      .filter((element) => element !== null)\n    onDrop(users, course._id)\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      <ActionButton action='Import students' onClick={handleClickOpen}>\n        <Publish />\n      </ActionButton>\n\n      <Dialog\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Import Students</DialogTitle>\n        <DialogContent>\n          {inProgress ? (\n            <Spinner message='Importing...' />\n          ) : (\n            <>\n              <Typography gutterBottom>\n                Students can be imported from a .csv file exported from Infinite\n                Campus\n              </Typography>\n              <Filedrop onFiledrop={handleFiledrop} />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportStudentsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\n\nimport agent from '../../agent'\n\nimport {\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  UPDATE_TASK,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (slug) =>\n    dispatch({\n      type: DELETE_TASK,\n      payload: agent.Tasks.delete(slug),\n      slug,\n      snackbar: { message: 'Assignment removed', variant: 'success' },\n    }),\n  onLoad: (courseId) =>\n    dispatch({\n      type: TASKS_DIALOG_LOADED,\n      payload: agent.Tasks.getAll(courseId),\n    }),\n  onUpdate: (task) =>\n    dispatch({\n      type: UPDATE_TASK,\n      payload: agent.Tasks.update(task),\n      snackbar: { message: 'Assignment updated', variant: 'success' },\n    }),\n})\n\nconst TasksTable = ({ course, onDelete, onLoad, onUpdate, tasks }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = tasks.map((task) => ({\n    createdAt: new Date(task.createdAt).toDateString(),\n    title: task.title,\n    totalPoints: task.totalPoints,\n    slug: task.slug,\n  }))\n\n  const [columns] = useState([\n    { title: 'Date', field: 'createdAt', editable: 'never' },\n    { title: 'Title', field: 'title', editable: 'never' },\n    { title: 'Total Points', field: 'totalPoints' },\n  ])\n\n  useEffect(() => {\n    onLoad(course._id)\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [tasks])\n\n  return (\n    <MaterialTable\n      columns={columns}\n      data={data}\n      localization={{\n        body: {\n          emptyDataSourceMessage: 'No assignments found for this course',\n          editRow: {\n            deleteText:\n              'Delete assignment? This will delete all scores for this assignment.',\n          },\n        },\n      }}\n      options={{ actionsColumnIndex: -1, paging: false, toolbar: false }}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n            dataUpdate[index] = newData\n            setData([...dataUpdate])\n            onUpdate(newData)\n            resolve()\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve, reject) => {\n            const newData = [...data]\n            const index = oldData.tableData.id\n            newData.splice(index, 1)\n            setData([...newData])\n            onDelete(oldData.slug)\n            resolve()\n          }),\n      }}\n    />\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksTable)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Assignment } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport TasksTable from './TasksTable'\n\nimport { TASKS_DIALOG_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.tasks,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: TASKS_DIALOG_UNLOADED }),\n})\n\nconst TasksDialog = ({ course, errors, inProgress, onExit }) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <ActionButton action='Manage assignments' onClick={handleClickOpen}>\n        <Assignment />\n      </ActionButton>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Manage Assignments</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          <TasksTable course={course} />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksDialog)\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport CourseDialog from './CourseDialog'\nimport CourseStudentList from './CourseStudentList'\nimport DeleteCourseAlert from './DeleteCourseAlert'\nimport ImportStudentsDialog from './ImportStudentsDialog'\nimport StudentDialog from './StudentDialog'\nimport TasksDialog from './TasksDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  courseDetails: {\n    display: 'block',\n  },\n  courseHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  coursePeriod: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(2),\n  },\n  courseTitle: {\n    flexGrow: '1',\n  },\n}))\n\nconst CourseList = ({ courses }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {courses?.length > 0 ? (\n        courses.map((course) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === course._id}\n              key={course._id}\n              onChange={handleChange(course._id)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.courseHeader}>\n                  <Avatar className={classes.coursePeriod}>\n                    {course.period}\n                  </Avatar>\n                  <Typography className={classes.courseTitle} variant='h5'>\n                    {course.name}\n                  </Typography>\n                  <TasksDialog course={course} />\n                  <StudentDialog course={course} />\n                  <ImportStudentsDialog course={course} />\n                  <CourseDialog course={course} />\n                  <DeleteCourseAlert course={course} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.courseDetails}>\n                <CourseStudentList course={course} />\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>You have no courses</Typography>\n      )}\n    </>\n  )\n}\n\nexport default CourseList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Alert from '../Alert'\nimport CourseDialog from './CourseDialog'\nimport CourseList from './CourseList'\nimport PageHeader from '../PageHeader'\nimport Spinner from '../Spinner'\nimport agent from '../../agent'\n\nimport {\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.courses,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({ type: COURSES_PAGE_LOADED, payload: agent.Courses.getAll() }),\n  onUnload: () => dispatch({ type: COURSES_PAGE_UNLOADED }),\n})\n\nconst TeacherCourses = ({\n  courses,\n  importCount,\n  onLoad,\n  onUnload,\n  pageLoaded,\n}) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title='Manage Courses'>\n        <CourseDialog />\n      </PageHeader>\n      {importCount !== null && <Alert>{importCount} students imported</Alert>}\n      {pageLoaded ? (\n        <Spinner message='Loading...' />\n      ) : (\n        <CourseList courses={courses} />\n      )}\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherCourses)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  ButtonGroup,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { PlaylistAddCheck, ThumbDown, ThumbUp } from '@material-ui/icons'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  UPDATE_SONG_REQUEST,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    '& > .MuiDialog-container > .MuiPaper-root': {\n      [theme.breakpoints.up('lg')]: {\n        minHeight: theme.spacing(54),\n        width: theme.spacing(100),\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  panel: {\n    minWidth: theme.spacing(40),\n    maxWidth: theme.spacing(60),\n  },\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  songInfo: {\n    marginBottom: theme.spacing(4),\n  },\n  statusButton: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  statusDescription: {\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  studentInfo: {\n    'alignItems': 'center',\n    'display': 'flex',\n    'marginTop': theme.spacing(4),\n    '& > div': {\n      marginRight: theme.spacing(1),\n    },\n    [theme.breakpoints.up('md')]: {\n      borderTopColor: theme.palette.primary.main,\n      borderTopStyle: 'dotted',\n      borderTopWidth: '4px',\n      paddingTop: theme.spacing(2),\n    },\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.songs,\n  songRequestPurchaseAmount: state.common.settings.songRequestPurchaseAmount,\n  // spotifyTokens: state.common.settings.spotifyTokens,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onExit: () => dispatch({ type: SONG_REQUESTS_DIALOG_UNLOADED }),\n  onSubmit: (song) =>\n    dispatch({\n      type: UPDATE_SONG_REQUEST,\n      payload: agent.Songs.update(song),\n    }),\n})\n\nconst ProcessSongRequestsDialog = ({\n  courses,\n  errors,\n  inProgress,\n  onExit,\n  onSubmit,\n  songRequestPurchaseAmount,\n  // spotifyTokens,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [song, setSong] = useState(null)\n  const [status, setStatus] = useState(null)\n  const [statusDescription, setStatusDescription] = useState(null)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const getLyricSearchUrl = (artist, title) => {\n    const url = `http://www.google.com/search?q=${encodeURIComponent(\n      'lyrics: ' + title + ' by ' + artist\n    )}`\n    return url\n  }\n\n  const getSpotifySearchUrl = (artist, title) => {\n    const url = `https://open.spotify.com/search/${encodeURIComponent(\n      title + ' ' + artist\n    )}`\n    return url\n  }\n\n  const getNextSong = () => {\n    setSong(null)\n    if (courses.length > 0) {\n      for (const course of courses) {\n        if (course.songs.length > 0) {\n          const nextSong = course.songs.find(\n            (song) => song.status === 'pending'\n          )\n          if (nextSong) {\n            nextSong.period = course.period\n            setSong(nextSong)\n            break\n          }\n        }\n      }\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  const handleStatusButtonClick = (status) => {\n    setStatus(status)\n  }\n\n  const handleStatusDescriptionChange = (ev) => {\n    setStatusDescription(ev.target.value)\n  }\n\n  const handleSubmit = async () => {\n    onSubmit({\n      amount: songRequestPurchaseAmount,\n      id: song._id,\n      status,\n      statusDescription,\n    })\n    setStatus(null)\n    setStatusDescription(null)\n  }\n\n  useEffect(() => {\n    getNextSong()\n  }, [courses])\n\n  return (\n    <>\n      <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n        <PlaylistAddCheck className={classes.icon} />\n        Process requests\n      </Fab>\n\n      <Dialog\n        className={classes.dialog}\n        fullScreen={fullScreen}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n        open={open}\n      >\n        <DialogTitle>Process Song Requests</DialogTitle>\n        <DialogContent>\n          <ListErrors errors={errors} />\n          {song ? (\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <div className={classes.songInfo}>\n                    <Typography variant='h6'>{song.title}</Typography>\n                    <Typography\n                      color='textSecondary'\n                      variant='body1'\n                      gutterBottom\n                    >\n                      Song\n                    </Typography>\n                    <Typography variant='h6'>{song.artist}</Typography>\n                    <Typography color='textSecondary' variant='body1'>\n                      Artist\n                    </Typography>\n                  </div>\n\n                  <ButtonGroup>\n                    <Button\n                      href={getLyricSearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Lyrics\n                    </Button>\n                    <Button\n                      href={getSpotifySearchUrl(song.artist, song.title)}\n                      target='_blank'\n                    >\n                      Search Spotify\n                    </Button>\n                  </ButtonGroup>\n\n                  <div className={classes.studentInfo}>\n                    <Chip color='secondary' label={song.period} />\n                    <Typography>\n                      {song.student.firstName} {song.student.lastName}\n                    </Typography>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <div className={classes.panel}>\n                  <Typography variant='h6'>Status</Typography>\n\n                  <ButtonGroup fullWidth size='large'>\n                    <Tooltip title='Approve' arrow>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'approved' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('approved')}\n                      >\n                        <ThumbUp />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip title='Reject' arrow>\n                      <Button\n                        className={`${classes.statusButton} ${\n                          status === 'rejected' && classes.selected\n                        }`}\n                        onClick={() => handleStatusButtonClick('rejected')}\n                      >\n                        <ThumbDown />\n                      </Button>\n                    </Tooltip>\n                  </ButtonGroup>\n                  {status === 'approved' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Condition for Approval</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Clean version'\n                            control={<Radio />}\n                            label='Clean version'\n                          />\n                          <FormControlLabel\n                            value='Instrumental version'\n                            control={<Radio />}\n                            label='Instrumental version'\n                          />\n                          <FormControlLabel\n                            value='Picked my best guess'\n                            control={<Radio />}\n                            label='Picked my best guess'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                  {status === 'rejected' && (\n                    <div className={classes.statusDescription}>\n                      <Typography gutterBottom>\n                        <strong>Reason for Rejection</strong> (optional)\n                      </Typography>\n                      <FormControl component='fieldset'>\n                        <RadioGroup\n                          name='statusDescription'\n                          value={statusDescription}\n                          onChange={handleStatusDescriptionChange}\n                        >\n                          <FormControlLabel\n                            value='Inappropriate content (language, drugs, sex, and/or violence)'\n                            control={<Radio />}\n                            label='Inappropriate content (language, drugs, sex, and/or violence)'\n                          />\n                          <FormControlLabel\n                            value='Not available on Spotify'\n                            control={<Radio />}\n                            label='Not available on Spotify'\n                          />\n                          <FormControlLabel\n                            value='other'\n                            control={<Radio />}\n                            label='Other'\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  )}\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Alert severity='info'>\n              <AlertTitle>All caught up!</AlertTitle>\n              There are no songs to process at this time\n            </Alert>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          {song && (\n            <Button\n              color='primary'\n              disabled={inProgress}\n              onClick={handleSubmit}\n              variant='contained'\n            >\n              {inProgress ? 'Saving...' : 'Save & Continue'}\n            </Button>\n          )}\n          <Button\n            disabled={inProgress}\n            onClick={handleClose}\n            variant='contained'\n          >\n            {song ? 'Cancel' : 'Close'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProcessSongRequestsDialog)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table'\nimport { Chip, Tooltip } from '@material-ui/core'\nimport { InfoOutlined } from '@material-ui/icons'\n\nimport PageHeader from '../PageHeader'\nimport ProcessSongRequestsDialog from './ProcessSongRequestsDialog'\nimport agent from '../../agent'\n\nimport {\n  DELETE_SONG_REQUEST,\n  SONGS_PAGE_UNLOADED,\n  TEACHER_SONGS_PAGE_LOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.songs })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) =>\n    dispatch({\n      type: DELETE_SONG_REQUEST,\n      payload: agent.Songs.delete(id),\n      songId: id,\n      snackbar: { message: 'Song request removed', variant: 'success' },\n    }),\n  onLoad: () =>\n    dispatch({\n      type: TEACHER_SONGS_PAGE_LOADED,\n      payload: agent.Songs.forTeacher(),\n    }),\n  onUnload: () => dispatch({ type: SONGS_PAGE_UNLOADED }),\n})\n\nconst TeacherSongs = ({ courses, onDelete, onLoad, onUnload }) => {\n  const [data, setData] = useState([])\n\n  const mappedData = courses\n    .map((course) =>\n      course.songs.map((song) => ({\n        createdAt: new Date(song.createdAt).toDateString(),\n        title: song.title,\n        artist: song.artist,\n        purchasedBy: `${song.student.firstName} ${song.student.lastName}`,\n        period: course.period,\n        status: song.status,\n        statusDescription: song.statusDescription,\n        _id: song._id,\n      }))\n    )\n    .flat()\n\n  const [columns] = useState([\n    { title: 'Request Date', field: 'createdAt', editable: 'never' },\n    { title: 'Song Title', field: 'title' },\n    { title: 'Song Artist', field: 'artist' },\n    { title: 'Purchased by', field: 'purchasedBy', editable: 'never' },\n    {\n      title: 'Period',\n      field: 'period',\n      editable: 'never',\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <Chip label={rowData.period} color='secondary' />\n        ) : (\n          <Chip label={rowData} color='secondary' />\n        ),\n    },\n    {\n      title: 'Status',\n      field: 'status',\n      lookup: {\n        approved: 'approved',\n        pending: 'pending',\n        rejected: 'rejected',\n        removed: 'removed',\n      },\n      render: (rowData, renderType) =>\n        renderType === 'row' ? (\n          <span style={{ alignItems: 'center', display: 'flex' }}>\n            {rowData.statusDescription ? (\n              <>\n                {rowData.status}\n                <Tooltip\n                  arrow\n                  color='primary'\n                  enterTouchDelay={0}\n                  title={rowData.statusDescription}\n                >\n                  <InfoOutlined style={{ marginLeft: '8px' }} />\n                </Tooltip>\n              </>\n            ) : (\n              rowData.status\n            )}\n          </span>\n        ) : (\n          <span>{rowData}</span>\n        ),\n    },\n  ])\n\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      return onUnload()\n    }\n  }, [])\n\n  useEffect(() => {\n    setData(mappedData)\n  }, [courses])\n\n  return (\n    <>\n      <PageHeader title='Manage Song Requests'>\n        <ProcessSongRequestsDialog />\n      </PageHeader>\n\n      <MaterialTable\n        title='Song Requests'\n        columns={columns}\n        data={data}\n        localization={{\n          body: {\n            emptyDataSourceMessage: 'No song requests have been submitted',\n            editRow: {\n              deleteText: 'Delete song request?',\n            },\n          },\n        }}\n        options={{ actionsColumnIndex: -1, paging: false, grouping: true }}\n        editable={{\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              const dataDelete = [...data]\n              const index = oldData.tableData.id\n              dataDelete.splice(index, 1)\n              setData([...dataDelete])\n              onDelete(oldData._id)\n              resolve()\n            }),\n        }}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherSongs)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport * as Yup from 'yup'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Fab,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport { Add, Edit } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport {\n  ADD_TEACHER,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (user) =>\n    dispatch({\n      type: ADD_TEACHER,\n      payload: agent.Auth.register(user),\n      snackbar: { message: 'Teacher added', variant: 'success' },\n    }),\n  onExit: () => dispatch({ type: TEACHER_DIALOG_UNLOADED }),\n  onUpdate: (user) =>\n    dispatch({\n      type: UPDATE_TEACHER,\n      payload: agent.Teachers.update(user),\n      snackbar: { message: 'Teacher updated', variant: 'success' },\n    }),\n})\n\nconst TeacherDialog = ({\n  errors,\n  inProgress,\n  onAdd,\n  onExit,\n  onUpdate,\n  teacher,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const classes = useStyles()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmitAdd = (values) => {\n    onAdd({ ...values, role: 'teacher' })\n  }\n\n  const handleSubmitUpdate = (values) => {\n    onUpdate({ ...teacher, ...values })\n  }\n\n  useEffect(() => {\n    // Close the dialog only if there are no errors\n    if (!inProgress && !errors) setOpen(false)\n  }, [inProgress])\n\n  return (\n    <>\n      {teacher ? (\n        <ActionButton action='Update teacher' onClick={handleClickOpen}>\n          <Edit />\n        </ActionButton>\n      ) : (\n        <Fab color='primary' onClick={handleClickOpen} variant='extended'>\n          <Add className={classes.icon} />\n          Add teacher\n        </Fab>\n      )}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        onClick={(ev) => ev.stopPropagation()}\n        onExit={onExit}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <Formik\n          initialValues={{\n            firstName: teacher?.firstName || '',\n            lastName: teacher?.lastName || '',\n            username: teacher?.username || '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required('Required'),\n            lastName: Yup.string().required('Required'),\n            username: Yup.string().required('Required'),\n            password: Yup.string().required(!teacher ? 'Required' : ''),\n          })}\n          onSubmit={async (values) => {\n            teacher ? handleSubmitUpdate(values) : handleSubmitAdd(values)\n          }}\n        >\n          <Form>\n            <DialogTitle>\n              {teacher ? 'Edit Teacher' : 'Add Teacher'}\n            </DialogTitle>\n            <DialogContent>\n              <ListErrors errors={errors} />\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    autoFocus={teacher ? false : true}\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='First Name'\n                    name='firstName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Last Name'\n                    name='lastName'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={!!teacher || inProgress}\n                    label='Username'\n                    name='username'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Field\n                    color='primary'\n                    component={TextField}\n                    disabled={inProgress}\n                    label='Password'\n                    name='password'\n                    type='text'\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color='primary'\n                disabled={inProgress}\n                type='submit'\n                variant='contained'\n              >\n                {teacher\n                  ? inProgress\n                    ? 'Updating...'\n                    : 'Update'\n                  : inProgress\n                  ? 'Adding...'\n                  : 'Add'}\n              </Button>\n              <Button\n                disabled={inProgress}\n                onClick={handleClose}\n                variant='contained'\n              >\n                Cancel\n              </Button>\n            </DialogActions>\n          </Form>\n        </Formik>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDialog)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\n\nimport ActionButton from '../ActionButton'\nimport agent from '../../agent'\n\nimport { DELETE_TEACHER } from '../../constants/actionTypes'\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (username) =>\n    dispatch({\n      type: DELETE_TEACHER,\n      payload: agent.Teachers.delete(username),\n      username,\n      snackbar: { message: 'Teacher deleted', variant: 'success' },\n    }),\n})\n\nconst DeleteTeacherAlert = ({ onDelete, teacher }) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = () => {\n    setOpen(false)\n    onDelete(teacher.username)\n  }\n\n  return (\n    <>\n      <ActionButton action='Delete teacher' onClick={handleClickOpen}>\n        <Delete />\n      </ActionButton>\n      <Dialog\n        open={open}\n        onClick={(ev) => ev.stopPropagation()}\n        onClose={handleClose}\n        onFocus={(ev) => ev.stopPropagation()}\n      >\n        <DialogTitle>Delete Teacher</DialogTitle>\n        <DialogContent>\n          <DialogContentText component='div'>\n            Are you sure you want to delete{' '}\n            <b>\n              {teacher.firstName} {teacher.lastName}\n            </b>\n            ? This action will permanently delete:\n            <ul>\n              <li>all student accounts</li>\n              <li>all song requests</li>\n              <li>all transactions</li>\n              <li>all scores</li>\n            </ul>\n            associated with this teacher. This action <b>cannot be undone</b>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleSubmit}\n            color='secondary'\n            variant='contained'\n            autoFocus\n          >\n            Delete\n          </Button>\n          <Button onClick={handleClose} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(DeleteTeacherAlert)\n","import React, { useState } from 'react'\nimport {\n  Chip,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\n\nimport TeacherDialog from './TeacherDialog'\nimport DeleteTeacherAlert from './DeleteTeacherAlert'\n\nconst useStyles = makeStyles((theme) => ({\n  teacherDetails: {\n    display: 'block',\n  },\n  teacherHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  teacherUsername: {\n    marginRight: theme.spacing(2),\n    minWidth: theme.spacing(12),\n  },\n  teacherName: {\n    flexGrow: '1',\n  },\n}))\n\nconst TeacherList = ({ teachers }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const classes = useStyles()\n\n  const handleChange = (panel) => (ev, isExpanded) => {\n    setExpanded(isExpanded ? panel : false)\n  }\n\n  return (\n    <>\n      {teachers?.length > 0 ? (\n        teachers.map((teacher) => {\n          return (\n            <ExpansionPanel\n              expanded={expanded === teacher.username}\n              key={teacher.username}\n              onChange={handleChange(teacher.username)}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n                <div className={classes.teacherHeader}>\n                  <Chip\n                    color='secondary'\n                    label={teacher.username}\n                    className={classes.teacherUsername}\n                  />\n                  <Typography className={classes.teacherName} variant='h5'>\n                    {teacher.firstName} {teacher.lastName}\n                  </Typography>\n                  <TeacherDialog teacher={teacher} />\n                  <DeleteTeacherAlert teacher={teacher} />\n                </div>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.teacherDetails}>\n                <Typography variant='h6'>Courses</Typography>\n                {teacher.courses && teacher.courses.length > 0 ? (\n                  teacher.courses.map((course) => {\n                    return (\n                      <div key={course._id}>\n                        <Typography>\n                          Period {course.period} | {course.name} |{' '}\n                          {course.students.length} students\n                        </Typography>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div>\n                    <Typography>No courses have been created</Typography>\n                  </div>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )\n        })\n      ) : (\n        <Typography>No teachers found</Typography>\n      )}\n    </>\n  )\n}\n\nexport default TeacherList\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport PageHeader from './../PageHeader'\nimport TeacherDialog from './TeacherDialog'\nimport TeacherList from './TeacherList'\nimport agent from '../../agent'\n\nimport {\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n} from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  ...state.teachers,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: () =>\n    dispatch({\n      type: MANAGE_TEACHERS_PAGE_LOADED,\n      payload: agent.Teachers.getAll(),\n    }),\n  onUnload: () => dispatch({ type: MANAGE_TEACHERS_PAGE_UNLOADED }),\n})\n\nconst ManageTeachers = ({ onLoad, onUnload, teachers }) => {\n  useEffect(() => {\n    onLoad()\n\n    return () => {\n      onUnload()\n    }\n  }, [])\n\n  return (\n    <>\n      <PageHeader title={'Manage Teachers'}>\n        <TeacherDialog />\n      </PageHeader>\n      <TeacherList teachers={teachers} />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeachers)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport NotFound from './NotFound'\nimport PageWrapper from './PageWrapper'\nimport ProtectedRoute from './ProtectedRoute'\nimport Settings from './Settings'\nimport StudentAccount from './Student/StudentAccount'\nimport StudentSongs from './Student/StudentSongs'\nimport TeacherAccounts from './Teacher/TeacherAccounts'\nimport TeacherCourses from './Teacher/TeacherCourses'\nimport TeacherSongs from './Teacher/TeacherSongs'\nimport ManageTeachers from './Admin/ManageTeachers'\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.common.currentUser,\n})\n\nconst Home = (props) => {\n  const { currentUser } = props\n\n  if (!currentUser) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Header currentUser={currentUser} />\n      <PageWrapper>\n        <Container>\n          <Switch>\n            <ProtectedRoute\n              path='/student/account'\n              component={StudentAccount}\n            />\n            <ProtectedRoute path='/student/settings' component={Settings} />\n            <ProtectedRoute path='/student/songs' component={StudentSongs} />\n\n            <ProtectedRoute\n              path='/teacher/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute\n              path='/teacher/courses'\n              component={TeacherCourses}\n            />\n            <ProtectedRoute path='/teacher/settings' component={Settings} />\n            <ProtectedRoute path='/teacher/songs' component={TeacherSongs} />\n\n            <ProtectedRoute\n              path='/admin/accounts'\n              component={TeacherAccounts}\n            />\n            <ProtectedRoute path='/admin/courses' component={TeacherCourses} />\n            <ProtectedRoute path='/admin/settings' component={Settings} />\n            <ProtectedRoute path='/admin/songs' component={TeacherSongs} />\n            <ProtectedRoute path='/admin/teachers' component={ManageTeachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        <Navigation />\n      </PageWrapper>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, () => ({}))(Home)\n","import React from 'react'\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './Logo'\nimport background from './../images/chemistry-background.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n  },\n  logo: {\n    marginBottom: theme.spacing(4),\n    width: 160,\n  },\n  panel: {\n    alignItems: 'center',\n    borderRadius: '1rem',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    overflowY: 'scroll',\n    padding: '2rem 4rem',\n    position: 'relative',\n  },\n  text: {\n    color: theme.palette.primary.main,\n    fontStyle: 'italic',\n  },\n}))\n\nconst Loading = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Div100vh className={classes.background}>\n      <Paper elevation={12} className={classes.panel}>\n        <Logo className={classes.logo} />\n        <Typography className={classes.text} variant='h4'>\n          Loading...\n        </Typography>\n      </Paper>\n    </Div100vh>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Form, Field } from 'formik'\nimport { TextField } from 'formik-material-ui'\nimport { Button, Grid } from '@material-ui/core'\nimport * as Yup from 'yup'\n\nimport ListErrors from '../ListErrors'\nimport agent from '../../agent'\n\nimport { LOGIN } from '../../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (username, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(username, password) }),\n})\n\nconst LoginForm = (props) => {\n  const submitForm = (username, password) => {\n    props.onSubmit(username, password)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string().required('Required'),\n        // .matches(/^[0-9]+$/, 'Must be numbers only')\n        password: Yup.string().required('Required'),\n        // .matches(/^[0-9]{4}$/, 'Must be exactly 4 numbers')\n      })}\n      onSubmit={(values) => {\n        const { username, password } = values\n        submitForm(username, password)\n      }}\n    >\n      <Form>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <ListErrors errors={props.errors} />\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Username'\n              name='username'\n              type='text'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Field\n              component={TextField}\n              disabled={props.inProgress}\n              fullWidth\n              label='Password'\n              name='password'\n              type='password'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color='primary'\n              disabled={props.inProgress}\n              size='large'\n              type='submit'\n              variant='contained'\n            >\n              {props.inProgress ? 'Loading...' : 'Login'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Grid, LinearProgress, Paper, makeStyles } from '@material-ui/core'\nimport Div100vh from 'react-div-100vh'\n\nimport Logo from './../Logo'\nimport LoginForm from './LoginForm'\nimport background from './../../images/chemistry-background.jpg'\n\nimport { LOGIN_PAGE_UNLOADED } from '../../constants/actionTypes'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    display: 'block',\n    margin: '0 auto',\n    width: 120,\n  },\n  page: {\n    alignItems: 'center',\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('lg')]: {\n      backgroundSize: 'initial',\n      justifyContent: 'flex-end',\n    },\n  },\n  panel: {\n    borderRadius: '1rem',\n    overflowY: 'scroll',\n    padding: '4rem 2rem',\n    position: 'relative',\n    width: '80%',\n    [theme.breakpoints.up('lg')]: {\n      borderRadius: '0',\n      height: '100%',\n      width: '40%',\n    },\n  },\n  progress: {\n    height: 10,\n    left: '0',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n  },\n}))\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  currentUser: state.common.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUnload: () => dispatch({ type: LOGIN_PAGE_UNLOADED }),\n})\n\nconst Login = (props) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    return () => props.onUnload()\n  }, [])\n\n  if (props.currentUser) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <Div100vh>\n      <div className={classes.page}>\n        <Paper elevation={12} className={classes.panel}>\n          {props.inProgress && <LinearProgress className={classes.progress} />}\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Logo className={classes.logo} />\n            </Grid>\n            <Grid item xs={12}>\n              <LoginForm />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </Div100vh>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\nimport { Button } from '@material-ui/core'\n\nimport { SNACKBAR_CLOSED } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({\n  snackbar: state.notifier.snackbar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSnackbarClose: () => dispatch({ type: SNACKBAR_CLOSED }),\n})\n\nconst Notification = (props) => {\n  const { snackbar } = props\n  const { enqueueSnackbar } = useSnackbar()\n\n  useEffect(() => {\n    if (snackbar) {\n      enqueueSnackbar(snackbar.message, { variant: snackbar.variant })\n    }\n  }, [snackbar])\n\n  return props.children\n}\n\nconst Notifier = (props) => {\n  const notistackRef = React.createRef()\n  const onSnackbarDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key)\n  }\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      ref={notistackRef}\n      action={(key) => (\n        <Button onClick={onSnackbarDismiss(key)}>Dismiss</Button>\n      )}\n      onClose={() => {\n        props.onSnackbarClose()\n      }}\n    >\n      <Notification snackbar={props.snackbar}>{props.children}</Notification>\n    </SnackbarProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier)\n","import {\n  ASYNC_START,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === LOGIN || action.subtype === REGISTER) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  APP_LOAD,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED,\n  LOGOUT,\n  REDIRECT,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  SPOTIFY_REMOVE_AUTH,\n  NAV_LOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  appName: 'Chem Cash',\n  token: null,\n  viewChangeCounter: 0,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case APP_LOAD:\n      return {\n        ...state,\n        token: action.token || null,\n        appLoaded: true,\n        currentUser: action.payload ? action.payload.user : null,\n        settings: action.payload ? action.payload.settings : null,\n      }\n    case LOGOUT:\n      return { ...state, redirectTo: '/login', token: null, currentUser: null }\n    case LOGIN:\n    case REGISTER:\n      return {\n        ...state,\n        redirectTo: action.error ? null : '/',\n        token: action.error ? null : action.payload.user.token,\n        currentUser: action.error ? null : action.payload.user,\n        settings: action.error ? null : action.payload.settings,\n      }\n    case LOGIN_PAGE_UNLOADED:\n    case REGISTER_PAGE_UNLOADED:\n    case SETTINGS_PAGE_UNLOADED:\n      return { ...state, viewChangeCounter: state.viewChangeCounter + 1 }\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return { ...state, redirectTo: action.redirectTo }\n    case REDIRECT:\n      return { ...state, redirectTo: null }\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        currentUser: action.error ? state.currentUser : action.payload[0].user,\n        settings: action.error ? state.settings : action.payload[1].settings,\n      }\n    case SPOTIFY_REMOVE_AUTH:\n      return {\n        ...state,\n        settings: action.error\n          ? state.settings\n          : { ...state.settings, spotifyTokens: undefined },\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ALERT_CLOSED,\n  ASYNC_START,\n  COURSE_DIALOG_UNLOADED,\n  COURSES_PAGE_LOADED,\n  COURSES_PAGE_UNLOADED,\n  DELETE_COURSE,\n  DELETE_STUDENT,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  STUDENT_DIALOG_UNLOADED,\n  STUDENT_SEARCH_LOADED,\n  STUDENT_SEARCH_UNLOADED,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  courses: [],\n  errors: null,\n  importCount: null,\n  inProgress: false,\n  pageLoaded: false,\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\nconst sortByPeriod = (a, b) => a.period - b.period\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ADD_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : [...state.courses, action.payload.course].sort((a, b) =>\n              sortByPeriod(a, b)\n            ),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ADD_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId) {\n          courseCopy.students = [\n            ...course.students,\n            action.payload.user,\n          ].sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case ALERT_CLOSED:\n      return { ...state, importCount: null }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_STUDENT ||\n        action.subtype === ADD_COURSE ||\n        action.subtype === UPDATE_COURSE ||\n        action.subtype === UPDATE_STUDENT\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === COURSES_PAGE_LOADED) {\n        return { ...state, errors: null, pageLoaded: true }\n      } else if (action.subtype === IMPORT_STUDENTS) {\n        return { ...state, errors: null, importCount: null, inProgress: true }\n      }\n      break\n    case COURSE_DIALOG_UNLOADED:\n    case STUDENT_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case COURSES_PAGE_LOADED:\n    case STUDENT_SEARCH_LOADED:\n      return { ...state, courses: action.payload.courses, pageLoaded: false }\n    case COURSES_PAGE_UNLOADED:\n    case STUDENT_SEARCH_UNLOADED:\n      return defaultState\n    case DELETE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.filter((course) => course.slug !== action.slug),\n      }\n    case DELETE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students.filter(\n            (student) => student.username !== action.username\n          )\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case IMPORT_STUDENTS:\n      // Students are not sorted when returned from server (@todo: fix this?)\n      !action.error &&\n        action.payload.course.students.sort((a, b) => sortByLastName(a, b))\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses.map((course) =>\n              course._id === action.payload.course._id\n                ? action.payload.course\n                : course\n            ),\n        errors: action.error ? action.payload.errors : null,\n        importCount: action.error ? null : action.payload.count,\n        inProgress: false,\n      }\n    case RESET_STUDENT_PASSWORD:\n      return { ...state }\n    case UPDATE_COURSE:\n      return {\n        ...state,\n        courses: action.error\n          ? state.courses\n          : state.courses\n              .map((course) =>\n                course._id === action.payload.course._id\n                  ? action.payload.course\n                  : course\n              )\n              .sort((a, b) => sortByPeriod(a, b)),\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    case UPDATE_STUDENT:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      courses = []\n      const updatedUser = action.payload.user\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        if (course._id.toString() === action.courseId.toString()) {\n          courseCopy.students = course.students\n            .map((student) =>\n              student._id.toString() === updatedUser._id.toString()\n                ? updatedUser\n                : student\n            )\n            .sort((a, b) => sortByLastName(a, b))\n        }\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  NAV_LOADED,\n  NAV_UNLOADED,\n  NAV_TAB_CHANGE,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case NAV_LOADED:\n    case NAV_TAB_CHANGE:\n      return {\n        ...state,\n        navTabValue: action.value,\n      }\n    case NAV_UNLOADED:\n      return {}\n    default:\n      return state\n  }\n}\n","import {\n  ADD_COURSE,\n  ADD_STUDENT,\n  ADD_TEACHER,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  DELETE_COURSE,\n  DELETE_SONG_REQUEST,\n  DELETE_STUDENT,\n  DELETE_TASK,\n  DELETE_TEACHER,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_STUDENTS,\n  RESET_STUDENT_PASSWORD,\n  SETTINGS_SAVED,\n  SNACKBAR_CLOSED,\n  SUBMIT_SONG_REQUEST,\n  UPDATE_COURSE,\n  UPDATE_STUDENT,\n  UPDATE_TASK,\n  UPDATE_TEACHER,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_COURSE:\n    case ADD_STUDENT:\n    case ADD_TEACHER:\n    case ADD_TRANSACTION:\n    case ADD_TRANSACTIONS:\n    case DELETE_COURSE:\n    case DELETE_SONG_REQUEST:\n    case DELETE_STUDENT:\n    case DELETE_TASK:\n    case DELETE_TEACHER:\n    case DELETE_TRANSACTION:\n    case IMPORT_SCORES:\n    case IMPORT_STUDENTS:\n    case RESET_STUDENT_PASSWORD:\n    case SETTINGS_SAVED:\n    case SUBMIT_SONG_REQUEST:\n    case UPDATE_COURSE:\n    case UPDATE_STUDENT:\n    case UPDATE_TASK:\n    case UPDATE_TEACHER:\n    case UPDATE_TRANSACTION:\n      return {\n        ...state,\n        snackbar: action.error\n          ? null //{ message: 'An error occurred', variant: 'error' }\n          : action.snackbar,\n      }\n    case SNACKBAR_CLOSED:\n      return { ...state, snackbar: null }\n    default:\n      return state\n  }\n}\n","import { unionBy } from 'lodash'\nimport {\n  ACCOUNT_VIEW_LOADED,\n  ACCOUNT_VIEW_UNLOADED,\n  ACCOUNTS_PAGE_UNLOADED,\n  ADD_TRANSACTION,\n  ADD_TRANSACTIONS,\n  ALERT_CLOSED,\n  ASYNC_START,\n  DELETE_TRANSACTION,\n  IMPORT_SCORES,\n  IMPORT_SCORES_DIALOG_UNLOADED,\n  TRANSACTION_DIALOG_UNLOADED,\n  TRANSACTIONS_DIALOG_UNLOADED,\n  UPDATE_TRANSACTION,\n} from '../constants/actionTypes'\nimport convertScore from '../converter'\n\nconst defaultState = {\n  conversions: null,\n  errors: null,\n  importSummary: null,\n  inProgress: false,\n  total: null,\n  transactions: null,\n}\n\nconst getTotals = (transactions, conversions) => {\n  const sumTransactions = (total, transaction) => total + transaction.amount\n  const sumScores = (total, score) => total + convertScore(score, conversions)\n\n  const bonuses = transactions.bonuses.reduce(sumTransactions, 0)\n  const purchases = transactions.purchases.reduce(sumTransactions, 0)\n  const scores = transactions.scores.reduce(sumScores, 0)\n\n  const balance = bonuses + purchases + scores\n\n  return { balance, bonuses, purchases, scores }\n}\n\nconst addScores = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.filter(\n      (score) => score.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) {\n      transactions.scores = unionBy(usersAdded, [...transactions.scores], '_id')\n    }\n  }\n\n  return transactions\n}\n\nconst addTransaction = (added, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(added.type)) {\n      transactions[type] = [added, ...transactions[type]]\n    }\n  }\n  return transactions\n}\n\nconst addBulkTransaction = (added, transactions, curUser) => {\n  if (curUser) {\n    const curUserId = curUser._id.toString()\n    const usersAdded = added.find(\n      (transaction) => transaction.student._id.toString() === curUserId\n    )\n\n    if (usersAdded) return addTransaction(usersAdded, transactions)\n  }\n\n  return transactions\n}\n\nconst deleteTransaction = (deleted, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(deleted.type)) {\n      transactions[type] = transactions[type].filter(\n        (transaction) => transaction._id !== deleted._id\n      )\n    }\n  }\n  return transactions\n}\n\nconst updateTransaction = (updated, transactions) => {\n  const types = Object.keys(transactions)\n  for (const type of types) {\n    if (type.startsWith(updated.type)) {\n      transactions[type] = transactions[type].map((transaction) =>\n        transaction._id === updated._id ? updated : transaction\n      )\n    }\n  }\n  return transactions\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_VIEW_LOADED:\n      return {\n        ...state,\n        conversions: action.error ? null : action.payload.scoreConverter,\n        total: action.error\n          ? null\n          : getTotals(\n              action.payload.transactions,\n              action.payload.scoreConverter\n            ),\n        transactions: action.error ? null : action.payload.transactions,\n      }\n    case ACCOUNT_VIEW_UNLOADED:\n      return { ...state, conversions: null, total: null, transactions: null }\n    case ACCOUNTS_PAGE_UNLOADED:\n    case ALERT_CLOSED:\n      return { ...state, importSummary: null }\n    case ADD_TRANSACTION:\n      const addedTransactions = !action.error\n        ? addTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(addedTransactions, state.conversions),\n      }\n    case ADD_TRANSACTIONS:\n      const addedBulkTransactions = !action.error\n        ? addBulkTransaction(\n            action.payload.transactions,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedBulkTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(addedBulkTransactions, state.conversions),\n      }\n    case ASYNC_START:\n      if (\n        action.subtype === ADD_TRANSACTION ||\n        action.subtype === ADD_TRANSACTIONS ||\n        action.subtype === DELETE_TRANSACTION ||\n        action.subtype === UPDATE_TRANSACTION\n      ) {\n        return { ...state, errors: null, inProgress: true }\n      } else if (action.subtype === IMPORT_SCORES) {\n        return { ...state, errors: null, importSummary: null, inProgress: true }\n      }\n      break\n    case DELETE_TRANSACTION:\n      //@todo: have server return deleted item to make reducing require less actions being passed\n      const deletedTransactions = !action.error\n        ? deleteTransaction(action.deleted, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : deletedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(deletedTransactions, state.conversions),\n      }\n    case IMPORT_SCORES:\n      const addedScores = !action.error\n        ? addScores(\n            action.payload.scores,\n            { ...state.transactions },\n            action.curStudent\n          )\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        importSummary: action.error ? null : action.payload.results,\n        inProgress: false,\n        transactions: action.error ? state.transactions : addedScores,\n        total: action.error\n          ? state.total\n          : getTotals(addedScores, state.conversions),\n      }\n    case IMPORT_SCORES_DIALOG_UNLOADED:\n    case TRANSACTION_DIALOG_UNLOADED:\n    case TRANSACTIONS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TRANSACTION:\n      const updatedTransactions = !action.error\n        ? updateTransaction(action.payload.transaction, {\n            ...state.transactions,\n          })\n        : {}\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        transactions: action.error ? state.transactions : updatedTransactions,\n        total: action.error\n          ? state.total\n          : getTotals(updatedTransactions, state.conversions),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  SETTINGS_PAGE_UNLOADED,\n  SETTINGS_SAVED,\n  SPOTIFY_LINKER_LOADED,\n  SPOTIFY_LINKER_UNLOADED,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  spotifyAuthUrl: null,\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === SETTINGS_SAVED) {\n        return {\n          ...state,\n          inProgress: true,\n        }\n      }\n      break\n    case SPOTIFY_LINKER_LOADED:\n      return { ...state, spotifyAuthUrl: action.payload.spotifyAuthUrl }\n    case SETTINGS_PAGE_UNLOADED:\n    case SPOTIFY_LINKER_UNLOADED:\n      return defaultState\n    case SETTINGS_SAVED:\n      return {\n        ...state,\n        inProgress: false,\n        errors: action.error ? action.payload.errors : null,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_TASK,\n  TASKS_DIALOG_LOADED,\n  TASKS_DIALOG_UNLOADED,\n  UPDATE_TASK,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  tasks: [],\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === TASKS_DIALOG_LOADED) {\n        return { ...state, inProgress: true }\n      }\n      break\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.filter((task) => task.slug !== action.slug),\n      }\n    case TASKS_DIALOG_LOADED:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        tasks: action.error ? [] : action.payload.tasks,\n      }\n    case TASKS_DIALOG_UNLOADED:\n      return defaultState\n    case UPDATE_TASK:\n      return {\n        ...state,\n        tasks: action.error\n          ? state.tasks\n          : state.tasks.map((task) =>\n              task.slug === action.payload.task.slug\n                ? action.payload.task\n                : task\n            ),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ADD_TEACHER,\n  ASYNC_START,\n  DELETE_TEACHER,\n  MANAGE_TEACHERS_PAGE_LOADED,\n  MANAGE_TEACHERS_PAGE_UNLOADED,\n  TEACHER_DIALOG_UNLOADED,\n  UPDATE_TEACHER,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  errors: null,\n  inProgress: false,\n  teachers: [],\n}\n\nconst sortByLastName = (a, b) => a.lastName.localeCompare(b.lastName)\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : [...state.teachers, action.payload.user].sort((a, b) =>\n              sortByLastName(a, b)\n            ),\n      }\n    case ASYNC_START:\n      if (action.subtype === ADD_TEACHER || action.subtype === UPDATE_TEACHER) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_TEACHER:\n      return {\n        ...state,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers.filter(\n              (teacher) => teacher.username !== action.username\n            ),\n      }\n    case MANAGE_TEACHERS_PAGE_LOADED:\n      return {\n        ...state,\n        teachers: action.payload.users,\n      }\n    case MANAGE_TEACHERS_PAGE_UNLOADED:\n      return defaultState\n    case TEACHER_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case UPDATE_TEACHER:\n      return {\n        ...state,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n        teachers: action.error\n          ? state.teachers\n          : state.teachers\n              .map((user) =>\n                user.username === action.payload.user.username\n                  ? action.payload.user\n                  : user\n              )\n              .sort((a, b) => sortByLastName(a, b)),\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import {\n  ASYNC_START,\n  DELETE_SONG_REQUEST,\n  SONG_REQUESTS_DIALOG_UNLOADED,\n  SONGS_PAGE_UNLOADED,\n  STUDENT_SONGS_PAGE_LOADED,\n  SUBMIT_SONG_REQUEST,\n  TEACHER_SONGS_PAGE_LOADED,\n  UPDATE_SONG_REQUEST,\n} from '../constants/actionTypes'\n\nconst defaultState = {\n  course: null,\n  courses: [],\n  courseSongs: [],\n  errors: null,\n  inProgress: false,\n  userSongs: [],\n}\n\nexport default (state = defaultState, action) => {\n  let courses = []\n  switch (action.type) {\n    case ASYNC_START:\n      if (action.subtype === UPDATE_SONG_REQUEST) {\n        return { ...state, inProgress: true, errors: null }\n      }\n      break\n    case DELETE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      state.courses.forEach((course) => {\n        const courseCopy = { ...course }\n        courseCopy.songs = courseCopy.songs.filter(\n          (song) => song._id.toString() !== action.songId.toString()\n        )\n        courses.push(courseCopy)\n      })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n      }\n    case SONG_REQUESTS_DIALOG_UNLOADED:\n      return { ...state, errors: null }\n    case SONGS_PAGE_UNLOADED:\n      return defaultState\n    case STUDENT_SONGS_PAGE_LOADED:\n      return {\n        ...state,\n        userSongs: action.payload.songsByUser,\n        courseSongs: action.payload.songsByCourse,\n        course: action.payload.course,\n      }\n    case SUBMIT_SONG_REQUEST:\n      return {\n        ...state,\n        userSongs: [action.payload.song, ...state.userSongs],\n        courseSongs: [action.payload.song, ...state.courseSongs],\n      }\n    case TEACHER_SONGS_PAGE_LOADED:\n      return { ...state, courses: action.payload.courses }\n    case UPDATE_SONG_REQUEST:\n      // Changing a deep-nested array requires deep-copying\n      // to avoid altering the previous state\n      !action.error &&\n        state.courses.forEach((course) => {\n          const courseCopy = { ...course }\n          courseCopy.songs = courseCopy.songs.map((song) =>\n            song._id.toString() === action.payload.song._id.toString()\n              ? action.payload.song\n              : song\n          )\n          courses.push(courseCopy)\n        })\n      return {\n        ...state,\n        courses: action.error ? state.courses : courses,\n        errors: action.error ? action.payload.errors : null,\n        inProgress: false,\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import agent from './agent'\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n} from './constants/actionTypes'\n\nconst promiseMiddleware = (store) => (next) => (action) => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type })\n\n    const currentView = store.getState().viewChangeCounter\n    const skipTracking = action.skipTracking\n\n    action.payload.then(\n      (res) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res\n        store.dispatch({ type: ASYNC_END, promise: action.payload })\n        store.dispatch(action)\n      },\n      (error) => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        // console.log('ERROR', error)\n        action.error = true\n        action.payload = error.response.body\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload })\n        }\n        store.dispatch(action)\n      }\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nconst localStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === REGISTER || action.type === LOGIN) {\n    if (!action.error) {\n      window.localStorage.setItem('jwt', action.payload.user.token)\n      agent.setToken(action.payload.user.token)\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt', '')\n    agent.setToken(null)\n  }\n\n  next(action)\n}\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function'\n}\n\nexport { promiseMiddleware, localStorageMiddleware }\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport { createBrowserHistory } from 'history'\nimport { createLogger } from 'redux-logger'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport createRootReducer from './reducer'\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\n\nexport const history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history)\n\nconst getMiddleware = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware\n    )\n  } else {\n    // Enable additional logging in non-production environments\n    return applyMiddleware(\n      myRouterMiddleware,\n      promiseMiddleware,\n      localStorageMiddleware,\n      createLogger()\n    )\n  }\n}\n\nexport const store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(getMiddleware())\n)\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport auth from './reducers/auth'\nimport common from './reducers/common'\nimport courses from './reducers/courses'\nimport nav from './reducers/nav'\nimport notifier from './reducers/notifier'\nimport scores from './reducers/scores'\nimport settings from './reducers/settings'\nimport tasks from './reducers/tasks'\nimport teachers from './reducers/teachers'\nimport songs from './reducers/songs'\n\nexport default (history) =>\n  combineReducers({\n    auth,\n    common,\n    courses,\n    nav,\n    notifier,\n    scores,\n    settings,\n    tasks,\n    teachers,\n    songs,\n    router: connectRouter(history),\n  })\n","import React, { Suspense, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport ChemCashTheme from './Theme'\nimport Home from './Home'\nimport Loading from './Loading'\nimport Login from './Login'\nimport Notifier from './Notifier'\nimport agent from '../agent'\nimport { store } from '../store'\n\nimport { APP_LOAD, REDIRECT } from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => {\n  return {\n    appLoaded: state.common.appLoaded,\n    redirectTo: state.common.redirectTo,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLoad: (payload, token) =>\n    dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n  onRedirect: () => dispatch({ type: REDIRECT }),\n})\n\nconst App = (props) => {\n  const { appLoaded, redirectTo } = props\n\n  useEffect(() => {\n    if (redirectTo) {\n      store.dispatch(push(redirectTo))\n      props.onRedirect()\n    }\n  }, [redirectTo])\n\n  useEffect(() => {\n    const token = window.localStorage.getItem('jwt')\n    if (token) {\n      agent.setToken(token)\n    }\n\n    props.onLoad(token ? agent.Auth.current() : null, token)\n  }, [])\n\n  if (appLoaded) {\n    return (\n      <ThemeProvider theme={ChemCashTheme}>\n        <CssBaseline />\n        <Notifier>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route path='/' component={Home} />\n            </Switch>\n          </Suspense>\n        </Notifier>\n      </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={ChemCashTheme}>\n      <CssBaseline />\n      <Loading />\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\n\nimport App from './components/App'\nimport { store, history } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path='/' component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}