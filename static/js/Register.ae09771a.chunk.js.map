{"version":3,"sources":["components/ListErrors.js","components/Register.js"],"names":["ListErrors","errors","this","props","className","Object","keys","map","key","React","PureComponent","Register","changeEmail","ev","onChangeEmail","target","value","changePassword","onChangePassword","changeUsername","onChangeUsername","submitForm","username","email","password","preventDefault","onSubmit","onUnload","to","type","placeholder","onChange","autoComplete","disabled","inProgress","connect","state","auth","dispatch","UPDATE_FIELD_AUTH","payload","agent","Auth","register","REGISTER","REGISTER_PAGE_UNLOADED"],"mappings":"iKAEMA,E,uKAEF,IAAMC,EAASC,KAAKC,MAAMF,OAC1B,OAAIA,EAEA,wBAAIG,UAAU,kBACXC,OAAOC,KAAKL,GAAQM,KAAI,SAACC,GACxB,OACE,wBAAIA,IAAKA,GACNA,EADH,IACSP,EAAOO,QAOjB,S,GAhBYC,IAAMC,eAqBhBV,O,yICKTW,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,YAAc,SAACC,GAAD,OAAQ,EAAKV,MAAMW,cAAcD,EAAGE,OAAOC,QAC9D,EAAKC,eAAiB,SAACJ,GAAD,OAAQ,EAAKV,MAAMe,iBAAiBL,EAAGE,OAAOC,QACpE,EAAKG,eAAiB,SAACN,GAAD,OAAQ,EAAKV,MAAMiB,iBAAiBP,EAAGE,OAAOC,QACpE,EAAKK,WAAa,SAACC,EAAUC,EAAOC,GAAlB,OAA+B,SAACX,GAChDA,EAAGY,iBACH,EAAKtB,MAAMuB,SAASJ,EAAUC,EAAOC,KAP3B,E,mEAYZtB,KAAKC,MAAMwB,a,+BAIX,IAAMJ,EAAQrB,KAAKC,MAAMoB,MACnBC,EAAWtB,KAAKC,MAAMqB,SACtBF,EAAWpB,KAAKC,MAAMmB,SAE5B,OACE,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,kBAAd,WACA,uBAAGA,UAAU,kBACX,kBAAC,IAAD,CAAMwB,GAAG,UAAT,qBAGF,kBAAC,IAAD,CAAY3B,OAAQC,KAAKC,MAAMF,SAE/B,0BAAMyB,SAAUxB,KAAKmB,WAAWC,EAAUC,EAAOC,IAC/C,kCACE,8BAAUpB,UAAU,cAClB,2BACEA,UAAU,+BACVyB,KAAK,OACLC,YAAY,WACZd,MAAOd,KAAKC,MAAMmB,UAAY,GAC9BS,SAAU7B,KAAKiB,kBAInB,8BAAUf,UAAU,cAClB,2BACEA,UAAU,+BACVyB,KAAK,QACLG,aAAa,WACbF,YAAY,QACZd,MAAOd,KAAKC,MAAMoB,OAAS,GAC3BQ,SAAU7B,KAAKU,eAInB,8BAAUR,UAAU,cAClB,2BACEA,UAAU,+BACVyB,KAAK,WACLG,aAAa,mBACbF,YAAY,WACZd,MAAOd,KAAKC,MAAMqB,UAAY,GAC9BO,SAAU7B,KAAKe,kBAInB,4BACEb,UAAU,uCACVyB,KAAK,SACLI,SAAU/B,KAAKC,MAAM+B,YAHvB,qB,GAnEKzB,IAAMC,eAoFdyB,uBApGS,SAACC,GAAD,sBAAiBA,EAAMC,SAEpB,SAACC,GAAD,MAAe,CACxCxB,cAAe,SAACE,GAAD,OACbsB,EAAS,CAAET,KAAMU,IAAmB/B,IAAK,QAASQ,WACpDE,iBAAkB,SAACF,GAAD,OAChBsB,EAAS,CAAET,KAAMU,IAAmB/B,IAAK,WAAYQ,WACvDI,iBAAkB,SAACJ,GAAD,OAChBsB,EAAS,CAAET,KAAMU,IAAmB/B,IAAK,WAAYQ,WACvDU,SAAU,SAACJ,EAAUC,EAAOC,GAC1B,IAAMgB,EAAUC,IAAMC,KAAKC,SAASrB,EAAUC,EAAOC,GACrDc,EAAS,CAAET,KAAMe,IAAUJ,aAE7Bb,SAAU,kBAAMW,EAAS,CAAET,KAAMgB,UAuFpBV,CAA6CxB","file":"static/js/Register.ae09771a.chunk.js","sourcesContent":["import React from 'react'\n\nclass ListErrors extends React.PureComponent {\n  render() {\n    const errors = this.props.errors\n    if (errors) {\n      return (\n        <ul className='error-messages'>\n          {Object.keys(errors).map((key) => {\n            return (\n              <li key={key}>\n                {key} {errors[key]}\n              </li>\n            )\n          })}\n        </ul>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default ListErrors\n","import { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport ListErrors from './ListErrors'\nimport React from 'react'\n\nimport agent from '../agent'\nimport {\n  UPDATE_FIELD_AUTH,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED,\n} from '../constants/actionTypes'\n\nconst mapStateToProps = (state) => ({ ...state.auth })\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeEmail: (value) =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n  onChangePassword: (value) =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n  onChangeUsername: (value) =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\n  onSubmit: (username, email, password) => {\n    const payload = agent.Auth.register(username, email, password)\n    dispatch({ type: REGISTER, payload })\n  },\n  onUnload: () => dispatch({ type: REGISTER_PAGE_UNLOADED }),\n})\n\nclass Register extends React.PureComponent {\n  constructor() {\n    super()\n    this.changeEmail = (ev) => this.props.onChangeEmail(ev.target.value)\n    this.changePassword = (ev) => this.props.onChangePassword(ev.target.value)\n    this.changeUsername = (ev) => this.props.onChangeUsername(ev.target.value)\n    this.submitForm = (username, email, password) => (ev) => {\n      ev.preventDefault()\n      this.props.onSubmit(username, email, password)\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onUnload()\n  }\n\n  render() {\n    const email = this.props.email\n    const password = this.props.password\n    const username = this.props.username\n\n    return (\n      <div className='auth-page'>\n        <div className='container page'>\n          <div className='row'>\n            <div className='col-md-6 offset-md-3 col-xs-12'>\n              <h1 className='text-xs-center'>Sign Up</h1>\n              <p className='text-xs-center'>\n                <Link to='/login'>Have an account?</Link>\n              </p>\n\n              <ListErrors errors={this.props.errors} />\n\n              <form onSubmit={this.submitForm(username, email, password)}>\n                <fieldset>\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='text'\n                      placeholder='Username'\n                      value={this.props.username || ''}\n                      onChange={this.changeUsername}\n                    />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='email'\n                      autoComplete='username'\n                      placeholder='Email'\n                      value={this.props.email || ''}\n                      onChange={this.changeEmail}\n                    />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='password'\n                      autoComplete='current-password'\n                      placeholder='Password'\n                      value={this.props.password || ''}\n                      onChange={this.changePassword}\n                    />\n                  </fieldset>\n\n                  <button\n                    className='btn btn-lg btn-primary pull-xs-right'\n                    type='submit'\n                    disabled={this.props.inProgress}\n                  >\n                    Sign up\n                  </button>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n"],"sourceRoot":""}